/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReferralProgram,
  ReferralProgramInterface,
} from "../../contracts/ReferralProgram";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "deliver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011df380380620011df8339818101604052810190620000379190620001e9565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200021b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b6000620001b18262000190565b9050919050565b620001c381620001a4565b8114620001cf57600080fd5b50565b600081519050620001e381620001b8565b92915050565b6000602082840312156200020257620002016200016b565b5b60006200021284828501620001d2565b91505092915050565b610fb4806200022b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632b68b9c614610067578063715018a6146100715780638da5cb5b1461007b5780639da5e83214610099578063ef4e06ec146100c9578063f2fde38b146100e7575b600080fd5b61006f610103565b005b6100796102e8565b005b610083610370565b60405161009091906107d0565b60405180910390f35b6100b360048036038101906100ae9190610a7d565b610399565b6040516100c09190610b10565b60405180910390f35b6100d16105a6565b6040516100de9190610b8a565b60405180910390f35b61010160048036038101906100fc9190610ba5565b6105cc565b005b61010b6106c3565b73ffffffffffffffffffffffffffffffffffffffff16610129610370565b73ffffffffffffffffffffffffffffffffffffffff161461017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610c2f565b60405180910390fd5b6000610189610370565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161022591906107d0565b602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610c64565b6040518363ffffffff1660e01b8152600401610283929190610ca0565b6020604051808303816000875af11580156102a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c69190610cf5565b506102cf6102e8565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6102f06106c3565b73ffffffffffffffffffffffffffffffffffffffff1661030e610370565b73ffffffffffffffffffffffffffffffffffffffff1614610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b90610c2f565b60405180910390fd5b61036e60006106cb565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006103a36106c3565b73ffffffffffffffffffffffffffffffffffffffff166103c1610370565b73ffffffffffffffffffffffffffffffffffffffff1614610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610c2f565b60405180910390fd5b600083510361045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045290610d94565b60405180910390fd5b815183511461049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690610e26565b60405180910390fd5b60005b835181101561059b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8583815181106104fc576104fb610e46565b5b602002602001015185848151811061051757610516610e46565b5b60200260200101516040518363ffffffff1660e01b815260040161053c929190610ca0565b6020604051808303816000875af115801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190610cf5565b61058857600080fd5b808061059390610ea4565b9150506104a2565b506001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105d46106c3565b73ffffffffffffffffffffffffffffffffffffffff166105f2610370565b73ffffffffffffffffffffffffffffffffffffffff1614610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f90610c2f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90610f5e565b60405180910390fd5b6106c0816106cb565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ba8261078f565b9050919050565b6107ca816107af565b82525050565b60006020820190506107e560008301846107c1565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61084d82610804565b810181811067ffffffffffffffff8211171561086c5761086b610815565b5b80604052505050565b600061087f6107eb565b905061088b8282610844565b919050565b600067ffffffffffffffff8211156108ab576108aa610815565b5b602082029050602081019050919050565b600080fd5b6108ca816107af565b81146108d557600080fd5b50565b6000813590506108e7816108c1565b92915050565b60006109006108fb84610890565b610875565b90508083825260208201905060208402830185811115610923576109226108bc565b5b835b8181101561094c578061093888826108d8565b845260208401935050602081019050610925565b5050509392505050565b600082601f83011261096b5761096a6107ff565b5b813561097b8482602086016108ed565b91505092915050565b600067ffffffffffffffff82111561099f5761099e610815565b5b602082029050602081019050919050565b6000819050919050565b6109c3816109b0565b81146109ce57600080fd5b50565b6000813590506109e0816109ba565b92915050565b60006109f96109f484610984565b610875565b90508083825260208201905060208402830185811115610a1c57610a1b6108bc565b5b835b81811015610a455780610a3188826109d1565b845260208401935050602081019050610a1e565b5050509392505050565b600082601f830112610a6457610a636107ff565b5b8135610a748482602086016109e6565b91505092915050565b60008060408385031215610a9457610a936107f5565b5b600083013567ffffffffffffffff811115610ab257610ab16107fa565b5b610abe85828601610956565b925050602083013567ffffffffffffffff811115610adf57610ade6107fa565b5b610aeb85828601610a4f565b9150509250929050565b60008115159050919050565b610b0a81610af5565b82525050565b6000602082019050610b256000830184610b01565b92915050565b6000819050919050565b6000610b50610b4b610b468461078f565b610b2b565b61078f565b9050919050565b6000610b6282610b35565b9050919050565b6000610b7482610b57565b9050919050565b610b8481610b69565b82525050565b6000602082019050610b9f6000830184610b7b565b92915050565b600060208284031215610bbb57610bba6107f5565b5b6000610bc9848285016108d8565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c19602083610bd2565b9150610c2482610be3565b602082019050919050565b60006020820190508181036000830152610c4881610c0c565b9050919050565b600081519050610c5e816109ba565b92915050565b600060208284031215610c7a57610c796107f5565b5b6000610c8884828501610c4f565b91505092915050565b610c9a816109b0565b82525050565b6000604082019050610cb560008301856107c1565b610cc26020830184610c91565b9392505050565b610cd281610af5565b8114610cdd57600080fd5b50565b600081519050610cef81610cc9565b92915050565b600060208284031215610d0b57610d0a6107f5565b5b6000610d1984828501610ce0565b91505092915050565b7f526566657272616c50726f6772616d3a20726563697069656e74206c656e677460008201527f68206973207a65726f0000000000000000000000000000000000000000000000602082015250565b6000610d7e602983610bd2565b9150610d8982610d22565b604082019050919050565b60006020820190508181036000830152610dad81610d71565b9050919050565b7f526566657272616c50726f6772616d3a20617267756d656e74732073697a652060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000610e10602883610bd2565b9150610e1b82610db4565b604082019050919050565b60006020820190508181036000830152610e3f81610e03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eaf826109b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ee157610ee0610e75565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610f48602683610bd2565b9150610f5382610eec565b604082019050919050565b60006020820190508181036000830152610f7781610f3b565b905091905056fea264697066735822122032917c52b48a992065d01aa7197afafae5f134749dbd710e539fe221acf90f8564736f6c634300080d0033";

type ReferralProgramConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReferralProgram> {
    return super.deploy(_DPS, overrides || {}) as Promise<ReferralProgram>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): ReferralProgram {
    return super.attach(address) as ReferralProgram;
  }
  override connect(signer: Signer): ReferralProgram__factory {
    return super.connect(signer) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new utils.Interface(_abi) as ReferralProgramInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralProgram {
    return new Contract(address, _abi, signerOrProvider) as ReferralProgram;
  }
}
