/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ReferralProgram, ReferralProgramInterface } from '../../contracts/ReferralProgram';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '_DPS',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DPS',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'recipients',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'deliver',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destruct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161091a38038061091a83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61082e806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632b68b9c614610067578063715018a6146100715780638da5cb5b146100795780639da5e832146100a3578063ef4e06ec146100c6578063f2fde38b146100d9575b600080fd5b61006f6100ec565b005b61006f610227565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100b1366004610669565b61025d565b604051901515815260200161009a565b600154610086906001600160a01b031681565b61006f6100e7366004610729565b61048c565b6000546001600160a01b0316331461011f5760405162461bcd60e51b81526004016101169061074b565b60405180910390fd5b600080546001600160a01b03166001546040516370a0823160e01b81523060048201529192506001600160a01b03169063a9059cbb90839083906370a0823190602401602060405180830381865afa15801561017f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a39190610780565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102129190610799565b5061021b610227565b806001600160a01b0316ff5b6000546001600160a01b031633146102515760405162461bcd60e51b81526004016101169061074b565b61025b6000610527565b565b600080546001600160a01b031633146102885760405162461bcd60e51b81526004016101169061074b565b82516000036102eb5760405162461bcd60e51b815260206004820152602960248201527f526566657272616c50726f6772616d3a20726563697069656e74206c656e677460448201526868206973207a65726f60b81b6064820152608401610116565b815183511461034d5760405162461bcd60e51b815260206004820152602860248201527f526566657272616c50726f6772616d3a20617267756d656e74732073697a65206044820152670dad2e6dac2e8c6d60c31b6064820152608401610116565b60005b83518110156104825760015484516001600160a01b039091169063a9059cbb90869084908110610382576103826107bb565b602002602001015185848151811061039c5761039c6107bb565b60200260200101516040518363ffffffff1660e01b81526004016103d59291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156103f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104189190610799565b6104705760405162461bcd60e51b8152602060048201526024808201527f526566657272616c50726f6772616d3a20445053207472616e736665722066616044820152631a5b195960e21b6064820152608401610116565b8061047a816107d1565b915050610350565b5060019392505050565b6000546001600160a01b031633146104b65760405162461bcd60e51b81526004016101169061074b565b6001600160a01b03811661051b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610116565b61052481610527565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105b6576105b6610577565b604052919050565b600067ffffffffffffffff8211156105d8576105d8610577565b5060051b60200190565b80356001600160a01b03811681146105f957600080fd5b919050565b600082601f83011261060f57600080fd5b8135602061062461061f836105be565b61058d565b82815260059290921b8401810191818101908684111561064357600080fd5b8286015b8481101561065e5780358352918301918301610647565b509695505050505050565b6000806040838503121561067c57600080fd5b823567ffffffffffffffff8082111561069457600080fd5b818501915085601f8301126106a857600080fd5b813560206106b861061f836105be565b82815260059290921b840181019181810190898411156106d757600080fd5b948201945b838610156106fc576106ed866105e2565b825294820194908201906106dc565b9650508601359250508082111561071257600080fd5b5061071f858286016105fe565b9150509250929050565b60006020828403121561073b57600080fd5b610744826105e2565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561079257600080fd5b5051919050565b6000602082840312156107ab57600080fd5b8151801515811461074457600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016107f157634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212208e48b2d9e34b31da70dec6d337f5cd19520d31f3edc2509b291dd45d4439fb1164736f6c634300080d0033';

type ReferralProgramConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ReferralProgramConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(_DPS: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<ReferralProgram> {
    return super.deploy(_DPS, overrides || {}) as Promise<ReferralProgram>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): ReferralProgram {
    return super.attach(address) as ReferralProgram;
  }
  override connect(signer: Signer): ReferralProgram__factory {
    return super.connect(signer) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new utils.Interface(_abi) as ReferralProgramInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ReferralProgram {
    return new Contract(address, _abi, signerOrProvider) as ReferralProgram;
  }
}
