/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReferralProgram,
  ReferralProgramInterface,
} from "../../contracts/ReferralProgram";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "deliver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012a7380380620012a78339818101604052810190620000379190620001e9565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200021b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b6000620001b18262000190565b9050919050565b620001c381620001a4565b8114620001cf57600080fd5b50565b600081519050620001e381620001b8565b92915050565b6000602082840312156200020257620002016200016b565b5b60006200021284828501620001d2565b91505092915050565b61107c806200022b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632b68b9c614610067578063715018a6146100715780638da5cb5b1461007b5780639da5e83214610099578063ef4e06ec146100c9578063f2fde38b146100e7575b600080fd5b61006f610103565b005b6100796102e8565b005b610083610370565b6040516100909190610806565b60405180910390f35b6100b360048036038101906100ae9190610ab3565b610399565b6040516100c09190610b46565b60405180910390f35b6100d16105dc565b6040516100de9190610bc0565b60405180910390f35b61010160048036038101906100fc9190610bdb565b610602565b005b61010b6106f9565b73ffffffffffffffffffffffffffffffffffffffff16610129610370565b73ffffffffffffffffffffffffffffffffffffffff161461017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610c65565b60405180910390fd5b6000610189610370565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102259190610806565b602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610c9a565b6040518363ffffffff1660e01b8152600401610283929190610cd6565b6020604051808303816000875af11580156102a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c69190610d2b565b506102cf6102e8565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6102f06106f9565b73ffffffffffffffffffffffffffffffffffffffff1661030e610370565b73ffffffffffffffffffffffffffffffffffffffff1614610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b90610c65565b60405180910390fd5b61036e6000610701565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006103a36106f9565b73ffffffffffffffffffffffffffffffffffffffff166103c1610370565b73ffffffffffffffffffffffffffffffffffffffff1614610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610c65565b60405180910390fd5b600083510361045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045290610dca565b60405180910390fd5b815183511461049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690610e5c565b60405180910390fd5b60005b83518110156105d157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8583815181106104fc576104fb610e7c565b5b602002602001015185848151811061051757610516610e7c565b5b60200260200101516040518363ffffffff1660e01b815260040161053c929190610cd6565b6020604051808303816000875af115801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190610d2b565b6105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b590610f1d565b60405180910390fd5b80806105c990610f6c565b9150506104a2565b506001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61060a6106f9565b73ffffffffffffffffffffffffffffffffffffffff16610628610370565b73ffffffffffffffffffffffffffffffffffffffff161461067e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067590610c65565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e490611026565b60405180910390fd5b6106f681610701565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f0826107c5565b9050919050565b610800816107e5565b82525050565b600060208201905061081b60008301846107f7565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108838261083a565b810181811067ffffffffffffffff821117156108a2576108a161084b565b5b80604052505050565b60006108b5610821565b90506108c1828261087a565b919050565b600067ffffffffffffffff8211156108e1576108e061084b565b5b602082029050602081019050919050565b600080fd5b610900816107e5565b811461090b57600080fd5b50565b60008135905061091d816108f7565b92915050565b6000610936610931846108c6565b6108ab565b90508083825260208201905060208402830185811115610959576109586108f2565b5b835b81811015610982578061096e888261090e565b84526020840193505060208101905061095b565b5050509392505050565b600082601f8301126109a1576109a0610835565b5b81356109b1848260208601610923565b91505092915050565b600067ffffffffffffffff8211156109d5576109d461084b565b5b602082029050602081019050919050565b6000819050919050565b6109f9816109e6565b8114610a0457600080fd5b50565b600081359050610a16816109f0565b92915050565b6000610a2f610a2a846109ba565b6108ab565b90508083825260208201905060208402830185811115610a5257610a516108f2565b5b835b81811015610a7b5780610a678882610a07565b845260208401935050602081019050610a54565b5050509392505050565b600082601f830112610a9a57610a99610835565b5b8135610aaa848260208601610a1c565b91505092915050565b60008060408385031215610aca57610ac961082b565b5b600083013567ffffffffffffffff811115610ae857610ae7610830565b5b610af48582860161098c565b925050602083013567ffffffffffffffff811115610b1557610b14610830565b5b610b2185828601610a85565b9150509250929050565b60008115159050919050565b610b4081610b2b565b82525050565b6000602082019050610b5b6000830184610b37565b92915050565b6000819050919050565b6000610b86610b81610b7c846107c5565b610b61565b6107c5565b9050919050565b6000610b9882610b6b565b9050919050565b6000610baa82610b8d565b9050919050565b610bba81610b9f565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b600060208284031215610bf157610bf061082b565b5b6000610bff8482850161090e565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c4f602083610c08565b9150610c5a82610c19565b602082019050919050565b60006020820190508181036000830152610c7e81610c42565b9050919050565b600081519050610c94816109f0565b92915050565b600060208284031215610cb057610caf61082b565b5b6000610cbe84828501610c85565b91505092915050565b610cd0816109e6565b82525050565b6000604082019050610ceb60008301856107f7565b610cf86020830184610cc7565b9392505050565b610d0881610b2b565b8114610d1357600080fd5b50565b600081519050610d2581610cff565b92915050565b600060208284031215610d4157610d4061082b565b5b6000610d4f84828501610d16565b91505092915050565b7f526566657272616c50726f6772616d3a20726563697069656e74206c656e677460008201527f68206973207a65726f0000000000000000000000000000000000000000000000602082015250565b6000610db4602983610c08565b9150610dbf82610d58565b604082019050919050565b60006020820190508181036000830152610de381610da7565b9050919050565b7f526566657272616c50726f6772616d3a20617267756d656e74732073697a652060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000610e46602883610c08565b9150610e5182610dea565b604082019050919050565b60006020820190508181036000830152610e7581610e39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f526566657272616c50726f6772616d3a20445053207472616e7366657220666160008201527f696c656400000000000000000000000000000000000000000000000000000000602082015250565b6000610f07602483610c08565b9150610f1282610eab565b604082019050919050565b60006020820190508181036000830152610f3681610efa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f77826109e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610fa957610fa8610f3d565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611010602683610c08565b915061101b82610fb4565b604082019050919050565b6000602082019050818103600083015261103f81611003565b905091905056fea2646970667358221220ac73ef42a63b4b1c4a633757bdad5ff43bb3cd51f3580c8273a818a7f3efa3c264736f6c634300080d0033";

type ReferralProgramConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReferralProgram> {
    return super.deploy(_DPS, overrides || {}) as Promise<ReferralProgram>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): ReferralProgram {
    return super.attach(address) as ReferralProgram;
  }
  override connect(signer: Signer): ReferralProgram__factory {
    return super.connect(signer) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new utils.Interface(_abi) as ReferralProgramInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralProgram {
    return new Contract(address, _abi, signerOrProvider) as ReferralProgram;
  }
}
