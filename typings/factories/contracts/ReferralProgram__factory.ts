/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReferralProgram,
  ReferralProgramInterface,
} from "../../contracts/ReferralProgram";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "deliver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161094638038061094683398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61085a806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632b68b9c614610067578063715018a6146100715780638da5cb5b146100795780639da5e832146100a3578063ef4e06ec146100c6578063f2fde38b146100d9575b600080fd5b61006f6100ec565b005b61006f610245565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100b66100b1366004610693565b61027b565b604051901515815260200161009a565b600154610086906001600160a01b031681565b61006f6100e7366004610753565b6104b6565b6000546001600160a01b0316331461011f5760405162461bcd60e51b815260040161011690610775565b60405180910390fd5b600080546001600160a01b03166001546040516370a0823160e01b81523060048201529192506001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b15801561017a57600080fd5b505afa15801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b291906107aa565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156101f857600080fd5b505af115801561020c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023091906107c3565b50610239610245565b806001600160a01b0316ff5b6000546001600160a01b0316331461026f5760405162461bcd60e51b815260040161011690610775565b6102796000610551565b565b600080546001600160a01b031633146102a65760405162461bcd60e51b815260040161011690610775565b82516103065760405162461bcd60e51b815260206004820152602960248201527f526566657272616c50726f6772616d3a20726563697069656e74206c656e677460448201526868206973207a65726f60b81b6064820152608401610116565b81518351146103685760405162461bcd60e51b815260206004820152602860248201527f526566657272616c50726f6772616d3a20617267756d656e74732073697a65206044820152670dad2e6dac2e8c6d60c31b6064820152608401610116565b60005b83518110156104ac5760015484516001600160a01b039091169063a9059cbb9086908490811061039d5761039d6107e5565b60200260200101518584815181106103b7576103b76107e5565b60200260200101516040518363ffffffff1660e01b81526004016103f09291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b15801561040a57600080fd5b505af115801561041e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044291906107c3565b61049a5760405162461bcd60e51b8152602060048201526024808201527f526566657272616c50726f6772616d3a20445053207472616e736665722066616044820152631a5b195960e21b6064820152608401610116565b806104a4816107fb565b91505061036b565b5060019392505050565b6000546001600160a01b031633146104e05760405162461bcd60e51b815260040161011690610775565b6001600160a01b0381166105455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610116565b61054e81610551565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105e0576105e06105a1565b604052919050565b600067ffffffffffffffff821115610602576106026105a1565b5060051b60200190565b80356001600160a01b038116811461062357600080fd5b919050565b600082601f83011261063957600080fd5b8135602061064e610649836105e8565b6105b7565b82815260059290921b8401810191818101908684111561066d57600080fd5b8286015b848110156106885780358352918301918301610671565b509695505050505050565b600080604083850312156106a657600080fd5b823567ffffffffffffffff808211156106be57600080fd5b818501915085601f8301126106d257600080fd5b813560206106e2610649836105e8565b82815260059290921b8401810191818101908984111561070157600080fd5b948201945b83861015610726576107178661060c565b82529482019490820190610706565b9650508601359250508082111561073c57600080fd5b5061074985828601610628565b9150509250929050565b60006020828403121561076557600080fd5b61076e8261060c565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156107bc57600080fd5b5051919050565b6000602082840312156107d557600080fd5b8151801515811461076e57600080fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561081d57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220497ab7fbe0e7e003b2f848112d42ec97b9f654327a78b71a6b62ce57faeb77ea64736f6c63430008090033";

type ReferralProgramConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralProgramConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReferralProgram__factory extends ContractFactory {
  constructor(...args: ReferralProgramConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReferralProgram> {
    return super.deploy(_DPS, overrides || {}) as Promise<ReferralProgram>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): ReferralProgram {
    return super.attach(address) as ReferralProgram;
  }
  override connect(signer: Signer): ReferralProgram__factory {
    return super.connect(signer) as ReferralProgram__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralProgramInterface {
    return new utils.Interface(_abi) as ReferralProgramInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralProgram {
    return new Contract(address, _abi, signerOrProvider) as ReferralProgram;
  }
}
