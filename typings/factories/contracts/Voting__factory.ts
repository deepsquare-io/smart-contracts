/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addTag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ballots",
    outputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "choices",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "ballotIndex",
        type: "uint32",
      },
    ],
    name: "closeBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllResults",
    outputs: [
      {
        internalType: "uint256[][]",
        name: "",
        type: "uint256[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotIndex",
        type: "uint256",
      },
    ],
    name: "getBallotResult",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallots",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "subject",
            type: "string",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "tagIndex",
            type: "uint32",
          },
        ],
        internalType: "struct Voting.Ballot[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChoices",
    outputs: [
      {
        internalType: "string[][]",
        name: "",
        type: "string[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTags",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "grantProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resultStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tags",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "totalProxyAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "ballotIndex",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "choiceIndex",
        type: "uint32",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620022bc380380620022bc8339810160408190526200003491620000fc565b6200003f33620000ac565b6001600160a01b0381166200009a5760405162461bcd60e51b815260206004820152601a60248201527f566f74653a204450532061646472657373206973207a65726f2e000000000000604482015260640160405180910390fd5b6001600160a01b03166080526200012e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200010f57600080fd5b81516001600160a01b03811681146200012757600080fd5b9392505050565b60805161215662000166600039600081816102ac0152818161064e0152818161075a01528181610981015261121301526121566000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806398c81bbf116100ad578063de0cc45b11610071578063de0cc45b1461027f578063eb87c6dc14610292578063ef4e06ec146102a7578063f2fde38b146102ce578063f50ea7ff146102e157600080fd5b806398c81bbf1461020f578063995d9ab714610224578063cb8f344814610239578063ce65c4e31461024c578063cff9293a1461026c57600080fd5b80635c632b38116100f45780635c632b3814610198578063715018a6146101ba57806374773a45146101c257806376d9be08146101d55780638da5cb5b146101ea57600080fd5b806320822abc1461012657806324db32ac1461014f57806337dc3dfa14610164578063471a980114610177575b600080fd5b610139610134366004611a0f565b6102f4565b6040516101469190611a75565b60405180910390f35b61016261015d366004611b5f565b6103a0565b005b610139610172366004611c56565b61058e565b61018a610185366004611c8f565b6105d2565b604051908152602001610146565b6101ab6101a6366004611a0f565b6107fc565b60405161014693929190611cc2565b6101626108c9565b6101626101d0366004611c8f565b6108ff565b6101dd610cc5565b6040516101469190611d2d565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610146565b610217610d5e565b6040516101469190611de4565b61022c610e75565b6040516101469190611e39565b61018a610247366004611c56565b610f45565b61025f61025a366004611a0f565b610f82565b6040516101469190611e4c565b61016261027a366004611e5f565b611019565b61016261028d366004611e7b565b611421565b61029a61148d565b6040516101469190611eb8565b6101f77f000000000000000000000000000000000000000000000000000000000000000081565b6101626102dc366004611f41565b61159d565b6101626102ef366004611f5c565b611638565b6001818154811061030457600080fd5b90600052602060002001600091509050805461031f90611f77565b80601f016020809104026020016040519081016040528092919081815260200182805461034b90611f77565b80156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b505050505081565b6000546001600160a01b031633146103d35760405162461bcd60e51b81526004016103ca90611fb2565b60405180910390fd5b60015463ffffffff83161061042a5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2054616720696e64657820697320746f6f20686967682e000060448201526064016103ca565b604080516060810182528481526000602080830182905263ffffffff8616938301939093526002805460018101825591819052825180519394929091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019261049792849201906118c6565b506020828101516001928301805460409095015163ffffffff166101000264ffffffff00199215159290921664ffffffffff1990951694909417179092556003805491820181556000528251610514927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9092019184019061194a565b5060048054600190810190915560058054909101815560009081525b8151811015610588576005805461054990600190611ffd565b8154811061055957610559612014565b6000918252602080832090910180546001810182559083529082200155806105808161202a565b915050610530565b50505050565b6003828154811061059e57600080fd5b9060005260206000200181815481106105b657600080fd5b9060005260206000200160009150915050805461031f90611f77565b60015460009063ffffffff83161061062c5760405162461bcd60e51b815260206004820152601d60248201527f566f74696e673a2054616720696e64657820697320746f6f206869676800000060448201526064016103ca565b6040516370a0823160e01b81526001600160a01b0384811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561069257600080fd5b505afa1580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190612045565b905060005b6001600160a01b038516600090815260066020908152604080832063ffffffff8089168552925290912060020154811690821610156107f4576001600160a01b03858116600090815260066020908152604080832063ffffffff89811685529083528184209086168452600101909152908190205490516370a0823160e01b815290821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561079e57600080fd5b505afa1580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190612045565b6107e0908361205e565b9150806107ec81612076565b9150506106cf565b509392505050565b6002818154811061080c57600080fd5b906000526020600020906002020160009150905080600001805461082f90611f77565b80601f016020809104026020016040519081016040528092919081815260200182805461085b90611f77565b80156108a85780601f1061087d576101008083540402835291602001916108a8565b820191906000526020600020905b81548152906001019060200180831161088b57829003601f168201915b5050506001909301549192505060ff81169063ffffffff6101009091041683565b6000546001600160a01b031633146108f35760405162461bcd60e51b81526004016103ca90611fb2565b6108fd6000611876565b565b60015463ffffffff8216106109565760405162461bcd60e51b815260206004820152601d60248201527f566f74696e673a2054616720696e64657820697320746f6f206869676800000060448201526064016103ca565b6040516370a0823160e01b81526001600160a01b03838116600483015269054b40b1f852bda00000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b1580156109c557600080fd5b505afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190612045565b101580610a1157506001600160a01b038216155b610a675760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2050726f787920686173206e6f7420656e6f756768204450536044820152601760f91b60648201526084016103ca565b33600090815260076020908152604080832063ffffffff851684529091529020546001600160a01b031615610bdf5733600081815260076020908152604080832063ffffffff808716808652918452828520546001600160a01b0316855260068452828520918552908352818420948452918490528220546002840154908216926001858101939192610afa921661209a565b63ffffffff90811682526020808301939093526040918201600090812054858316825260018781019586905293822080546001600160a01b0319166001600160a01b0390921691909117905560028601549093928492610b5a921661209a565b63ffffffff90811682526020808301939093526040918201600090812080546001600160a01b0319166001600160a01b039690961695909517909455338452918590528220805463ffffffff1916905560028401805490911691610bbd836120bf565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050505b33600090815260076020908152604080832063ffffffff85168452909152902080546001600160a01b0319166001600160a01b03841690811790915515610cc1576001600160a01b038216600090815260066020908152604080832063ffffffff808616855290835281842060028101805433808852838752858820805463ffffffff1916928616929092179091558154841687526001830190955292852080546001600160a01b03191690941790935581549293921691610ca083612076565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505b5050565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610d5557600084815260209081902083018054604080518285028101850190915281815292830182828015610d4157602002820191906000526020600020905b815481526020019060010190808311610d2d575b505050505081526020019060010190610ce9565b50505050905090565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610d5557838290600052602060002001805480602002602001604051908101604052809291908181526020016000905b82821015610e62578382906000526020600020018054610dd590611f77565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0190611f77565b8015610e4e5780601f10610e2357610100808354040283529160200191610e4e565b820191906000526020600020905b815481529060010190602001808311610e3157829003601f168201915b505050505081526020019060010190610db6565b5050505081526020019060010190610d82565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610d55578382906000526020600020018054610eb890611f77565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee490611f77565b8015610f315780601f10610f0657610100808354040283529160200191610f31565b820191906000526020600020905b815481529060010190602001808311610f1457829003601f168201915b505050505081526020019060010190610e99565b60058281548110610f5557600080fd5b906000526020600020018181548110610f6d57600080fd5b90600052602060002001600091509150505481565b6002546060908210610fa65760405162461bcd60e51b81526004016103ca906120df565b60058281548110610fb957610fb9612014565b9060005260206000200180548060200260200160405190810160405280929190818152602001828054801561100d57602002820191906000526020600020905b815481526020019060010190808311610ff9575b50505050509050919050565b60025463ffffffff8316106110405760405162461bcd60e51b81526004016103ca906120df565b60028263ffffffff168154811061105957611059612014565b600091825260209091206001600290920201015460ff16156110bd5760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2042616c6c6f7420697320636c6f7365642e0000000000000060448201526064016103ca565b8063ffffffff1660038363ffffffff16815481106110dd576110dd612014565b600091825260209091200154116111405760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2043686f69636520696e64657820697320746f6f20686967686044820152601760f91b60648201526084016103ca565b3360009081526007602052604081206002805483919063ffffffff871690811061116c5761116c612014565b6000918252602080832060029290920290910160010154610100900463ffffffff1683528201929092526040019020546001600160a01b0316146111f25760405162461bcd60e51b815260206004820152601a60248201527f566f74696e673a20566f74652069732064656c6567617465642e00000000000060448201526064016103ca565b6040516370a0823160e01b815233600482015269054b40b1f852bda00000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561125d57600080fd5b505afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112959190612045565b10156112e35760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a204e6f7420656e6f7567682044505320746f20766f74652e0060448201526064016103ca565b60048263ffffffff16815481106112fc576112fc612014565b6000918252602080832033845260029290920290910160010190526040902054640100000000900460ff166113cc57600160048363ffffffff168154811061134657611346612014565b6000918252602080832033845260016002909302019190910190526040902080549115156401000000000264ff00000000199092169190911790556004805463ffffffff841690811061139b5761139b612014565b600091825260208083206002909202909101805460018101825590835291200180546001600160a01b031916331790555b8060048363ffffffff16815481106113e6576113e6612014565b60009182526020808320338452600292909202909101600101905260409020805463ffffffff191663ffffffff929092169190911790555050565b6000546001600160a01b0316331461144b5760405162461bcd60e51b81526004016103ca90611fb2565b6001805480820182556000919091528151610cc1917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019060208401906118c6565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610d5557838290600052602060002090600202016040518060600160405290816000820180546114e490611f77565b80601f016020809104026020016040519081016040528092919081815260200182805461151090611f77565b801561155d5780601f106115325761010080835404028352916020019161155d565b820191906000526020600020905b81548152906001019060200180831161154057829003601f168201915b505050918352505060019182015460ff8116151560208084019190915261010090910463ffffffff166040909201919091529183529290920191016114b1565b6000546001600160a01b031633146115c75760405162461bcd60e51b81526004016103ca90611fb2565b6001600160a01b03811661162c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ca565b61163581611876565b50565b6000546001600160a01b031633146116625760405162461bcd60e51b81526004016103ca90611fb2565b60025463ffffffff8216106116895760405162461bcd60e51b81526004016103ca906120df565b60028163ffffffff16815481106116a2576116a2612014565b600091825260209091206001600290920201015460ff16156117065760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2042616c6c6f7420616c726561647920636c6f7365642e000060448201526064016103ca565b600160028263ffffffff168154811061172157611721612014565b60009182526020822060029190910201600101805460ff1916921515929092179091556004805463ffffffff841690811061175e5761175e612014565b90600052602060002090600202019050600060028363ffffffff168154811061178957611789612014565b6000918252602082206001600290920201015463ffffffff6101009091041691505b82548110156105885760008360000182815481106117cb576117cb612014565b6000918252602090912001546001600160a01b031690506117ec81846105d2565b60058663ffffffff168154811061180557611805612014565b600091825260208083206001600160a01b03861684526001890190915260409092205491018054909163ffffffff1690811061184357611843612014565b90600052602060002001600082825461185c919061205e565b9091555082915061186e90508161202a565b9150506117ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546118d290611f77565b90600052602060002090601f0160209004810192826118f4576000855561193a565b82601f1061190d57805160ff191683800117855561193a565b8280016001018555821561193a579182015b8281111561193a57825182559160200191906001019061191f565b506119469291506119a3565b5090565b828054828255906000526020600020908101928215611997579160200282015b8281111561199757825180516119879184916020909101906118c6565b509160200191906001019061196a565b506119469291506119b8565b5b8082111561194657600081556001016119a4565b808211156119465760006119cc82826119d5565b506001016119b8565b5080546119e190611f77565b6000825580601f106119f1575050565b601f01602090049060005260206000209081019061163591906119a3565b600060208284031215611a2157600080fd5b5035919050565b6000815180845260005b81811015611a4e57602081850181015186830182015201611a32565b81811115611a60576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a886020830184611a28565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ace57611ace611a8f565b604052919050565b600082601f830112611ae757600080fd5b813567ffffffffffffffff811115611b0157611b01611a8f565b611b14601f8201601f1916602001611aa5565b818152846020838601011115611b2957600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff81168114611b5a57600080fd5b919050565b600080600060608486031215611b7457600080fd5b833567ffffffffffffffff80821115611b8c57600080fd5b611b9887838801611ad6565b945060209150611ba9828701611b46565b9350604086013581811115611bbd57600080fd5b8601601f81018813611bce57600080fd5b803582811115611be057611be0611a8f565b8060051b611bef858201611aa5565b918252828101850191858101908b841115611c0957600080fd5b86850192505b83831015611c4557823586811115611c275760008081fd5b611c358d8983890101611ad6565b8352509186019190860190611c0f565b809750505050505050509250925092565b60008060408385031215611c6957600080fd5b50508035926020909101359150565b80356001600160a01b0381168114611b5a57600080fd5b60008060408385031215611ca257600080fd5b611cab83611c78565b9150611cb960208401611b46565b90509250929050565b606081526000611cd56060830186611a28565b93151560208301525063ffffffff91909116604090910152919050565b600081518084526020808501945080840160005b83811015611d2257815187529582019590820190600101611d06565b509495945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d8257603f19888603018452611d70858351611cf2565b94509285019290850190600101611d54565b5092979650505050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015611dd7578284038952611dc5848351611a28565b98850198935090840190600101611dad565b5091979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d8257603f19888603018452611e27858351611d8f565b94509285019290850190600101611e0b565b602081526000611a886020830184611d8f565b602081526000611a886020830184611cf2565b60008060408385031215611e7257600080fd5b611cab83611b46565b600060208284031215611e8d57600080fd5b813567ffffffffffffffff811115611ea457600080fd5b611eb084828501611ad6565b949350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f3357603f19898403018552815160608151818652611f0582870182611a28565b838b01511515878c01529289015163ffffffff16958901959095525094870194925090860190600101611edf565b509098975050505050505050565b600060208284031215611f5357600080fd5b611a8882611c78565b600060208284031215611f6e57600080fd5b611a8882611b46565b600181811c90821680611f8b57607f821691505b60208210811415611fac57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561200f5761200f611fe7565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561203e5761203e611fe7565b5060010190565b60006020828403121561205757600080fd5b5051919050565b6000821982111561207157612071611fe7565b500190565b600063ffffffff8083168181141561209057612090611fe7565b6001019392505050565b600063ffffffff838116908316818110156120b7576120b7611fe7565b039392505050565b600063ffffffff8216806120d5576120d5611fe7565b6000190192915050565b60208082526021908201527f566f74696e673a2042616c6c6f7420696e64657820697320746f6f20686967686040820152601760f91b60608201526080019056fea264697066735822122027513b6c4d73ee0cc009aa9ad6fc35ca676dcf169833402a6af04391e6ecd77564736f6c63430008090033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Voting> {
    return super.deploy(_DPS, overrides || {}) as Promise<Voting>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): Voting {
    return super.attach(address) as Voting;
  }
  override connect(signer: Signer): Voting__factory {
    return super.connect(signer) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new utils.Interface(_abi) as VotingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voting {
    return new Contract(address, _abi, signerOrProvider) as Voting;
  }
}
