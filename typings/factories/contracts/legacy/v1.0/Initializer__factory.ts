/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Initializer, InitializerInterface } from '../../../../contracts/legacy/v1.0/Initializer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract DeepSquare',
        name: '_DPS',
        type: 'address',
      },
      {
        internalType: 'contract Eligibility',
        name: '_eligibility',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DPS',
    outputs: [
      {
        internalType: 'contract DeepSquare',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'recipients',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'airdrop',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destruct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eligibility',
    outputs: [
      {
        internalType: 'contract Eligibility',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'tier',
            type: 'uint8',
          },
          {
            internalType: 'string',
            name: 'validator',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'transactionId',
            type: 'string',
          },
        ],
        internalType: 'struct Result[]',
        name: 'batch',
        type: 'tuple[]',
      },
    ],
    name: 'setResults',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610d31380380610d3183398101604081905261002f916100d1565b61003833610069565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100ce57600080fd5b50565b600080604083850312156100e457600080fd5b82516100ef816100b9565b6020840151909250610100816100b9565b809150509250929050565b610c178061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f2578063c7d9ba5714610103578063ef4e06ec14610116578063f2fde38b1461012957600080fd5b80630dc140001461008d5780632b68b9c6146100bd57806367243482146100c7578063715018a6146100ea575b600080fd5b6002546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c561013c565b005b6100da6100d53660046107af565b610277565b60405190151581526020016100b4565b6100c5610412565b6000546001600160a01b03166100a0565b6100c56101113660046108da565b610448565b6001546100a0906001600160a01b031681565b6100c5610137366004610a24565b6105a2565b6000546001600160a01b0316331461016f5760405162461bcd60e51b815260040161016690610a46565b60405180910390fd5b600080546001600160a01b03166001546040516370a0823160e01b81523060048201529192506001600160a01b03169063a9059cbb90839083906370a0823190602401602060405180830381865afa1580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f39190610a7b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561023e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102629190610a94565b5061026b610412565b806001600160a01b0316ff5b600080546001600160a01b031633146102a25760405162461bcd60e51b815260040161016690610a46565b82516000036103015760405162461bcd60e51b815260206004820152602560248201527f496e697469616c697a65723a20726563697069656e74206c656e677468206973604482015264207a65726f60d81b6064820152608401610166565b81518351146103225760405162461bcd60e51b815260040161016690610ab6565b60005b83518110156104085760015484516001600160a01b039091169063a9059cbb9086908490811061035757610357610afa565b602002602001015185848151811061037157610371610afa565b60200260200101516040518363ffffffff1660e01b81526004016103aa9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190610a94565b6103f657600080fd5b8061040081610b10565b915050610325565b5060019392505050565b6000546001600160a01b0316331461043c5760405162461bcd60e51b815260040161016690610a46565b610446600061063d565b565b6000546001600160a01b031633146104725760405162461bcd60e51b815260040161016690610a46565b60008251116104c35760405162461bcd60e51b815260206004820181905260248201527f496e697469616c697a65723a206163636f756e7473206861732073697a6520306044820152606401610166565b80518251146104e45760405162461bcd60e51b815260040161016690610ab6565b60005b825181101561059d5760025483516001600160a01b03909116906303e67ff69085908490811061051957610519610afa565b602002602001015184848151811061053357610533610afa565b60200260200101516040518363ffffffff1660e01b8152600401610558929190610b84565b600060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b50505050808061059590610b10565b9150506104e7565b505050565b6000546001600160a01b031633146105cc5760405162461bcd60e51b815260040161016690610a46565b6001600160a01b0381166106315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610166565b61063a8161063d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106c6576106c661068d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156106f5576106f561068d565b604052919050565b600067ffffffffffffffff8211156107175761071761068d565b5060051b60200190565b80356001600160a01b038116811461073857600080fd5b919050565b600082601f83011261074e57600080fd5b8135602061076361075e836106fd565b6106cc565b82815260059290921b8401810191818101908684111561078257600080fd5b8286015b848110156107a45761079781610721565b8352918301918301610786565b509695505050505050565b600080604083850312156107c257600080fd5b823567ffffffffffffffff808211156107da57600080fd5b6107e68683870161073d565b93506020915081850135818111156107fd57600080fd5b85019050601f8101861361081057600080fd5b803561081e61075e826106fd565b81815260059190911b8201830190838101908883111561083d57600080fd5b928401925b8284101561085b57833582529284019290840190610842565b80955050505050509250929050565b600082601f83011261087b57600080fd5b813567ffffffffffffffff8111156108955761089561068d565b6108a8601f8201601f19166020016106cc565b8181528460208386010111156108bd57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156108ed57600080fd5b823567ffffffffffffffff8082111561090557600080fd5b6109118683870161073d565b935060209150818501358181111561092857600080fd5b8501601f8101871361093957600080fd5b803561094761075e826106fd565b81815260059190911b8201840190848101908983111561096657600080fd5b8584015b83811015610a13578035868111156109825760008081fd5b85016060818d03601f190181131561099a5760008081fd5b6109a26106a3565b8983013560ff811681146109b65760008081fd5b81526040830135898111156109cb5760008081fd5b6109d98f8c8387010161086a565b828c0152509082013590888211156109f15760008081fd5b6109ff8e8b8486010161086a565b60408201528552505091860191860161096a565b508096505050505050509250929050565b600060208284031215610a3657600080fd5b610a3f82610721565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610a8d57600080fd5b5051919050565b600060208284031215610aa657600080fd5b81518015158114610a3f57600080fd5b60208082526024908201527f496e697469616c697a65723a20617267756d656e74732073697a65206d69736d6040820152630c2e8c6d60e31b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201610b3057634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815180845260005b81811015610b5d57602081850181015186830182015201610b41565b81811115610b6f576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b03831681526040602082015260ff825116604082015260006020830151606080840152610bba60a0840182610b37565b90506040840151603f19848303016080850152610bd78282610b37565b969550505050505056fea2646970667358221220dd271a5cc22e75a4f66a97c036bf12c35e5b7d314d8adfa51ccda5c6419dbccc64736f6c634300080d0033';

type InitializerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: InitializerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Initializer__factory extends ContractFactory {
  constructor(...args: InitializerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Initializer> {
    return super.deploy(_DPS, _eligibility, overrides || {}) as Promise<Initializer>;
  }
  override getDeployTransaction(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _eligibility, overrides || {});
  }
  override attach(address: string): Initializer {
    return super.attach(address) as Initializer;
  }
  override connect(signer: Signer): Initializer__factory {
    return super.connect(signer) as Initializer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializerInterface {
    return new utils.Interface(_abi) as InitializerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Initializer {
    return new Contract(address, _abi, signerOrProvider) as Initializer;
  }
}
