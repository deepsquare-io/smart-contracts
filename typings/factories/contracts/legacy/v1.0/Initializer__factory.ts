/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Initializer, InitializerInterface } from '../../../../contracts/legacy/v1.0/Initializer';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract DeepSquare',
        name: '_DPS',
        type: 'address',
      },
      {
        internalType: 'contract Eligibility',
        name: '_eligibility',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DPS',
    outputs: [
      {
        internalType: 'contract DeepSquare',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'recipients',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'airdrop',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'destruct',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eligibility',
    outputs: [
      {
        internalType: 'contract Eligibility',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'tier',
            type: 'uint8',
          },
          {
            internalType: 'string',
            name: 'validator',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'transactionId',
            type: 'string',
          },
        ],
        internalType: 'struct Result[]',
        name: 'batch',
        type: 'tuple[]',
      },
    ],
    name: 'setResults',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620019cf380380620019cf833981810160405281019062000037919062000270565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002b7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b6000620001f382620001d2565b9050919050565b6200020581620001e6565b81146200021157600080fd5b50565b6000815190506200022581620001fa565b92915050565b60006200023882620001d2565b9050919050565b6200024a816200022b565b81146200025657600080fd5b50565b6000815190506200026a816200023f565b92915050565b600080604083850312156200028a5762000289620001ad565b5b60006200029a8582860162000214565b9250506020620002ad8582860162000259565b9150509250929050565b61170880620002c76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063c7d9ba571461010d578063ef4e06ec14610129578063f2fde38b1461014757610088565b80630dc140001461008d5780632b68b9c6146100ab57806367243482146100b5578063715018a6146100e5575b600080fd5b610095610163565b6040516100a29190610aae565b60405180910390f35b6100b3610189565b005b6100cf60048036038101906100ca9190610d6d565b61038c565b6040516100dc9190610e00565b60405180910390f35b6100ed6105a9565b005b6100f7610631565b6040516101049190610e2a565b60405180910390f35b610127600480360381019061012291906110ba565b61065a565b005b610131610845565b60405161013e9190611153565b60405180910390f35b610161600480360381019061015c919061116e565b61086b565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610191610963565b73ffffffffffffffffffffffffffffffffffffffff166101af610631565b73ffffffffffffffffffffffffffffffffffffffff1614610205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fc906111f8565b60405180910390fd5b600061020f610631565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102ab9190610e2a565b60206040518083038186803b1580156102c357600080fd5b505afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb919061122d565b6040518363ffffffff1660e01b8152600401610318929190611269565b602060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a91906112be565b506103736105a9565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6000610396610963565b73ffffffffffffffffffffffffffffffffffffffff166103b4610631565b73ffffffffffffffffffffffffffffffffffffffff161461040a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610401906111f8565b60405180910390fd5b60008351141561044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104469061135d565b60405180910390fd5b8151835114610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a906113ef565b60405180910390fd5b60005b835181101561059e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8583815181106104f0576104ef61140f565b5b602002602001015185848151811061050b5761050a61140f565b5b60200260200101516040518363ffffffff1660e01b8152600401610530929190611269565b602060405180830381600087803b15801561054a57600080fd5b505af115801561055e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058291906112be565b61058b57600080fd5b80806105969061146d565b915050610496565b506001905092915050565b6105b1610963565b73ffffffffffffffffffffffffffffffffffffffff166105cf610631565b73ffffffffffffffffffffffffffffffffffffffff1614610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061c906111f8565b60405180910390fd5b61062f600061096b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610662610963565b73ffffffffffffffffffffffffffffffffffffffff16610680610631565b73ffffffffffffffffffffffffffffffffffffffff16146106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cd906111f8565b60405180910390fd5b600082511161071a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071190611502565b60405180910390fd5b805182511461075e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610755906113ef565b60405180910390fd5b60005b825181101561084057600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e67ff68483815181106107bb576107ba61140f565b5b60200260200101518484815181106107d6576107d561140f565b5b60200260200101516040518363ffffffff1660e01b81526004016107fb929190611610565b600060405180830381600087803b15801561081557600080fd5b505af1158015610829573d6000803e3d6000fd5b5050505080806108389061146d565b915050610761565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610873610963565b73ffffffffffffffffffffffffffffffffffffffff16610891610631565b73ffffffffffffffffffffffffffffffffffffffff16146108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de906111f8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e906116b2565b60405180910390fd5b6109608161096b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a74610a6f610a6a84610a2f565b610a4f565b610a2f565b9050919050565b6000610a8682610a59565b9050919050565b6000610a9882610a7b565b9050919050565b610aa881610a8d565b82525050565b6000602082019050610ac36000830184610a9f565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b2b82610ae2565b810181811067ffffffffffffffff82111715610b4a57610b49610af3565b5b80604052505050565b6000610b5d610ac9565b9050610b698282610b22565b919050565b600067ffffffffffffffff821115610b8957610b88610af3565b5b602082029050602081019050919050565b600080fd5b6000610baa82610a2f565b9050919050565b610bba81610b9f565b8114610bc557600080fd5b50565b600081359050610bd781610bb1565b92915050565b6000610bf0610beb84610b6e565b610b53565b90508083825260208201905060208402830185811115610c1357610c12610b9a565b5b835b81811015610c3c5780610c288882610bc8565b845260208401935050602081019050610c15565b5050509392505050565b600082601f830112610c5b57610c5a610add565b5b8135610c6b848260208601610bdd565b91505092915050565b600067ffffffffffffffff821115610c8f57610c8e610af3565b5b602082029050602081019050919050565b6000819050919050565b610cb381610ca0565b8114610cbe57600080fd5b50565b600081359050610cd081610caa565b92915050565b6000610ce9610ce484610c74565b610b53565b90508083825260208201905060208402830185811115610d0c57610d0b610b9a565b5b835b81811015610d355780610d218882610cc1565b845260208401935050602081019050610d0e565b5050509392505050565b600082601f830112610d5457610d53610add565b5b8135610d64848260208601610cd6565b91505092915050565b60008060408385031215610d8457610d83610ad3565b5b600083013567ffffffffffffffff811115610da257610da1610ad8565b5b610dae85828601610c46565b925050602083013567ffffffffffffffff811115610dcf57610dce610ad8565b5b610ddb85828601610d3f565b9150509250929050565b60008115159050919050565b610dfa81610de5565b82525050565b6000602082019050610e156000830184610df1565b92915050565b610e2481610b9f565b82525050565b6000602082019050610e3f6000830184610e1b565b92915050565b600067ffffffffffffffff821115610e6057610e5f610af3565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060ff82169050919050565b610e9181610e7b565b8114610e9c57600080fd5b50565b600081359050610eae81610e88565b92915050565b600080fd5b600067ffffffffffffffff821115610ed457610ed3610af3565b5b610edd82610ae2565b9050602081019050919050565b82818337600083830152505050565b6000610f0c610f0784610eb9565b610b53565b905082815260208101848484011115610f2857610f27610eb4565b5b610f33848285610eea565b509392505050565b600082601f830112610f5057610f4f610add565b5b8135610f60848260208601610ef9565b91505092915050565b600060608284031215610f7f57610f7e610e71565b5b610f896060610b53565b90506000610f9984828501610e9f565b600083015250602082013567ffffffffffffffff811115610fbd57610fbc610e76565b5b610fc984828501610f3b565b602083015250604082013567ffffffffffffffff811115610fed57610fec610e76565b5b610ff984828501610f3b565b60408301525092915050565b600061101861101384610e45565b610b53565b9050808382526020820190506020840283018581111561103b5761103a610b9a565b5b835b8181101561108257803567ffffffffffffffff8111156110605761105f610add565b5b80860161106d8982610f69565b8552602085019450505060208101905061103d565b5050509392505050565b600082601f8301126110a1576110a0610add565b5b81356110b1848260208601611005565b91505092915050565b600080604083850312156110d1576110d0610ad3565b5b600083013567ffffffffffffffff8111156110ef576110ee610ad8565b5b6110fb85828601610c46565b925050602083013567ffffffffffffffff81111561111c5761111b610ad8565b5b6111288582860161108c565b9150509250929050565b600061113d82610a7b565b9050919050565b61114d81611132565b82525050565b60006020820190506111686000830184611144565b92915050565b60006020828403121561118457611183610ad3565b5b600061119284828501610bc8565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111e260208361119b565b91506111ed826111ac565b602082019050919050565b60006020820190508181036000830152611211816111d5565b9050919050565b60008151905061122781610caa565b92915050565b60006020828403121561124357611242610ad3565b5b600061125184828501611218565b91505092915050565b61126381610ca0565b82525050565b600060408201905061127e6000830185610e1b565b61128b602083018461125a565b9392505050565b61129b81610de5565b81146112a657600080fd5b50565b6000815190506112b881611292565b92915050565b6000602082840312156112d4576112d3610ad3565b5b60006112e2848285016112a9565b91505092915050565b7f496e697469616c697a65723a20726563697069656e74206c656e67746820697360008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061134760258361119b565b9150611352826112eb565b604082019050919050565b600060208201905081810360008301526113768161133a565b9050919050565b7f496e697469616c697a65723a20617267756d656e74732073697a65206d69736d60008201527f6174636800000000000000000000000000000000000000000000000000000000602082015250565b60006113d960248361119b565b91506113e48261137d565b604082019050919050565b60006020820190508181036000830152611408816113cc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061147882610ca0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114ab576114aa61143e565b5b600182019050919050565b7f496e697469616c697a65723a206163636f756e7473206861732073697a652030600082015250565b60006114ec60208361119b565b91506114f7826114b6565b602082019050919050565b6000602082019050818103600083015261151b816114df565b9050919050565b61152b81610e7b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561156b578082015181840152602081019050611550565b8381111561157a576000848401525b50505050565b600061158b82611531565b611595818561153c565b93506115a581856020860161154d565b6115ae81610ae2565b840191505092915050565b60006060830160008301516115d16000860182611522565b50602083015184820360208601526115e98282611580565b915050604083015184820360408601526116038282611580565b9150508091505092915050565b60006040820190506116256000830185610e1b565b818103602083015261163781846115b9565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061169c60268361119b565b91506116a782611640565b604082019050919050565b600060208201905081810360008301526116cb8161168f565b905091905056fea264697066735822122008114b39cbdadbe83bdc4fea50aa5a643fdf68f77cb0cf98b8b0fcad5d161bc964736f6c63430008090033';

type InitializerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: InitializerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Initializer__factory extends ContractFactory {
  constructor(...args: InitializerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<Initializer> {
    return super.deploy(_DPS, _eligibility, overrides || {}) as Promise<Initializer>;
  }
  override getDeployTransaction(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _eligibility, overrides || {});
  }
  override attach(address: string): Initializer {
    return super.attach(address) as Initializer;
  }
  override connect(signer: Signer): Initializer__factory {
    return super.connect(signer) as Initializer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializerInterface {
    return new utils.Interface(_abi) as InitializerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Initializer {
    return new Contract(address, _abi, signerOrProvider) as Initializer;
  }
}
