/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Initializer,
  InitializerInterface,
} from "../../../../contracts/legacy/v1.0/Initializer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DeepSquare",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract Eligibility",
        name: "_eligibility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract DeepSquare",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "airdrop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eligibility",
    outputs: [
      {
        internalType: "contract Eligibility",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "tier",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "validator",
            type: "string",
          },
          {
            internalType: "string",
            name: "transactionId",
            type: "string",
          },
        ],
        internalType: "struct Result[]",
        name: "batch",
        type: "tuple[]",
      },
    ],
    name: "setResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d5d380380610d5d83398101604081905261002f916100d1565b61003833610069565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100ce57600080fd5b50565b600080604083850312156100e457600080fd5b82516100ef816100b9565b6020840151909250610100816100b9565b809150509250929050565b610c438061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f2578063c7d9ba5714610103578063ef4e06ec14610116578063f2fde38b1461012957600080fd5b80630dc140001461008d5780632b68b9c6146100bd57806367243482146100c7578063715018a6146100ea575b600080fd5b6002546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c561013c565b005b6100da6100d53660046107d9565b610295565b60405190151581526020016100b4565b6100c561043c565b6000546001600160a01b03166100a0565b6100c5610111366004610904565b610472565b6001546100a0906001600160a01b031681565b6100c5610137366004610a4e565b6105cc565b6000546001600160a01b0316331461016f5760405162461bcd60e51b815260040161016690610a70565b60405180910390fd5b600080546001600160a01b03166001546040516370a0823160e01b81523060048201529192506001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b1580156101ca57600080fd5b505afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102029190610aa5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102809190610abe565b5061028961043c565b806001600160a01b0316ff5b600080546001600160a01b031633146102c05760405162461bcd60e51b815260040161016690610a70565b825161031c5760405162461bcd60e51b815260206004820152602560248201527f496e697469616c697a65723a20726563697069656e74206c656e677468206973604482015264207a65726f60d81b6064820152608401610166565b815183511461033d5760405162461bcd60e51b815260040161016690610ae0565b60005b83518110156104325760015484516001600160a01b039091169063a9059cbb9086908490811061037257610372610b24565b602002602001015185848151811061038c5761038c610b24565b60200260200101516040518363ffffffff1660e01b81526004016103c59291906001600160a01b03929092168252602082015260400190565b602060405180830381600087803b1580156103df57600080fd5b505af11580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190610abe565b61042057600080fd5b8061042a81610b3a565b915050610340565b5060019392505050565b6000546001600160a01b031633146104665760405162461bcd60e51b815260040161016690610a70565b6104706000610667565b565b6000546001600160a01b0316331461049c5760405162461bcd60e51b815260040161016690610a70565b60008251116104ed5760405162461bcd60e51b815260206004820181905260248201527f496e697469616c697a65723a206163636f756e7473206861732073697a6520306044820152606401610166565b805182511461050e5760405162461bcd60e51b815260040161016690610ae0565b60005b82518110156105c75760025483516001600160a01b03909116906303e67ff69085908490811061054357610543610b24565b602002602001015184848151811061055d5761055d610b24565b60200260200101516040518363ffffffff1660e01b8152600401610582929190610bb0565b600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050505080806105bf90610b3a565b915050610511565b505050565b6000546001600160a01b031633146105f65760405162461bcd60e51b815260040161016690610a70565b6001600160a01b03811661065b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610166565b61066481610667565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156106f0576106f06106b7565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561071f5761071f6106b7565b604052919050565b600067ffffffffffffffff821115610741576107416106b7565b5060051b60200190565b80356001600160a01b038116811461076257600080fd5b919050565b600082601f83011261077857600080fd5b8135602061078d61078883610727565b6106f6565b82815260059290921b840181019181810190868411156107ac57600080fd5b8286015b848110156107ce576107c18161074b565b83529183019183016107b0565b509695505050505050565b600080604083850312156107ec57600080fd5b823567ffffffffffffffff8082111561080457600080fd5b61081086838701610767565b935060209150818501358181111561082757600080fd5b85019050601f8101861361083a57600080fd5b803561084861078882610727565b81815260059190911b8201830190838101908883111561086757600080fd5b928401925b828410156108855783358252928401929084019061086c565b80955050505050509250929050565b600082601f8301126108a557600080fd5b813567ffffffffffffffff8111156108bf576108bf6106b7565b6108d2601f8201601f19166020016106f6565b8181528460208386010111156108e757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561091757600080fd5b823567ffffffffffffffff8082111561092f57600080fd5b61093b86838701610767565b935060209150818501358181111561095257600080fd5b8501601f8101871361096357600080fd5b803561097161078882610727565b81815260059190911b8201840190848101908983111561099057600080fd5b8584015b83811015610a3d578035868111156109ac5760008081fd5b85016060818d03601f19018113156109c45760008081fd5b6109cc6106cd565b8983013560ff811681146109e05760008081fd5b81526040830135898111156109f55760008081fd5b610a038f8c83870101610894565b828c015250908201359088821115610a1b5760008081fd5b610a298e8b84860101610894565b604082015285525050918601918601610994565b508096505050505050509250929050565b600060208284031215610a6057600080fd5b610a698261074b565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610ab757600080fd5b5051919050565b600060208284031215610ad057600080fd5b81518015158114610a6957600080fd5b60208082526024908201527f496e697469616c697a65723a20617267756d656e74732073697a65206d69736d6040820152630c2e8c6d60e31b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610b5c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815180845260005b81811015610b8957602081850181015186830182015201610b6d565b81811115610b9b576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b03831681526040602082015260ff825116604082015260006020830151606080840152610be660a0840182610b63565b90506040840151603f19848303016080850152610c038282610b63565b969550505050505056fea26469706673582212202437dd4ebabcc42ba457528f305c41cfc7c33fd62104a85b392158733a789b3d64736f6c63430008090033";

type InitializerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Initializer__factory extends ContractFactory {
  constructor(...args: InitializerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Initializer> {
    return super.deploy(
      _DPS,
      _eligibility,
      overrides || {}
    ) as Promise<Initializer>;
  }
  override getDeployTransaction(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _eligibility, overrides || {});
  }
  override attach(address: string): Initializer {
    return super.attach(address) as Initializer;
  }
  override connect(signer: Signer): Initializer__factory {
    return super.connect(signer) as Initializer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializerInterface {
    return new utils.Interface(_abi) as InitializerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Initializer {
    return new Contract(address, _abi, signerOrProvider) as Initializer;
  }
}
