/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Initializer,
  InitializerInterface,
} from "../../../../contracts/legacy/v1.0/Initializer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DeepSquare",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract Eligibility",
        name: "_eligibility",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract DeepSquare",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "airdrop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "destruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eligibility",
    outputs: [
      {
        internalType: "contract Eligibility",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "tier",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "validator",
            type: "string",
          },
          {
            internalType: "string",
            name: "transactionId",
            type: "string",
          },
        ],
        internalType: "struct Result[]",
        name: "batch",
        type: "tuple[]",
      },
    ],
    name: "setResults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200199f3803806200199f833981810160405281019062000037919062000270565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002b7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b6000620001f382620001d2565b9050919050565b6200020581620001e6565b81146200021157600080fd5b50565b6000815190506200022581620001fa565b92915050565b60006200023882620001d2565b9050919050565b6200024a816200022b565b81146200025657600080fd5b50565b6000815190506200026a816200023f565b92915050565b600080604083850312156200028a5762000289620001ad565b5b60006200029a8582860162000214565b9250506020620002ad8582860162000259565b9150509250929050565b6116d880620002c76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ef578063c7d9ba571461010d578063ef4e06ec14610129578063f2fde38b1461014757610088565b80630dc140001461008d5780632b68b9c6146100ab57806367243482146100b5578063715018a6146100e5575b600080fd5b610095610163565b6040516100a29190610a7f565b60405180910390f35b6100b3610189565b005b6100cf60048036038101906100ca9190610d3e565b61036e565b6040516100dc9190610dd1565b60405180910390f35b6100ed61057b565b005b6100f7610603565b6040516101049190610dfb565b60405180910390f35b6101276004803603810190610122919061108b565b61062c565b005b610131610817565b60405161013e9190611124565b60405180910390f35b610161600480360381019061015c919061113f565b61083d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610191610934565b73ffffffffffffffffffffffffffffffffffffffff166101af610603565b73ffffffffffffffffffffffffffffffffffffffff1614610205576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fc906111c9565b60405180910390fd5b600061020f610603565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102ab9190610dfb565b602060405180830381865afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec91906111fe565b6040518363ffffffff1660e01b815260040161030992919061123a565b6020604051808303816000875af1158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c919061128f565b5061035561057b565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b6000610378610934565b73ffffffffffffffffffffffffffffffffffffffff16610396610603565b73ffffffffffffffffffffffffffffffffffffffff16146103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e3906111c9565b60405180910390fd5b6000835103610430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104279061132e565b60405180910390fd5b8151835114610474576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046b906113c0565b60405180910390fd5b60005b835181101561057057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8583815181106104d1576104d06113e0565b5b60200260200101518584815181106104ec576104eb6113e0565b5b60200260200101516040518363ffffffff1660e01b815260040161051192919061123a565b6020604051808303816000875af1158015610530573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610554919061128f565b61055d57600080fd5b80806105689061143e565b915050610477565b506001905092915050565b610583610934565b73ffffffffffffffffffffffffffffffffffffffff166105a1610603565b73ffffffffffffffffffffffffffffffffffffffff16146105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee906111c9565b60405180910390fd5b610601600061093c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610634610934565b73ffffffffffffffffffffffffffffffffffffffff16610652610603565b73ffffffffffffffffffffffffffffffffffffffff16146106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f906111c9565b60405180910390fd5b60008251116106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e3906114d2565b60405180910390fd5b8051825114610730576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610727906113c0565b60405180910390fd5b60005b825181101561081257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e67ff684838151811061078d5761078c6113e0565b5b60200260200101518484815181106107a8576107a76113e0565b5b60200260200101516040518363ffffffff1660e01b81526004016107cd9291906115e0565b600060405180830381600087803b1580156107e757600080fd5b505af11580156107fb573d6000803e3d6000fd5b50505050808061080a9061143e565b915050610733565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610845610934565b73ffffffffffffffffffffffffffffffffffffffff16610863610603565b73ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b0906111c9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f90611682565b60405180910390fd5b6109318161093c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a45610a40610a3b84610a00565b610a20565b610a00565b9050919050565b6000610a5782610a2a565b9050919050565b6000610a6982610a4c565b9050919050565b610a7981610a5e565b82525050565b6000602082019050610a946000830184610a70565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610afc82610ab3565b810181811067ffffffffffffffff82111715610b1b57610b1a610ac4565b5b80604052505050565b6000610b2e610a9a565b9050610b3a8282610af3565b919050565b600067ffffffffffffffff821115610b5a57610b59610ac4565b5b602082029050602081019050919050565b600080fd5b6000610b7b82610a00565b9050919050565b610b8b81610b70565b8114610b9657600080fd5b50565b600081359050610ba881610b82565b92915050565b6000610bc1610bbc84610b3f565b610b24565b90508083825260208201905060208402830185811115610be457610be3610b6b565b5b835b81811015610c0d5780610bf98882610b99565b845260208401935050602081019050610be6565b5050509392505050565b600082601f830112610c2c57610c2b610aae565b5b8135610c3c848260208601610bae565b91505092915050565b600067ffffffffffffffff821115610c6057610c5f610ac4565b5b602082029050602081019050919050565b6000819050919050565b610c8481610c71565b8114610c8f57600080fd5b50565b600081359050610ca181610c7b565b92915050565b6000610cba610cb584610c45565b610b24565b90508083825260208201905060208402830185811115610cdd57610cdc610b6b565b5b835b81811015610d065780610cf28882610c92565b845260208401935050602081019050610cdf565b5050509392505050565b600082601f830112610d2557610d24610aae565b5b8135610d35848260208601610ca7565b91505092915050565b60008060408385031215610d5557610d54610aa4565b5b600083013567ffffffffffffffff811115610d7357610d72610aa9565b5b610d7f85828601610c17565b925050602083013567ffffffffffffffff811115610da057610d9f610aa9565b5b610dac85828601610d10565b9150509250929050565b60008115159050919050565b610dcb81610db6565b82525050565b6000602082019050610de66000830184610dc2565b92915050565b610df581610b70565b82525050565b6000602082019050610e106000830184610dec565b92915050565b600067ffffffffffffffff821115610e3157610e30610ac4565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060ff82169050919050565b610e6281610e4c565b8114610e6d57600080fd5b50565b600081359050610e7f81610e59565b92915050565b600080fd5b600067ffffffffffffffff821115610ea557610ea4610ac4565b5b610eae82610ab3565b9050602081019050919050565b82818337600083830152505050565b6000610edd610ed884610e8a565b610b24565b905082815260208101848484011115610ef957610ef8610e85565b5b610f04848285610ebb565b509392505050565b600082601f830112610f2157610f20610aae565b5b8135610f31848260208601610eca565b91505092915050565b600060608284031215610f5057610f4f610e42565b5b610f5a6060610b24565b90506000610f6a84828501610e70565b600083015250602082013567ffffffffffffffff811115610f8e57610f8d610e47565b5b610f9a84828501610f0c565b602083015250604082013567ffffffffffffffff811115610fbe57610fbd610e47565b5b610fca84828501610f0c565b60408301525092915050565b6000610fe9610fe484610e16565b610b24565b9050808382526020820190506020840283018581111561100c5761100b610b6b565b5b835b8181101561105357803567ffffffffffffffff81111561103157611030610aae565b5b80860161103e8982610f3a565b8552602085019450505060208101905061100e565b5050509392505050565b600082601f83011261107257611071610aae565b5b8135611082848260208601610fd6565b91505092915050565b600080604083850312156110a2576110a1610aa4565b5b600083013567ffffffffffffffff8111156110c0576110bf610aa9565b5b6110cc85828601610c17565b925050602083013567ffffffffffffffff8111156110ed576110ec610aa9565b5b6110f98582860161105d565b9150509250929050565b600061110e82610a4c565b9050919050565b61111e81611103565b82525050565b60006020820190506111396000830184611115565b92915050565b60006020828403121561115557611154610aa4565b5b600061116384828501610b99565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111b360208361116c565b91506111be8261117d565b602082019050919050565b600060208201905081810360008301526111e2816111a6565b9050919050565b6000815190506111f881610c7b565b92915050565b60006020828403121561121457611213610aa4565b5b6000611222848285016111e9565b91505092915050565b61123481610c71565b82525050565b600060408201905061124f6000830185610dec565b61125c602083018461122b565b9392505050565b61126c81610db6565b811461127757600080fd5b50565b60008151905061128981611263565b92915050565b6000602082840312156112a5576112a4610aa4565b5b60006112b38482850161127a565b91505092915050565b7f496e697469616c697a65723a20726563697069656e74206c656e67746820697360008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061131860258361116c565b9150611323826112bc565b604082019050919050565b600060208201905081810360008301526113478161130b565b9050919050565b7f496e697469616c697a65723a20617267756d656e74732073697a65206d69736d60008201527f6174636800000000000000000000000000000000000000000000000000000000602082015250565b60006113aa60248361116c565b91506113b58261134e565b604082019050919050565b600060208201905081810360008301526113d98161139d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061144982610c71565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361147b5761147a61140f565b5b600182019050919050565b7f496e697469616c697a65723a206163636f756e7473206861732073697a652030600082015250565b60006114bc60208361116c565b91506114c782611486565b602082019050919050565b600060208201905081810360008301526114eb816114af565b9050919050565b6114fb81610e4c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561153b578082015181840152602081019050611520565b8381111561154a576000848401525b50505050565b600061155b82611501565b611565818561150c565b935061157581856020860161151d565b61157e81610ab3565b840191505092915050565b60006060830160008301516115a160008601826114f2565b50602083015184820360208601526115b98282611550565b915050604083015184820360408601526115d38282611550565b9150508091505092915050565b60006040820190506115f56000830185610dec565b81810360208301526116078184611589565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061166c60268361116c565b915061167782611610565b604082019050919050565b6000602082019050818103600083015261169b8161165f565b905091905056fea264697066735822122050ca0aaaf9741ab9a764a0909b01275d18848fa45390230f336e6ae274a2751664736f6c634300080d0033";

type InitializerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitializerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Initializer__factory extends ContractFactory {
  constructor(...args: InitializerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Initializer> {
    return super.deploy(
      _DPS,
      _eligibility,
      overrides || {}
    ) as Promise<Initializer>;
  }
  override getDeployTransaction(
    _DPS: string,
    _eligibility: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _eligibility, overrides || {});
  }
  override attach(address: string): Initializer {
    return super.attach(address) as Initializer;
  }
  override connect(signer: Signer): Initializer__factory {
    return super.connect(signer) as Initializer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitializerInterface {
    return new utils.Interface(_abi) as InitializerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Initializer {
    return new Contract(address, _abi, signerOrProvider) as Initializer;
  }
}
