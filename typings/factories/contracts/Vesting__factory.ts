/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vesting, VestingInterface } from "../../contracts/Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentDate",
        type: "uint256",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentDate",
        type: "uint256",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "release",
            type: "uint256",
          },
        ],
        internalType: "struct Lock",
        name: "lock",
        type: "tuple",
      },
    ],
    name: "vest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161076938038061076983398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61067d806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806396e494e81161005b57806396e494e8146100c9578063b45a3c0e146100ea578063f2fde38b146100fd578063fc0c546a1461011057600080fd5b8063082d78b814610082578063715018a6146100975780638da5cb5b1461009f575b600080fd5b6100956100903660046104a5565b610123565b005b61009561021b565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100dc6100d7366004610526565b610251565b6040519081526020016100c0565b6100dc6100f8366004610526565b6102e7565b61009561010b36600461053f565b61039e565b6001546100ac906001600160a01b031681565b6000546001600160a01b031633146101565760405162461bcd60e51b815260040161014d90610561565b60405180910390fd5b6001600160a01b0382811660008181526002602081815260408084208054600180820183559186529483902088519590940290930184815591870151918301919091559054905163a9059cbb60e01b8152600481019390935260248301919091529091169063a9059cbb90604401602060405180830381600087803b1580156101de57600080fd5b505af11580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102169190610596565b505050565b6000546001600160a01b031633146102455760405162461bcd60e51b815260040161014d90610561565b61024f6000610439565b565b600061025c826102e7565b6001546040516370a0823160e01b81523360048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561029f57600080fd5b505afa1580156102b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d791906105b8565b6102e191906105e7565b92915050565b600080805b3360009081526002602052604090205481101561039757336000908152600260205260409020805485919083908110610327576103276105fe565b906000526020600020906002020160010154101561034457610385565b336000908152600260205260409020805482908110610365576103656105fe565b906000526020600020906002020160000154826103829190610614565b91505b8061038f8161062c565b9150506102ec565b5092915050565b6000546001600160a01b031633146103c85760405162461bcd60e51b815260040161014d90610561565b6001600160a01b03811661042d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161014d565b61043681610439565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146104a057600080fd5b919050565b60008082840360608112156104b957600080fd5b6104c284610489565b92506040601f19820112156104d657600080fd5b506040516040810181811067ffffffffffffffff8211171561050857634e487b7160e01b600052604160045260246000fd5b60409081526020858101358352940135938101939093525092909150565b60006020828403121561053857600080fd5b5035919050565b60006020828403121561055157600080fd5b61055a82610489565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156105a857600080fd5b8151801515811461055a57600080fd5b6000602082840312156105ca57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105f9576105f96105d1565b500390565b634e487b7160e01b600052603260045260246000fd5b60008219821115610627576106276105d1565b500190565b6000600019821415610640576106406105d1565b506001019056fea264697066735822122081d5b98c3abe859ef8179ef80c383530be4982d4dc147bd421e19df18476a87b64736f6c63430008090033";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(_token, overrides || {}) as Promise<Vesting>;
  }
  override getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  override connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}
