/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ballot, BallotInterface } from "../../../contracts/voting/Ballot";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "choices",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract BallotFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChoices",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract VotingDelegation",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "contract BallotFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "_topic",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxy",
    outputs: [
      {
        internalType: "contract VotingDelegation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resultStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "topic",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "choiceIndex",
        type: "uint32",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405269054b40b1f852bda0000060805234801561001e57600080fd5b506100283361002d565b61007d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6080516114856100986000396000610a0401526114856000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639094c76311610097578063ec55688911610066578063ec55688914610203578063ef4e06ec14610216578063f2fde38b14610229578063f6fd7fde1461023c57600080fd5b80639094c763146101c057806398c81bbf146101d3578063bf63a577146101e8578063c45a0155146101f057600080fd5b806359037b89116100d357806359037b8914610155578063597e1fb514610176578063715018a6146101935780638da5cb5b1461019b57600080fd5b80630a59a98c146101055780631917d6c01461012357806343d726d6146101385780634717f97c14610140575b600080fd5b61010d61024f565b60405161011a9190610f78565b60405180910390f35b61013661013136600461105e565b6102dd565b005b610136610491565b610148610789565b60405161011a91906111a2565b6101686101633660046111e6565b6107e1565b60405190815260200161011a565b6005546101839060ff1681565b604051901515815260200161011a565b610136610802565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6101366101ce3660046111ff565b610868565b6101db610b7f565b60405161011a9190611225565b61010d610c58565b6003546101a8906001600160a01b031681565b6002546101a8906001600160a01b031681565b6001546101a8906001600160a01b031681565b610136610237366004611287565b610c65565b61010d61024a3660046111e6565b610d2d565b6004805461025c906112a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610288906112a4565b80156102d55780601f106102aa576101008083540402835291602001916102d5565b820191906000526020600020905b8154815290600101906020018083116102b857829003601f168201915b505050505081565b600054600160a81b900460ff1661030157600054600160a01b900460ff1615610305565b303b155b61036d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054600160a81b900460ff16158015610397576000805461ffff60a01b191661010160a01b1790555b83516103aa906004906020870190610da8565b5082516103be906006906020860190610da8565b506005805460ff1916905581516103dc906007906020850190610e2c565b5060075467ffffffffffffffff8111156103f8576103f8610fa7565b604051908082528060200260200182016040528015610421578160200160208202803683370190505b50805161043691600891602090910190610e85565b50600180546001600160a01b03808a166001600160a01b0319928316179092556002805489841690831617905560038054928816929091169190911790558015610488576000805460ff60a81b191690555b50505050505050565b600360009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104df57600080fd5b505afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051791906112df565b6001600160a01b0316336001600160a01b0316146105835760405162461bcd60e51b8152602060048201526024808201527f566f74696e673a205265737472696374656420746f20666163746f7279206f776044820152633732b91760e11b6064820152608401610364565b60055460ff16156105d65760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2042616c6c6f7420616c726561647920636c6f7365642e00006044820152606401610364565b6005805460ff1916600117905560005b60095481101561078657600060098281548110610605576106056112fc565b6000918252602090912001546002546040516302fbd00360e21b81526001600160a01b039283169350911690630bef400c90610648908490600690600401611312565b60206040518083038186803b15801561066057600080fd5b505afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069891906113cb565b6001546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a082319060240160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071591906113cb565b61071f91906113fa565b6001600160a01b0382166000908152600a602052604090205460088054909163ffffffff16908110610753576107536112fc565b90600052602060002001600082825461076c91906113fa565b9091555082915061077e905081611412565b9150506105e6565b50565b606060088054806020026020016040519081016040528092919081815260200182805480156107d757602002820191906000526020600020905b8154815260200190600101908083116107c3575b5050505050905090565b600881815481106107f157600080fd5b600091825260209091200154905081565b6000546001600160a01b0316331461085c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b6108666000610d58565b565b60055460ff16156108bb5760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2042616c6c6f7420697320636c6f7365642e000000000000006044820152606401610364565b60075463ffffffff82161061091c5760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2043686f69636520696e64657820697320746f6f20686967686044820152601760f91b6064820152608401610364565b60025460405163442f655160e01b81526001600160a01b039091169063442f65519061094f903390600690600401611312565b60206040518083038186803b15801561096757600080fd5b505afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f919061142d565b156109ec5760405162461bcd60e51b815260206004820152601a60248201527f566f74696e673a20566f74652069732064656c6567617465642e0000000000006044820152606401610364565b6001546040516370a0823160e01b81523360048201527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b0316906370a082319060240160206040518083038186803b158015610a4f57600080fd5b505afa158015610a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8791906113cb565b1015610ad55760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a204e6f7420656e6f7567682044505320746f20766f74652e006044820152606401610364565b336000908152600a6020526040902054640100000000900460ff16610b5657336000818152600a60205260408120805464ff0000000019166401000000001790556009805460018101825591527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b03191690911790555b336000908152600a60205260409020805463ffffffff191663ffffffff92909216919091179055565b60606007805480602002602001604051908101604052809291908181526020016000905b82821015610c4f578382906000526020600020018054610bc2906112a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bee906112a4565b8015610c3b5780601f10610c1057610100808354040283529160200191610c3b565b820191906000526020600020905b815481529060010190602001808311610c1e57829003601f168201915b505050505081526020019060010190610ba3565b50505050905090565b6006805461025c906112a4565b6000546001600160a01b03163314610cbf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b6001600160a01b038116610d245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610364565b61078681610d58565b60078181548110610d3d57600080fd5b90600052602060002001600091509050805461025c906112a4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610db4906112a4565b90600052602060002090601f016020900481019282610dd65760008555610e1c565b82601f10610def57805160ff1916838001178555610e1c565b82800160010185558215610e1c579182015b82811115610e1c578251825591602001919060010190610e01565b50610e28929150610ebf565b5090565b828054828255906000526020600020908101928215610e79579160200282015b82811115610e795782518051610e69918491602090910190610da8565b5091602001919060010190610e4c565b50610e28929150610ed4565b828054828255906000526020600020908101928215610e1c5791602002820182811115610e1c578251825591602001919060010190610e01565b5b80821115610e285760008155600101610ec0565b80821115610e28576000610ee88282610ef1565b50600101610ed4565b508054610efd906112a4565b6000825580601f10610f0d575050565b601f0160209004906000526020600020908101906107869190610ebf565b6000815180845260005b81811015610f5157602081850181015186830182015201610f35565b81811115610f63576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f8b6020830184610f2b565b9392505050565b6001600160a01b038116811461078657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610fe657610fe6610fa7565b604052919050565b600082601f830112610fff57600080fd5b813567ffffffffffffffff81111561101957611019610fa7565b61102c601f8201601f1916602001610fbd565b81815284602083860101111561104157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c0878903121561107757600080fd5b6110818735610f92565b8635955060208088013561109481610f92565b955060408801356110a481610f92565b9450606088013567ffffffffffffffff808211156110c157600080fd5b6110cd8b838c01610fee565b955060808a01359150808211156110e357600080fd5b6110ef8b838c01610fee565b945060a08a013591508082111561110557600080fd5b818a0191508a601f83011261111957600080fd5b81358181111561112b5761112b610fa7565b8060051b61113a858201610fbd565b918252838101850191858101908e84111561115457600080fd5b86860192505b8383101561118e57848335111561117057600080fd5b61117f8f888535890101610fee565b8252918601919086019061115a565b809750505050505050509295509295509295565b6020808252825182820181905260009190848201906040850190845b818110156111da578351835292840192918401916001016111be565b50909695505050505050565b6000602082840312156111f857600080fd5b5035919050565b60006020828403121561121157600080fd5b813563ffffffff81168114610f8b57600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561127a57603f19888603018452611268858351610f2b565b9450928501929085019060010161124c565b5092979650505050505050565b60006020828403121561129957600080fd5b8135610f8b81610f92565b600181811c908216806112b857607f821691505b602082108114156112d957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112f157600080fd5b8151610f8b81610f92565b634e487b7160e01b600052603260045260246000fd5b60018060a01b0383168152600060206040818401526000845481600182811c91508083168061134257607f831692505b85831081141561136057634e487b7160e01b85526022600452602485fd5b604088018390526060880181801561137f5760018114611390576113bb565b60ff198616825287820196506113bb565b60008b81526020902060005b868110156113b55781548482015290850190890161139c565b83019750505b50949a9950505050505050505050565b6000602082840312156113dd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561140d5761140d6113e4565b500190565b6000600019821415611426576114266113e4565b5060010190565b60006020828403121561143f57600080fd5b81518015158114610f8b57600080fdfea264697066735822122039f7929615c53f0bc31594382d218f477450cfb4714978c4d49397b689bdf06064736f6c63430008090033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ballot> {
    return super.deploy(overrides || {}) as Promise<Ballot>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Ballot {
    return super.attach(address) as Ballot;
  }
  override connect(signer: Signer): Ballot__factory {
    return super.connect(signer) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new utils.Interface(_abi) as BallotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ballot {
    return new Contract(address, _abi, signerOrProvider) as Ballot;
  }
}
