/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ballot, BallotInterface } from "../../../contracts/voting/Ballot";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "choices",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract BallotFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChoices",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract VotingDelegation",
        name: "_proxy",
        type: "address",
      },
      {
        internalType: "contract BallotFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "_topic",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxy",
    outputs: [
      {
        internalType: "contract VotingDelegation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resultStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "topic",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "choiceIndex",
        type: "uint32",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405269054b40b1f852bda0000060805234801561001e57600080fd5b506100283361002d565b61007d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6080516114f06100986000396000610a6c01526114f06000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639094c76311610097578063ec55688911610066578063ec55688914610203578063ef4e06ec14610216578063f2fde38b14610229578063f6fd7fde1461023c57600080fd5b80639094c763146101c057806398c81bbf146101d3578063bf63a577146101e8578063c45a0155146101f057600080fd5b806359037b89116100d357806359037b8914610155578063597e1fb514610176578063715018a6146101935780638da5cb5b1461019b57600080fd5b80630a59a98c146101055780631917d6c01461012357806343d726d6146101385780634717f97c14610140575b600080fd5b61010d61024f565b60405161011a9190610fe3565b60405180910390f35b6101366101313660046110c9565b6102dd565b005b610136610491565b6101486107f1565b60405161011a919061120d565b610168610163366004611251565b610849565b60405190815260200161011a565b6005546101839060ff1681565b604051901515815260200161011a565b61013661086a565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6101366101ce36600461126a565b6108d0565b6101db610be7565b60405161011a9190611290565b61010d610cc0565b6003546101a8906001600160a01b031681565b6002546101a8906001600160a01b031681565b6001546101a8906001600160a01b031681565b6101366102373660046112f2565b610ccd565b61010d61024a366004611251565b610d98565b6004805461025c9061130f565b80601f01602080910402602001604051908101604052809291908181526020018280546102889061130f565b80156102d55780601f106102aa576101008083540402835291602001916102d5565b820191906000526020600020905b8154815290600101906020018083116102b857829003601f168201915b505050505081565b600054600160a81b900460ff1661030157600054600160a01b900460ff1615610305565b303b155b61036d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054600160a81b900460ff16158015610397576000805461ffff60a01b191661010160a01b1790555b83516103aa906004906020870190610e13565b5082516103be906006906020860190610e13565b506005805460ff1916905581516103dc906007906020850190610e97565b5060075467ffffffffffffffff8111156103f8576103f8611012565b604051908082528060200260200182016040528015610421578160200160208202803683370190505b50805161043691600891602090910190610ef0565b50600180546001600160a01b03808a166001600160a01b0319928316179092556002805489841690831617905560038054928816929091169190911790558015610488576000805460ff60a81b191690555b50505050505050565b600360009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104df57600080fd5b505afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610517919061134a565b6001600160a01b0316336001600160a01b0316146105835760405162461bcd60e51b8152602060048201526024808201527f566f74696e673a205265737472696374656420746f20666163746f7279206f776044820152633732b91760e11b6064820152608401610364565b60055460ff16156105d65760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2042616c6c6f7420616c726561647920636c6f7365642e00006044820152606401610364565b6005805460ff1916600117905560005b6009548110156107865760006009828154811061060557610605611367565b6000918252602090912001546002546040516302fbd00360e21b81526001600160a01b039283169350911690630bef400c9061064890849060069060040161137d565b60206040518083038186803b15801561066057600080fd5b505afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106989190611436565b6001546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a082319060240160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611436565b61071f9190611465565b6001600160a01b0382166000908152600a602052604090205460088054909163ffffffff1690811061075357610753611367565b90600052602060002001600082825461076c9190611465565b9091555082915061077e90508161147d565b9150506105e6565b50600360009054906101000a90046001600160a01b03166001600160a01b0316635d5a96236040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b50505050565b6060600880548060200260200160405190810160405280929190818152602001828054801561083f57602002820191906000526020600020905b81548152602001906001019080831161082b575b5050505050905090565b6008818154811061085957600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146108c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b6108ce6000610dc3565b565b60055460ff16156109235760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2042616c6c6f7420697320636c6f7365642e000000000000006044820152606401610364565b60075463ffffffff8216106109845760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2043686f69636520696e64657820697320746f6f20686967686044820152601760f91b6064820152608401610364565b60025460405163442f655160e01b81526001600160a01b039091169063442f6551906109b790339060069060040161137d565b60206040518083038186803b1580156109cf57600080fd5b505afa1580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a079190611498565b15610a545760405162461bcd60e51b815260206004820152601a60248201527f566f74696e673a20566f74652069732064656c6567617465642e0000000000006044820152606401610364565b6001546040516370a0823160e01b81523360048201527f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b0316906370a082319060240160206040518083038186803b158015610ab757600080fd5b505afa158015610acb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aef9190611436565b1015610b3d5760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a204e6f7420656e6f7567682044505320746f20766f74652e006044820152606401610364565b336000908152600a6020526040902054640100000000900460ff16610bbe57336000818152600a60205260408120805464ff0000000019166401000000001790556009805460018101825591527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b03191690911790555b336000908152600a60205260409020805463ffffffff191663ffffffff92909216919091179055565b60606007805480602002602001604051908101604052809291908181526020016000905b82821015610cb7578382906000526020600020018054610c2a9061130f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c569061130f565b8015610ca35780601f10610c7857610100808354040283529160200191610ca3565b820191906000526020600020905b815481529060010190602001808311610c8657829003601f168201915b505050505081526020019060010190610c0b565b50505050905090565b6006805461025c9061130f565b6000546001600160a01b03163314610d275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610364565b6001600160a01b038116610d8c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610364565b610d9581610dc3565b50565b60078181548110610da857600080fd5b90600052602060002001600091509050805461025c9061130f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610e1f9061130f565b90600052602060002090601f016020900481019282610e415760008555610e87565b82601f10610e5a57805160ff1916838001178555610e87565b82800160010185558215610e87579182015b82811115610e87578251825591602001919060010190610e6c565b50610e93929150610f2a565b5090565b828054828255906000526020600020908101928215610ee4579160200282015b82811115610ee45782518051610ed4918491602090910190610e13565b5091602001919060010190610eb7565b50610e93929150610f3f565b828054828255906000526020600020908101928215610e875791602002820182811115610e87578251825591602001919060010190610e6c565b5b80821115610e935760008155600101610f2b565b80821115610e93576000610f538282610f5c565b50600101610f3f565b508054610f689061130f565b6000825580601f10610f78575050565b601f016020900490600052602060002090810190610d959190610f2a565b6000815180845260005b81811015610fbc57602081850181015186830182015201610fa0565b81811115610fce576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610ff66020830184610f96565b9392505050565b6001600160a01b0381168114610d9557600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561105157611051611012565b604052919050565b600082601f83011261106a57600080fd5b813567ffffffffffffffff81111561108457611084611012565b611097601f8201601f1916602001611028565b8181528460208386010111156110ac57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156110e257600080fd5b6110ec8735610ffd565b863595506020808801356110ff81610ffd565b9550604088013561110f81610ffd565b9450606088013567ffffffffffffffff8082111561112c57600080fd5b6111388b838c01611059565b955060808a013591508082111561114e57600080fd5b61115a8b838c01611059565b945060a08a013591508082111561117057600080fd5b818a0191508a601f83011261118457600080fd5b81358181111561119657611196611012565b8060051b6111a5858201611028565b918252838101850191858101908e8411156111bf57600080fd5b86860192505b838310156111f95784833511156111db57600080fd5b6111ea8f888535890101611059565b825291860191908601906111c5565b809750505050505050509295509295509295565b6020808252825182820181905260009190848201906040850190845b8181101561124557835183529284019291840191600101611229565b50909695505050505050565b60006020828403121561126357600080fd5b5035919050565b60006020828403121561127c57600080fd5b813563ffffffff81168114610ff657600080fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156112e557603f198886030184526112d3858351610f96565b945092850192908501906001016112b7565b5092979650505050505050565b60006020828403121561130457600080fd5b8135610ff681610ffd565b600181811c9082168061132357607f821691505b6020821081141561134457634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561135c57600080fd5b8151610ff681610ffd565b634e487b7160e01b600052603260045260246000fd5b60018060a01b0383168152600060206040818401526000845481600182811c9150808316806113ad57607f831692505b8583108114156113cb57634e487b7160e01b85526022600452602485fd5b60408801839052606088018180156113ea57600181146113fb57611426565b60ff19861682528782019650611426565b60008b81526020902060005b8681101561142057815484820152908501908901611407565b83019750505b50949a9950505050505050505050565b60006020828403121561144857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156114785761147861144f565b500190565b60006000198214156114915761149161144f565b5060010190565b6000602082840312156114aa57600080fd5b81518015158114610ff657600080fdfea2646970667358221220b09f4a479efac96e1e7070eeae8c952ac90b22a72363b2f8a878bbdd96de218a64736f6c63430008090033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ballot> {
    return super.deploy(overrides || {}) as Promise<Ballot>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Ballot {
    return super.attach(address) as Ballot;
  }
  override connect(signer: Signer): Ballot__factory {
    return super.connect(signer) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new utils.Interface(_abi) as BallotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ballot {
    return new Contract(address, _abi, signerOrProvider) as Ballot;
  }
}
