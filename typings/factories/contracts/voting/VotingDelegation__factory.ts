/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VotingDelegation,
  VotingDelegationInterface,
} from "../../../contracts/voting/VotingDelegation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ballotFactory",
    outputs: [
      {
        internalType: "contract BallotFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "delegationAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "delegators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "hasDelegated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "representative",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405269054b40b1f852bda0000060805234801561001e57600080fd5b50604051610c9f380380610c9f83398101604081905261003d91610124565b610046336100d4565b6001600160a01b0381166100af5760405162461bcd60e51b815260206004820152602660248201527f566f74696e6744656c65676174696f6e3a204450532061646472657373206973604482015265103d32b9379760d11b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610154565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013657600080fd5b81516001600160a01b038116811461014d57600080fd5b9392505050565b608051610b3061016f60003960006103500152610b306000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610156578063ceb0b9351461017b578063ef4e06ec1461018e578063f2fde38b146101a1578063fc196713146101b457600080fd5b80630bef400c146100a3578063442f6551146100c95780635e12967914610119578063694ec60e1461012e578063715018a61461014e575b600080fd5b6100b66100b136600461091b565b6101f2565b6040519081526020015b60405180910390f35b6101096100d736600461091b565b6001600160a01b0391821660009081526004602090815260408083208451948301949094208352929052205416151590565b60405190151581526020016100c0565b61012c61012736600461091b565b61032e565b005b61014161013c36600461091b565b610612565b6040516100c091906109dd565b61012c610768565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c0565b600254610163906001600160a01b031681565b600154610163906001600160a01b031681565b61012c6101af366004610a2a565b6107ce565b6101636101c236600461091b565b6001600160a01b039182166000908152600460209081526040808320845194830194909420835292905220541690565b805160208201206000908190815b6001600160a01b038616600090815260036020908152604080832085845290915290206001015463ffffffff8216101561032457600180546001600160a01b0388811660009081526003602090815260408083208884529091529020909201805492909116916370a08231919063ffffffff851690811061028357610283610a4c565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b1580156102ce57600080fd5b505afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610a62565b6103109084610a91565b92508061031c81610aa9565b915050610200565b5090949350505050565b6001546040516370a0823160e01b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000009216906370a082319060240160206040518083038186803b15801561039357600080fd5b505afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610a62565b1015806103df57506001600160a01b038216155b6104445760405162461bcd60e51b815260206004820152602b60248201527f566f74696e6744656c65676174696f6e3a2050726f787920686173206e6f742060448201526a32b737bab3b4102228299760a91b60648201526084015b60405180910390fd5b805160208083019190912033600090815260048352604080822083835290935291909120546001600160a01b03161561057b573360008181526004602090815260408083208584528252808320546001600160a01b03168352600382528083208584528252808320938352908390529020546001828101805490916104c891610acd565b815481106104d8576104d8610a4c565b6000918252602090912001546001830180546001600160a01b03909216918390811061050657610506610a4c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160010180548061054757610547610ae4565b60008281526020808220830160001990810180546001600160a01b0319169055909201909255338252929092525060408120555b336000908152600460209081526040808320848452909152902080546001600160a01b0319166001600160a01b0385169081179091551561060d576001600160a01b038316600090815260036020908152604080832084845282528083206001808201805433808852938652938620849055908301815584529190922090910180546001600160a01b03191690911790555b505050565b80516020808301919091206001600160a01b0384166000908152600383526040808220838352909352918220600101546060929067ffffffffffffffff81111561065e5761065e610905565b604051908082528060200260200182016040528015610687578160200160208202803683370190505b50905060005b6001600160a01b038616600090815260036020908152604080832086845290915290206001015463ffffffff8216101561075f576001600160a01b03861660009081526003602090815260408083208684529091529020600101805463ffffffff83169081106106ff576106ff610a4c565b9060005260206000200160009054906101000a90046001600160a01b0316828263ffffffff168151811061073557610735610a4c565b6001600160a01b03909216602092830291909101909101528061075781610aa9565b91505061068d565b50949350505050565b6000546001600160a01b031633146107c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043b565b6107cc6000610899565b565b6000546001600160a01b031633146108285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043b565b6001600160a01b03811661088d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043b565b61089681610899565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461090057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561092e57600080fd5b610937836108e9565b9150602083013567ffffffffffffffff8082111561095457600080fd5b818501915085601f83011261096857600080fd5b81358181111561097a5761097a610905565b604051601f8201601f19908116603f011681019083821181831017156109a2576109a2610905565b816040528281528860208487010111156109bb57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610a1e5783516001600160a01b0316835292840192918401916001016109f9565b50909695505050505050565b600060208284031215610a3c57600080fd5b610a45826108e9565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a7457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aa457610aa4610a7b565b500190565b600063ffffffff80831681811415610ac357610ac3610a7b565b6001019392505050565b600082821015610adf57610adf610a7b565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220d96df46fbc64b3443643463fa844c7743d4c565e4135833274187261a9c5711c64736f6c63430008090033";

type VotingDelegationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingDelegationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingDelegation__factory extends ContractFactory {
  constructor(...args: VotingDelegationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotingDelegation> {
    return super.deploy(_DPS, overrides || {}) as Promise<VotingDelegation>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): VotingDelegation {
    return super.attach(address) as VotingDelegation;
  }
  override connect(signer: Signer): VotingDelegation__factory {
    return super.connect(signer) as VotingDelegation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingDelegationInterface {
    return new utils.Interface(_abi) as VotingDelegationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingDelegation {
    return new Contract(address, _abi, signerOrProvider) as VotingDelegation;
  }
}
