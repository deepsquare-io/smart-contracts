/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VotingDelegation,
  VotingDelegationInterface,
} from "../../../contracts/voting/VotingDelegation";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "topic",
        type: "bytes32",
      },
    ],
    name: "delegationAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "delegators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "topic",
        type: "bytes32",
      },
    ],
    name: "hasDelegated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
    ],
    name: "representative",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405269054b40b1f852bda0000060805234801561001e57600080fd5b50604051610c9d380380610c9d83398101604081905261003d91610124565b610046336100d4565b6001600160a01b0381166100af5760405162461bcd60e51b815260206004820152602660248201527f566f74696e6744656c65676174696f6e3a204450532061646472657373206973604482015265103d32b9379760d11b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610154565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013657600080fd5b81516001600160a01b038116811461014d57600080fd5b9392505050565b608051610b2e61016f60003960006101f20152610b2e6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b14610126578063d053b9d21461014b578063ef4e06ec1461016c578063f2fde38b1461017f578063fc1967131461019257600080fd5b80635e12967914610098578063694ec60e146100ad578063715018a6146100d65780637c88aaa7146100de575b600080fd5b6100ab6100a63660046108ef565b6101d0565b005b6100c06100bb3660046108ef565b6104b4565b6040516100cd91906109b1565b60405180910390f35b6100ab61060a565b6101166100ec3660046109fe565b6001600160a01b039182166000908152600360209081526040808320938352929052205416151590565b60405190151581526020016100cd565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100cd565b61015e6101593660046109fe565b610670565b6040519081526020016100cd565b600154610133906001600160a01b031681565b6100ab61018d366004610a28565b6107a2565b6101336101a03660046108ef565b6001600160a01b039182166000908152600360209081526040808320845194830194909420835292905220541690565b6001546040516370a0823160e01b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000009216906370a082319060240160206040518083038186803b15801561023557600080fd5b505afa158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d9190610a4a565b10158061028157506001600160a01b038216155b6102e65760405162461bcd60e51b815260206004820152602b60248201527f566f74696e6744656c65676174696f6e3a2050726f787920686173206e6f742060448201526a32b737bab3b4102228299760a91b60648201526084015b60405180910390fd5b805160208083019190912033600090815260038352604080822083835290935291909120546001600160a01b03161561041d573360008181526003602090815260408083208584528252808320546001600160a01b031683526002825280832085845282528083209383529083905290205460018281018054909161036a91610a79565b8154811061037a5761037a610a90565b6000918252602090912001546001830180546001600160a01b0390921691839081106103a8576103a8610a90565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816001018054806103e9576103e9610aa6565b60008281526020808220830160001990810180546001600160a01b0319169055909201909255338252929092525060408120555b336000908152600360209081526040808320848452909152902080546001600160a01b0319166001600160a01b038516908117909155156104af576001600160a01b038316600090815260026020908152604080832084845282528083206001808201805433808852938652938620849055908301815584529190922090910180546001600160a01b03191690911790555b505050565b80516020808301919091206001600160a01b0384166000908152600283526040808220838352909352918220600101546060929067ffffffffffffffff811115610500576105006108d9565b604051908082528060200260200182016040528015610529578160200160208202803683370190505b50905060005b6001600160a01b038616600090815260026020908152604080832086845290915290206001015463ffffffff82161015610601576001600160a01b03861660009081526002602090815260408083208684529091529020600101805463ffffffff83169081106105a1576105a1610a90565b9060005260206000200160009054906101000a90046001600160a01b0316828263ffffffff16815181106105d7576105d7610a90565b6001600160a01b0390921660209283029190910190910152806105f981610abc565b91505061052f565b50949350505050565b6000546001600160a01b031633146106645760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dd565b61066e600061086d565b565b60008060005b6001600160a01b038516600090815260026020908152604080832087845290915290206001015463ffffffff8216101561079a57600180546001600160a01b0387811660009081526002602090815260408083208a84529091529020909201805492909116916370a08231919063ffffffff85169081106106f9576106f9610a90565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160206040518083038186803b15801561074457600080fd5b505afa158015610758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190610a4a565b6107869083610ae0565b91508061079281610abc565b915050610676565b509392505050565b6000546001600160a01b031633146107fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102dd565b6001600160a01b0381166108615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102dd565b61086a8161086d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108d457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561090257600080fd5b61090b836108bd565b9150602083013567ffffffffffffffff8082111561092857600080fd5b818501915085601f83011261093c57600080fd5b81358181111561094e5761094e6108d9565b604051601f8201601f19908116603f01168101908382118183101715610976576109766108d9565b8160405282815288602084870101111561098f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156109f25783516001600160a01b0316835292840192918401916001016109cd565b50909695505050505050565b60008060408385031215610a1157600080fd5b610a1a836108bd565b946020939093013593505050565b600060208284031215610a3a57600080fd5b610a43826108bd565b9392505050565b600060208284031215610a5c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a8b57610a8b610a63565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600063ffffffff80831681811415610ad657610ad6610a63565b6001019392505050565b60008219821115610af357610af3610a63565b50019056fea2646970667358221220b21453c0fb79ade01370c9d2a5eaeb478aad6922f3d7b0a510d63957b536dfaa64736f6c63430008090033";

type VotingDelegationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingDelegationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingDelegation__factory extends ContractFactory {
  constructor(...args: VotingDelegationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotingDelegation> {
    return super.deploy(_DPS, overrides || {}) as Promise<VotingDelegation>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): VotingDelegation {
    return super.attach(address) as VotingDelegation;
  }
  override connect(signer: Signer): VotingDelegation__factory {
    return super.connect(signer) as VotingDelegation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingDelegationInterface {
    return new utils.Interface(_abi) as VotingDelegationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingDelegation {
    return new Contract(address, _abi, signerOrProvider) as VotingDelegation;
  }
}
