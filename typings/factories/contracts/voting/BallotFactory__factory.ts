/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BallotFactory,
  BallotFactoryInterface,
} from "../../../contracts/voting/BallotFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ballotAddress",
        type: "address",
      },
    ],
    name: "BallotCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeBallotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "archiveBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "archivedBallotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArchivedBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setImplementationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000f0b38038062000f0b83398101604081905261003191610190565b61003a33610128565b6001600160a01b03821661009b576040805162461bcd60e51b815260206004820152602481019190915260008051602062000ecb833981519152604482015260008051602062000eeb83398151915260648201526084015b60405180910390fd5b6001600160a01b0381166100f7576040805162461bcd60e51b815260206004820152602481019190915260008051602062000ecb833981519152604482015260008051602062000eeb8339815191526064820152608401610092565b600180546001600160a01b039384166001600160a01b031991821617909155600480549290931691161790556101ca565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461018d57600080fd5b50565b600080604083850312156101a357600080fd5b82516101ae81610178565b60208401519092506101bf81610178565b809150509250929050565b610cf180620001da6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b97a231911610071578063b97a231914610129578063d62d80891461013c578063de78c3341461014f578063ecade2f014610162578063ef4e06ec14610175578063f2fde38b1461018857600080fd5b806327cbb12f146100b95780635b9c68d3146100e95780635d5a9623146100fe578063715018a614610108578063795e2415146101105780638da5cb5b14610118575b600080fd5b6100cc6100c736600461089d565b61019b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16101c5565b6040516100e091906108b6565b610106610227565b005b610106610388565b6100f16103c7565b6000546001600160a01b03166100cc565b6004546100cc906001600160a01b031681565b61010661014a3660046109ba565b610427565b6100cc61015d36600461089d565b61063b565b610106610170366004610ad9565b61064b565b6001546100cc906001600160a01b031681565b610106610196366004610ad9565b610715565b600281815481106101ab57600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600380548060200260200160405190810160405280929190818152602001828054801561021d57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101ff575b5050505050905090565b6000805b60025481101561038457336001600160a01b03166002828154811061025257610252610afd565b6000918252602090912001546001600160a01b03161415610372576001915060036002828154811061028657610286610afd565b6000918252602080832090910154835460018181018655948452919092200180546001600160a01b0319166001600160a01b039092169190911790556002805490916102d191610b29565b815481106102e1576102e1610afd565b600091825260209091200154600280546001600160a01b03909216918390811061030d5761030d610afd565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061034c5761034c610b40565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b8061037c81610b56565b91505061022b565b5050565b6000546001600160a01b031633146103bb5760405162461bcd60e51b81526004016103b290610b71565b60405180910390fd5b6103c560006107b0565b565b6060600280548060200260200160405190810160405280929190818152602001828054801561021d576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101ff575050505050905090565b6000546001600160a01b031633146104515760405162461bcd60e51b81526004016103b290610b71565b6004546001600160a01b0316600061046882610800565b9050806001600160a01b0316631917d6c0836001600160a01b031663ef4e06ec6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b257600080fd5b505afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea9190610ba6565b846001600160a01b031663ec5568896040518163ffffffff1660e01b815260040160206040518083038186803b15801561052357600080fd5b505afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610ba6565b308989896040518763ffffffff1660e01b815260040161058096959493929190610c10565b600060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b5050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385169081179091556040519081527f165f4a0bebf649c196135ba0519a9a51da33d33a9e4d096b71050c2c97ec670f9250602001905060405180910390a15050505050565b600381815481106101ab57600080fd5b6000546001600160a01b031633146106755760405162461bcd60e51b81526004016103b290610b71565b6001600160a01b0381166106f3576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f206164647265737360648201526084016103b2565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461073f5760405162461bcd60e51b81526004016103b290610b71565b6001600160a01b0381166107a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b2565b6107ad816107b0565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166108985760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016103b2565b919050565b6000602082840312156108af57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156108f75783516001600160a01b0316835292840192918401916001016108d2565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561094257610942610903565b604052919050565b600082601f83011261095b57600080fd5b813567ffffffffffffffff81111561097557610975610903565b610988601f8201601f1916602001610919565b81815284602083860101111561099d57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156109cf57600080fd5b833567ffffffffffffffff808211156109e757600080fd5b6109f38783880161094a565b9450602091508186013581811115610a0a57600080fd5b610a168882890161094a565b945050604086013581811115610a2b57600080fd5b8601601f81018813610a3c57600080fd5b803582811115610a4e57610a4e610903565b8060051b610a5d858201610919565b918252828101850191858101908b841115610a7757600080fd5b86850192505b83831015610ab357823586811115610a955760008081fd5b610aa38d898389010161094a565b8352509186019190860190610a7d565b809750505050505050509250925092565b6001600160a01b03811681146107ad57600080fd5b600060208284031215610aeb57600080fd5b8135610af681610ac4565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610b3b57610b3b610b13565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415610b6a57610b6a610b13565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610bb857600080fd5b8151610af681610ac4565b6000815180845260005b81811015610be957602081850181015186830182015201610bcd565b81811115610bfb576000602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b038089168352602081891681850152818816604085015260c06060850152610c4360c0850188610bc3565b91508382036080850152610c578287610bc3565b915083820360a08501528185518084528284019150828160051b85010183880160005b83811015610ca857601f19878403018552610c96838351610bc3565b94860194925090850190600101610c7a565b50909d9c5050505050505050505050505056fea2646970667358221220118981da8fe7c23ab5343c8024d04cf99514f8f6c0831c4f8fc99c0f1cb9e8a264736f6c6343000809003342616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616464726573732073686f756c64206e6f74206265207a65726f2061646472657373";

type BallotFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BallotFactory__factory extends ContractFactory {
  constructor(...args: BallotFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _implementationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BallotFactory> {
    return super.deploy(
      _DPS,
      _implementationAddress,
      overrides || {}
    ) as Promise<BallotFactory>;
  }
  override getDeployTransaction(
    _DPS: string,
    _implementationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _DPS,
      _implementationAddress,
      overrides || {}
    );
  }
  override attach(address: string): BallotFactory {
    return super.attach(address) as BallotFactory;
  }
  override connect(signer: Signer): BallotFactory__factory {
    return super.connect(signer) as BallotFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotFactoryInterface {
    return new utils.Interface(_abi) as BallotFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BallotFactory {
    return new Contract(address, _abi, signerOrProvider) as BallotFactory;
  }
}
