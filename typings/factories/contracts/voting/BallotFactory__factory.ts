/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BallotFactory,
  BallotFactoryInterface,
} from "../../../contracts/voting/BallotFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ballotAddress",
        type: "address",
      },
    ],
    name: "BallotCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activeBallotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "archiveBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "archivedBallotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getArchivedBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setImplementationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f5438038062000f5483398101604081905262000034916200019a565b6200003f3362000131565b6001600160a01b038216620000a1576040805162461bcd60e51b815260206004820152602481019190915260008051602062000f14833981519152604482015260008051602062000f3483398151915260648201526084015b60405180910390fd5b6001600160a01b038116620000ff576040805162461bcd60e51b815260206004820152602481019190915260008051602062000f14833981519152604482015260008051602062000f34833981519152606482015260840162000098565b600180546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055620001d9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200019757600080fd5b50565b60008060408385031215620001ae57600080fd5b8251620001bb8162000181565b6020840151909250620001ce8162000181565b809150509250929050565b610d2b80620001e96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461012b578063b97a23191461013c578063de78c3341461014f578063ecade2f014610162578063ef4e06ec14610175578063f2fde38b1461018857600080fd5b806327cbb12f146100b95780634f3471fa146100e95780635b9c68d3146100fe5780635d5a962314610113578063715018a61461011b578063795e241514610123575b600080fd5b6100cc6100c73660046108a0565b61019b565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f7366004610970565b6101c5565b005b6101066103e5565b6040516100e09190610a9c565b6100fc610447565b6100fc6105a8565b6101066105de565b6000546001600160a01b03166100cc565b6004546100cc906001600160a01b031681565b6100cc61015d3660046108a0565b61063e565b6100fc610170366004610afe565b61064e565b6001546100cc906001600160a01b031681565b6100fc610196366004610afe565b610718565b600281815481106101ab57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146101f85760405162461bcd60e51b81526004016101ef90610b22565b60405180910390fd5b6004546001600160a01b0316600061020f826107b3565b9050806001600160a01b031663f3831ec4836001600160a01b031663ef4e06ec6040518163ffffffff1660e01b815260040160206040518083038186803b15801561025957600080fd5b505afa15801561026d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102919190610b57565b846001600160a01b031663ec5568896040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ca57600080fd5b505afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103029190610b57565b308a8a8a8a6040518863ffffffff1660e01b81526004016103299796959493929190610bc1565b600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b5050600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385169081179091556040519081527f165f4a0bebf649c196135ba0519a9a51da33d33a9e4d096b71050c2c97ec670f9250602001905060405180910390a1505050505050565b6060600380548060200260200160405190810160405280929190818152602001828054801561043d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161041f575b5050505050905090565b6000805b6002548110156105a457336001600160a01b03166002828154811061047257610472610c81565b6000918252602090912001546001600160a01b0316141561059257600191506003600282815481106104a6576104a6610c81565b6000918252602080832090910154835460018181018655948452919092200180546001600160a01b0319166001600160a01b039092169190911790556002805490916104f191610cad565b8154811061050157610501610c81565b600091825260209091200154600280546001600160a01b03909216918390811061052d5761052d610c81565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061056c5761056c610cc4565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b8061059c81610cda565b91505061044b565b5050565b6000546001600160a01b031633146105d25760405162461bcd60e51b81526004016101ef90610b22565b6105dc6000610850565b565b6060600280548060200260200160405190810160405280929190818152602001828054801561043d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161041f575050505050905090565b600381815481106101ab57600080fd5b6000546001600160a01b031633146106785760405162461bcd60e51b81526004016101ef90610b22565b6001600160a01b0381166106f6576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f206164647265737360648201526084016101ef565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107425760405162461bcd60e51b81526004016101ef90610b22565b6001600160a01b0381166107a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ef565b6107b081610850565b50565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b03811661084b5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b60448201526064016101ef565b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108b257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156108f8576108f86108b9565b604052919050565b600082601f83011261091157600080fd5b813567ffffffffffffffff81111561092b5761092b6108b9565b61093e601f8201601f19166020016108cf565b81815284602083860101111561095357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561098657600080fd5b843567ffffffffffffffff8082111561099e57600080fd5b6109aa88838901610900565b95506020915081870135818111156109c157600080fd5b6109cd89828a01610900565b9550506040870135818111156109e257600080fd5b6109ee89828a01610900565b945050606087013581811115610a0357600080fd5b8701601f81018913610a1457600080fd5b803582811115610a2657610a266108b9565b8060051b610a358582016108cf565b918252828101850191858101908c841115610a4f57600080fd5b86850192505b83831015610a8b57823586811115610a6d5760008081fd5b610a7b8e8983890101610900565b8352509186019190860190610a55565b999c989b5096995050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610add5783516001600160a01b031683529284019291840191600101610ab8565b50909695505050505050565b6001600160a01b03811681146107b057600080fd5b600060208284031215610b1057600080fd5b8135610b1b81610ae9565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610b6957600080fd5b8151610b1b81610ae9565b6000815180845260005b81811015610b9a57602081850181015186830182015201610b7e565b81811115610bac576000602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b03808a1683526020818a1681850152818916604085015260e06060850152610bf460e0850189610b74565b91508382036080850152610c088288610b74565b915083820360a0850152610c1c8287610b74565b915083820360c08501528185518084528284019150828160051b85010183880160005b83811015610c6d57601f19878403018552610c5b838351610b74565b94860194925090850190600101610c3f565b50909e9d5050505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610cbf57610cbf610c97565b500390565b634e487b7160e01b600052603160045260246000fd5b6000600019821415610cee57610cee610c97565b506001019056fea2646970667358221220c9c5766e47dfe5e0a2a33a33d2e659ff990bacc35e8f16b456556049aa5185f764736f6c6343000809003342616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616464726573732073686f756c64206e6f74206265207a65726f2061646472657373";

type BallotFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BallotFactory__factory extends ContractFactory {
  constructor(...args: BallotFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _implementationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BallotFactory> {
    return super.deploy(
      _DPS,
      _implementationAddress,
      overrides || {}
    ) as Promise<BallotFactory>;
  }
  override getDeployTransaction(
    _DPS: string,
    _implementationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _DPS,
      _implementationAddress,
      overrides || {}
    );
  }
  override attach(address: string): BallotFactory {
    return super.attach(address) as BallotFactory;
  }
  override connect(signer: Signer): BallotFactory__factory {
    return super.connect(signer) as BallotFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotFactoryInterface {
    return new utils.Interface(_abi) as BallotFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BallotFactory {
    return new Contract(address, _abi, signerOrProvider) as BallotFactory;
  }
}
