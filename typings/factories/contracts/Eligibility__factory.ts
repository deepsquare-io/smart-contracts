/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Eligibility, EligibilityInterface } from '../../contracts/Eligibility';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'tier',
            type: 'uint8',
          },
          {
            internalType: 'string',
            name: 'validator',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'transactionId',
            type: 'string',
          },
        ],
        indexed: false,
        internalType: 'struct Result',
        name: 'result',
        type: 'tuple',
      },
    ],
    name: 'Validation',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WRITER',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'limits',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'lookup',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'results',
    outputs: [
      {
        internalType: 'uint8',
        name: 'tier',
        type: 'uint8',
      },
      {
        internalType: 'string',
        name: 'validator',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'transactionId',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'tier',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'newLimit',
        type: 'uint256',
      },
    ],
    name: 'setLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint8',
            name: 'tier',
            type: 'uint8',
          },
          {
            internalType: 'string',
            name: 'validator',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'transactionId',
            type: 'string',
          },
        ],
        internalType: 'struct Result',
        name: 'result',
        type: 'tuple',
      },
    ],
    name: 'setResult',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200002e6000805160206200138c83398151915260006200007b565b6200003b600033620000c6565b620000566000805160206200138c83398151915233620000c6565b620000656001613a9862000167565b620000756002620186a062000167565b6200056a565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000163576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001223390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006200017581336200018c565b5060ff909116600090815260016020526040902055565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200016357620001d6816001600160a01b031660146200023060201b620005ca1760201c565b620001ec836020620005ca62000230821b17811c565b604051602001620001ff92919062000423565b60408051601f198184030181529082905262461bcd60e51b825262000227916004016200049c565b60405180910390fd5b6060600062000241836002620004e7565b6200024e90600262000509565b6001600160401b0381111562000268576200026862000524565b6040519080825280601f01601f19166020018201604052801562000293576020820181803683370190505b509050600360fc1b81600081518110620002b157620002b16200053a565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620002e357620002e36200053a565b60200101906001600160f81b031916908160001a905350600062000309846002620004e7565b6200031690600162000509565b90505b600181111562000398576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106200034e576200034e6200053a565b1a60f81b8282815181106200036757620003676200053a565b60200101906001600160f81b031916908160001a90535060049490941c93620003908162000550565b905062000319565b508315620003e95760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640162000227565b9392505050565b60005b838110156200040d578181015183820152602001620003f3565b838111156200041d576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516200045d816017850160208801620003f0565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835162000490816028840160208801620003f0565b01602801949350505050565b6020815260008251806020840152620004bd816040850160208701620003f0565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620005045762000504620004d1565b500290565b600082198211156200051f576200051f620004d1565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081620005625762000562620004d1565b506000190190565b610e12806200057a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633aa38bb21161008c578063a9fab19411610066578063a9fab194146101ca578063d4b6b5da146101dd578063d547741f14610232578063ef378f621461024557600080fd5b80633aa38bb21461018857806391d14854146101af578063a217fddf146101c257600080fd5b806301ffc9a7146100d457806303e67ff6146100fc57806314b3211214610111578063248a9ca31461013f5780632f2ff15d1461016257806336568abe14610175575b600080fd5b6100e76100e2366004610953565b610267565b60405190151581526020015b60405180910390f35b61010f61010a366004610a4d565b61029e565b005b61013161011f366004610b18565b60016020526000908152604090205481565b6040519081526020016100f3565b61013161014d366004610b33565b60009081526020819052604090206001015490565b61010f610170366004610b4c565b610373565b61010f610183366004610b4c565b61039e565b6101317f73a9985316cd4cbfd13dadcaa0e6f773c85e933a0d88efbe60e4dc49da9176a081565b6100e76101bd366004610b4c565b610421565b610131600081565b61010f6101d8366004610b78565b61044a565b6102196101eb366004610ba2565b6001600160a01b031660009081526002602090815260408083205460ff168084526001909252909120549091565b6040805160ff90931683526020830191909152016100f3565b61010f610240366004610b4c565b61046d565b610258610253366004610ba2565b610493565b6040516100f393929190610c19565b60006001600160e01b03198216637965db0b60e01b148061029857506301ffc9a760e01b6001600160e01b03198316145b92915050565b7f73a9985316cd4cbfd13dadcaa0e6f773c85e933a0d88efbe60e4dc49da9176a06102c9813361076d565b6001600160a01b03831660009081526002602090815260409091208351815460ff191660ff909116178155838201518051859361030d9260018501929101906108ba565b50604082015180516103299160028401916020909101906108ba565b50905050826001600160a01b03167f8b4faffa3cd4072f19c0c2b76ba4b0b31b05732cabc4350065ea8c0871f4fb99836040516103669190610c51565b60405180910390a2505050565b60008281526020819052604090206001015461038f813361076d565b61039983836107d1565b505050565b6001600160a01b03811633146104135760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61041d8282610855565b5050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610456813361076d565b5060ff909116600090815260016020526040902055565b600082815260208190526040902060010154610489813361076d565b6103998383610855565b6002602052600090815260409020805460018201805460ff90921692916104b990610ca0565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590610ca0565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b50505050509080600201805461054790610ca0565b80601f016020809104026020016040519081016040528092919081815260200182805461057390610ca0565b80156105c05780601f10610595576101008083540402835291602001916105c0565b820191906000526020600020905b8154815290600101906020018083116105a357829003601f168201915b5050505050905083565b606060006105d9836002610cf0565b6105e4906002610d0f565b67ffffffffffffffff8111156105fc576105fc610999565b6040519080825280601f01601f191660200182016040528015610626576020820181803683370190505b509050600360fc1b8160008151811061064157610641610d27565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061067057610670610d27565b60200101906001600160f81b031916908160001a9053506000610694846002610cf0565b61069f906001610d0f565b90505b6001811115610717576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106106d3576106d3610d27565b1a60f81b8282815181106106e9576106e9610d27565b60200101906001600160f81b031916908160001a90535060049490941c9361071081610d3d565b90506106a2565b5083156107665760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161040a565b9392505050565b6107778282610421565b61041d5761078f816001600160a01b031660146105ca565b61079a8360206105ca565b6040516020016107ab929190610d54565b60408051601f198184030181529082905262461bcd60e51b825261040a91600401610dc9565b6107db8282610421565b61041d576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108113390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61085f8282610421565b1561041d576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8280546108c690610ca0565b90600052602060002090601f0160209004810192826108e8576000855561092e565b82601f1061090157805160ff191683800117855561092e565b8280016001018555821561092e579182015b8281111561092e578251825591602001919060010190610913565b5061093a92915061093e565b5090565b5b8082111561093a576000815560010161093f565b60006020828403121561096557600080fd5b81356001600160e01b03198116811461076657600080fd5b80356001600160a01b038116811461099457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b803560ff8116811461099457600080fd5b600082601f8301126109d157600080fd5b813567ffffffffffffffff808211156109ec576109ec610999565b604051601f8301601f19908116603f01168101908282118183101715610a1457610a14610999565b81604052838152866020858801011115610a2d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610a6057600080fd5b610a698361097d565b9150602083013567ffffffffffffffff80821115610a8657600080fd5b9084019060608287031215610a9a57600080fd5b604051606081018181108382111715610ab557610ab5610999565b604052610ac1836109af565b8152602083013582811115610ad557600080fd5b610ae1888286016109c0565b602083015250604083013582811115610af957600080fd5b610b05888286016109c0565b6040830152508093505050509250929050565b600060208284031215610b2a57600080fd5b610766826109af565b600060208284031215610b4557600080fd5b5035919050565b60008060408385031215610b5f57600080fd5b82359150610b6f6020840161097d565b90509250929050565b60008060408385031215610b8b57600080fd5b610b94836109af565b946020939093013593505050565b600060208284031215610bb457600080fd5b6107668261097d565b60005b83811015610bd8578181015183820152602001610bc0565b83811115610be7576000848401525b50505050565b60008151808452610c05816020860160208601610bbd565b601f01601f19169290920160200192915050565b60ff84168152606060208201526000610c356060830185610bed565b8281036040840152610c478185610bed565b9695505050505050565b6020815260ff82511660208201526000602083015160606040840152610c7a6080840182610bed565b90506040840151601f19848303016060850152610c978282610bed565b95945050505050565b600181811c90821680610cb457607f821691505b602082108103610cd457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610d0a57610d0a610cda565b500290565b60008219821115610d2257610d22610cda565b500190565b634e487b7160e01b600052603260045260246000fd5b600081610d4c57610d4c610cda565b506000190190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610d8c816017850160208801610bbd565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610dbd816028840160208801610bbd565b01602801949350505050565b6020815260006107666020830184610bed56fea26469706673582212204670f91cafc9e12f87dafb42f669e8cebeab15cfac153c43ed918e85f016a4dc64736f6c634300080d003373a9985316cd4cbfd13dadcaa0e6f773c85e933a0d88efbe60e4dc49da9176a0';

type EligibilityConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: EligibilityConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Eligibility__factory extends ContractFactory {
  constructor(...args: EligibilityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Eligibility> {
    return super.deploy(overrides || {}) as Promise<Eligibility>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Eligibility {
    return super.attach(address) as Eligibility;
  }
  override connect(signer: Signer): Eligibility__factory {
    return super.connect(signer) as Eligibility__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EligibilityInterface {
    return new utils.Interface(_abi) as EligibilityInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Eligibility {
    return new Contract(address, _abi, signerOrProvider) as Eligibility;
  }
}
