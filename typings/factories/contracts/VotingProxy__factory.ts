/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VotingProxy,
  VotingProxyInterface,
} from "../../contracts/VotingProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract BallotTagManager",
        name: "_ballotTagManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ballotFactory",
    outputs: [
      {
        internalType: "contract BallotFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ballotTagManager",
    outputs: [
      {
        internalType: "contract BallotTagManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "grantProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "hasDelegated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "proxyAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610e57380380610e5783398101604081905261002f9161019c565b61003833610134565b6001600160a01b03821661009d5760405162461bcd60e51b815260206004820152602160248201527f566f74696e6750726f78793a204450532061646472657373206973207a65726f6044820152601760f91b60648201526084015b60405180910390fd5b6001600160a01b03811661010c5760405162461bcd60e51b815260206004820152603060248201527f566f74696e6750726f78793a2042616c6c6f7420746167206d616e616765722060448201526f30b2323932b9b99034b9903d32b9379760811b6064820152608401610094565b6001600160a01b03918216608052600280546001600160a01b031916919092161790556101d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461019957600080fd5b50565b600080604083850312156101af57600080fd5b82516101ba81610184565b60208401519092506101cb81610184565b809150509250929050565b608051610c586101ff6000396000818161017f015281816102ee01526107770152610c586000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b75d466c11610066578063b75d466c146100f6578063c143c6db14610146578063ceb0b93514610167578063ef4e06ec1461017a578063f2fde38b146101a157600080fd5b80633e7ee19f14610098578063715018a6146100c857806374773a45146100d25780638da5cb5b146100e5575b600080fd5b6002546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d06101b4565b005b6100d06100e0366004610950565b61021f565b6000546001600160a01b03166100ab565b610136610104366004610950565b6001600160a01b03918216600090815260046020908152604080832063ffffffff949094168352929052205416151590565b60405190151581526020016100bf565b610159610154366004610950565b610637565b6040519081526020016100bf565b6001546100ab906001600160a01b031681565b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6100d06101af366004610990565b610819565b6000546001600160a01b031633146102135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61021d60006108e4565b565b6002546040805163995d9ab760e01b8152905163ffffffff8416926001600160a01b03169163995d9ab7916004808301926000929190829003018186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a591908101906109f9565b51116102c35760405162461bcd60e51b815260040161020a90610b30565b6040516370a0823160e01b81526001600160a01b03838116600483015269054b40b1f852bda00000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610b72565b10158061037e57506001600160a01b038216155b6103d95760405162461bcd60e51b815260206004820152602660248201527f566f74696e6750726f78793a2050726f787920686173206e6f7420656e6f756760448201526534102228299760d11b606482015260840161020a565b33600090815260046020908152604080832063ffffffff851684529091529020546001600160a01b0316156105515733600081815260046020908152604080832063ffffffff808716808652918452828520546001600160a01b031685526003845282852091855290835281842094845291849052822054600284015490821692600185810193919261046c9216610ba1565b63ffffffff90811682526020808301939093526040918201600090812054858316825260018781019586905293822080546001600160a01b0319166001600160a01b03909216919091179055600286015490939284926104cc9216610ba1565b63ffffffff90811682526020808301939093526040918201600090812080546001600160a01b0319166001600160a01b039690961695909517909455338452918590528220805463ffffffff191690556002840180549091169161052f83610bc6565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050505b33600090815260046020908152604080832063ffffffff85168452909152902080546001600160a01b0319166001600160a01b03841690811790915515610633576001600160a01b038216600090815260036020908152604080832063ffffffff808616855290835281842060028101805433808852838752858820805463ffffffff1916928616929092179091558154841687526001830190955292852080546001600160a01b0319169094179093558154929392169161061283610be6565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505b5050565b60008163ffffffff16600260009054906101000a90046001600160a01b03166001600160a01b031663995d9ab76040518163ffffffff1660e01b815260040160006040518083038186803b15801561068e57600080fd5b505afa1580156106a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ca91908101906109f9565b51116106e85760405162461bcd60e51b815260040161020a90610b30565b6000805b6001600160a01b038516600090815260036020908152604080832063ffffffff808916855292529091206002015481169082161015610811576001600160a01b03858116600090815260036020908152604080832063ffffffff89811685529083528184209086168452600101909152908190205490516370a0823160e01b815290821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b1580156107bb57600080fd5b505afa1580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190610b72565b6107fd9083610c0a565b91508061080981610be6565b9150506106ec565b509392505050565b6000546001600160a01b031633146108735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020a565b6001600160a01b0381166108d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020a565b6108e1816108e4565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461094b57600080fd5b919050565b6000806040838503121561096357600080fd5b61096c83610934565b9150602083013563ffffffff8116811461098557600080fd5b809150509250929050565b6000602082840312156109a257600080fd5b6109ab82610934565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109f1576109f16109b2565b604052919050565b60006020808385031215610a0c57600080fd5b825167ffffffffffffffff80821115610a2457600080fd5b8185019150601f8681840112610a3957600080fd5b825182811115610a4b57610a4b6109b2565b8060051b610a5a8682016109c8565b918252848101860191868101908a841115610a7457600080fd5b87870192505b83831015610b2257825186811115610a925760008081fd5b8701603f81018c13610aa45760008081fd5b8881015187811115610ab857610ab86109b2565b610ac9818801601f19168b016109c8565b81815260408e81848601011115610ae05760008081fd5b60005b83811015610afe578481018201518382018e01528c01610ae3565b83811115610b0f5760008d85850101525b5050845250509187019190870190610a7a565b9a9950505050505050505050565b60208082526022908201527f566f74696e6750726f78793a2054616720696e64657820697320746f6f2068696040820152610ced60f31b606082015260800190565b600060208284031215610b8457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff83811690831681811015610bbe57610bbe610b8b565b039392505050565b600063ffffffff821680610bdc57610bdc610b8b565b6000190192915050565b600063ffffffff80831681811415610c0057610c00610b8b565b6001019392505050565b60008219821115610c1d57610c1d610b8b565b50019056fea264697066735822122002defa9c0b3b6636079ab495b8e6e5443f2229b805338d45431d3da20aabc73564736f6c63430008090033";

type VotingProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingProxy__factory extends ContractFactory {
  constructor(...args: VotingProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _ballotTagManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotingProxy> {
    return super.deploy(
      _DPS,
      _ballotTagManager,
      overrides || {}
    ) as Promise<VotingProxy>;
  }
  override getDeployTransaction(
    _DPS: string,
    _ballotTagManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _ballotTagManager, overrides || {});
  }
  override attach(address: string): VotingProxy {
    return super.attach(address) as VotingProxy;
  }
  override connect(signer: Signer): VotingProxy__factory {
    return super.connect(signer) as VotingProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingProxyInterface {
    return new utils.Interface(_abi) as VotingProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingProxy {
    return new Contract(address, _abi, signerOrProvider) as VotingProxy;
  }
}
