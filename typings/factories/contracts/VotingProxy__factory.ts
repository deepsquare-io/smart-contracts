/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VotingProxy,
  VotingProxyInterface,
} from "../../contracts/VotingProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ballotFactory",
    outputs: [
      {
        internalType: "contract BallotFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "grantProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "hasDelegated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "proxyAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract BallotFactory",
        name: "_ballotFactory",
        type: "address",
      },
    ],
    name: "setBallotFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610dcc380380610dcc83398101604081905261002f916100fd565b610038336100ad565b6001600160a01b03811661009c5760405162461bcd60e51b815260206004820152602160248201527f566f74696e6750726f78793a204450532061646472657373206973207a65726f6044820152601760f91b606482015260840160405180910390fd5b6001600160a01b031660805261012d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010f57600080fd5b81516001600160a01b038116811461012657600080fd5b9392505050565b608051610c766101566000396000818161017b0152818161030a01526107930152610c766000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b75d466c11610066578063b75d466c146100f2578063c143c6db14610142578063ceb0b93514610163578063ef4e06ec14610176578063f2fde38b1461019d57600080fd5b806336a7cf1f14610098578063715018a6146100ad57806374773a45146100b55780638da5cb5b146100c8575b600080fd5b6100ab6100a6366004610935565b6101b0565b005b6100ab610205565b6100ab6100c3366004610959565b61023b565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610132610100366004610959565b6001600160a01b03918216600090815260036020908152604080832063ffffffff949094168352929052205416151590565b60405190151581526020016100e9565b610155610150366004610959565b610655565b6040519081526020016100e9565b6001546100d5906001600160a01b031681565b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6100ab6101ab366004610935565b610835565b6000546001600160a01b031633146101e35760405162461bcd60e51b81526004016101da9061099b565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461022f5760405162461bcd60e51b81526004016101da9061099b565b61023960006108d0565b565b6001546040805163995d9ab760e01b8152905163ffffffff8416926001600160a01b03169163995d9ab7916004808301926000929190829003018186803b15801561028557600080fd5b505afa158015610299573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c19190810190610a17565b51116102df5760405162461bcd60e51b81526004016101da90610b4e565b6040516370a0823160e01b81526001600160a01b03838116600483015269054b40b1f852bda00000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561034e57600080fd5b505afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190610b90565b10158061039a57506001600160a01b038216155b6103f55760405162461bcd60e51b815260206004820152602660248201527f566f74696e6750726f78793a2050726f787920686173206e6f7420656e6f756760448201526534102228299760d11b60648201526084016101da565b33600090815260036020908152604080832063ffffffff851684529091529020546001600160a01b03161561056e5733600081815260036020908152604080832063ffffffff808716808652918452828520546001600160a01b0316855260028085528386209286529184528285209585529285905290832054908401549082169260018581019391926104899216610bbf565b63ffffffff90811682526020808301939093526040918201600090812054858316825260018781019586905293822080546001600160a01b0319166001600160a01b03909216919091179055600286015490939284926104e99216610bbf565b63ffffffff90811682526020808301939093526040918201600090812080546001600160a01b0319166001600160a01b039690961695909517909455338452918590528220805463ffffffff191690556002840180549091169161054c83610be4565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050505b33600090815260036020908152604080832063ffffffff85168452909152902080546001600160a01b0319166001600160a01b03841690811790915515610651576001600160a01b038216600090815260026020818152604080842063ffffffff8087168652908352818520938401805433808852868652848820805463ffffffff1916928516929092179091558154831687526001860190945291852080546001600160a01b03191690931790925580549293929091169161063083610c04565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505b5050565b60008163ffffffff16600160009054906101000a90046001600160a01b03166001600160a01b031663995d9ab76040518163ffffffff1660e01b815260040160006040518083038186803b1580156106ac57600080fd5b505afa1580156106c0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e89190810190610a17565b51116107065760405162461bcd60e51b81526004016101da90610b4e565b6000805b6001600160a01b038516600090815260026020818152604080842063ffffffff808a168652925290922001548116908216101561082d576001600160a01b03858116600090815260026020908152604080832063ffffffff89811685529083528184209086168452600101909152908190205490516370a0823160e01b815290821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b1580156107d757600080fd5b505afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190610b90565b6108199083610c28565b91508061082581610c04565b91505061070a565b509392505050565b6000546001600160a01b0316331461085f5760405162461bcd60e51b81526004016101da9061099b565b6001600160a01b0381166108c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101da565b6108cd816108d0565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146108cd57600080fd5b60006020828403121561094757600080fd5b813561095281610920565b9392505050565b6000806040838503121561096c57600080fd5b823561097781610920565b9150602083013563ffffffff8116811461099057600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a0f57610a0f6109d0565b604052919050565b60006020808385031215610a2a57600080fd5b825167ffffffffffffffff80821115610a4257600080fd5b8185019150601f8681840112610a5757600080fd5b825182811115610a6957610a696109d0565b8060051b610a788682016109e6565b918252848101860191868101908a841115610a9257600080fd5b87870192505b83831015610b4057825186811115610ab05760008081fd5b8701603f81018c13610ac25760008081fd5b8881015187811115610ad657610ad66109d0565b610ae7818801601f19168b016109e6565b81815260408e81848601011115610afe5760008081fd5b60005b83811015610b1c578481018201518382018e01528c01610b01565b83811115610b2d5760008d85850101525b5050845250509187019190870190610a98565b9a9950505050505050505050565b60208082526022908201527f566f74696e6750726f78793a2054616720696e64657820697320746f6f2068696040820152610ced60f31b606082015260800190565b600060208284031215610ba257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff83811690831681811015610bdc57610bdc610ba9565b039392505050565b600063ffffffff821680610bfa57610bfa610ba9565b6000190192915050565b600063ffffffff80831681811415610c1e57610c1e610ba9565b6001019392505050565b60008219821115610c3b57610c3b610ba9565b50019056fea2646970667358221220ed0ad1c782d239ff62d4f58f0a00c2abfc25eae2566f2c11d7f1c96b9369c7e264736f6c63430008090033";

type VotingProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingProxy__factory extends ContractFactory {
  constructor(...args: VotingProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotingProxy> {
    return super.deploy(_DPS, overrides || {}) as Promise<VotingProxy>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): VotingProxy {
    return super.attach(address) as VotingProxy;
  }
  override connect(signer: Signer): VotingProxy__factory {
    return super.connect(signer) as VotingProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingProxyInterface {
    return new utils.Interface(_abi) as VotingProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingProxy {
    return new Contract(address, _abi, signerOrProvider) as VotingProxy;
  }
}
