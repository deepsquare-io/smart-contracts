/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExposedBallot,
  ExposedBallotInterface,
} from "../../../contracts/testing/ExposedBallot";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract VotingProxy",
        name: "_proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_results",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "choiceIndex",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "hasVoted",
                type: "bool",
              },
            ],
            internalType: "struct Ballot.Vote",
            name: "vote",
            type: "tuple",
          },
        ],
        internalType: "struct ExposedBallot.ResultSample[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "choices",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChoices",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "_tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxy",
    outputs: [
      {
        internalType: "contract VotingProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resultStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tagIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "choiceIndex",
        type: "uint32",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200163838038062001638833981016040819052620000349162000131565b81816200004133620000c8565b6001600160a01b0382166200009c5760405162461bcd60e51b815260206004820152601a60248201527f566f74653a204450532061646472657373206973207a65726f2e000000000000604482015260640160405180910390fd5b6001600160a01b03918216608052600180546001600160a01b0319169190921617905550620001709050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200012e57600080fd5b50565b600080604083850312156200014557600080fd5b8251620001528162000118565b6020840151909250620001658162000118565b809150509250929050565b60805161149e6200019a6000396000818161023f015281816106d10152610a90015261149e6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639094c76311610097578063ec55688911610066578063ec55688914610227578063ef4e06ec1461023a578063f2fde38b14610261578063f6fd7fde1461027457600080fd5b80639094c763146101e457806398c81bbf146101f7578063a97b8b4d1461020c578063c1d1d5c11461021457600080fd5b806359037b89116100d357806359037b8914610177578063597e1fb514610198578063715018a6146101b55780638da5cb5b146101bf57600080fd5b80630a59a98c1461010557806327454ea8146101235780634717f97c1461013857806349499d861461014d575b600080fd5b61010d610287565b60405161011a9190611015565b60405180910390f35b61012b610315565b60405161011a919061102f565b610140610468565b60405161011a919061109a565b60035461016290610100900463ffffffff1681565b60405163ffffffff909116815260200161011a565b61018a6101853660046110de565b6104c0565b60405190815260200161011a565b6003546101a59060ff1681565b604051901515815260200161011a565b6101bd6104e1565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6101bd6101f2366004611110565b610520565b6101ff61084b565b60405161011a919061112b565b6101bd610924565b6101bd610222366004611244565b610b7e565b6001546101cc906001600160a01b031681565b6101cc7f000000000000000000000000000000000000000000000000000000000000000081565b6101bd61026f36600461133b565b610ced565b61010d6102823660046110de565b610d85565b6002805461029490611364565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090611364565b801561030d5780601f106102e25761010080835404028352916020019161030d565b820191906000526020600020905b8154815290600101906020018083116102f057829003601f168201915b505050505081565b60065460609060009067ffffffffffffffff8111156103365761033661118d565b60405190808252806020026020018201604052801561036f57816020015b61035c610e00565b8152602001906001900390816103545790505b50905060005b6006548110156104625760405180604001604052806006838154811061039d5761039d611399565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b0316815260200160076000600685815481106103e0576103e0611399565b60009182526020808320909101546001600160a01b03168352828101939093526040918201902081518083019092525463ffffffff8116825260ff640100000000909104161515918101919091529052825183908390811061044457610444611399565b6020026020010181905250808061045a906113c5565b915050610375565b50919050565b606060058054806020026020016040519081016040528092919081815260200182805480156104b657602002820191906000526020600020905b8154815260200190600101908083116104a2575b5050505050905090565b600581815481106104d057600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146105145760405162461bcd60e51b815260040161050b906113e0565b60405180910390fd5b61051e6000610db0565b565b60035460ff16156105735760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2042616c6c6f7420697320636c6f7365642e00000000000000604482015260640161050b565b60045463ffffffff8216106105d45760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2043686f69636520696e64657820697320746f6f20686967686044820152601760f91b606482015260840161050b565b600154600354604051632dd7519b60e21b815233600482015261010090910463ffffffff1660248201526001600160a01b039091169063b75d466c9060440160206040518083038186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106639190611415565b156106b05760405162461bcd60e51b815260206004820152601a60248201527f566f74696e673a20566f74652069732064656c6567617465642e000000000000604482015260640161050b565b6040516370a0823160e01b815233600482015269054b40b1f852bda00000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561071b57600080fd5b505afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107539190611437565b10156107a15760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a204e6f7420656e6f7567682044505320746f20766f74652e00604482015260640161050b565b33600090815260076020526040902054640100000000900460ff1661082257336000818152600760205260408120805464ff0000000019166401000000001790556006805460018101825591527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b03191690911790555b336000908152600760205260409020805463ffffffff191663ffffffff92909216919091179055565b60606004805480602002602001604051908101604052809291908181526020016000905b8282101561091b57838290600052602060002001805461088e90611364565b80601f01602080910402602001604051908101604052809291908181526020018280546108ba90611364565b80156109075780601f106108dc57610100808354040283529160200191610907565b820191906000526020600020905b8154815290600101906020018083116108ea57829003601f168201915b50505050508152602001906001019061086f565b50505050905090565b6000546001600160a01b0316331461094e5760405162461bcd60e51b815260040161050b906113e0565b60035460ff16156109a15760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2042616c6c6f7420616c726561647920636c6f7365642e0000604482015260640161050b565b6003805460ff1916600117905560005b600654811015610b7b576000600682815481106109d0576109d0611399565b60009182526020909120015460015460035460405163c143c6db60e01b81526001600160a01b039384166004820181905261010090920463ffffffff16602482015290935091169063c143c6db9060440160206040518083038186803b158015610a3957600080fd5b505afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a719190611437565b6040516370a0823160e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610ad257600080fd5b505afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190611437565b610b149190611450565b6001600160a01b03821660009081526007602052604090205460058054909163ffffffff16908110610b4857610b48611399565b906000526020600020016000828254610b619190611450565b90915550829150610b739050816113c5565b9150506109b1565b50565b600054600160a81b900460ff16610ba257600054600160a01b900460ff1615610ba6565b303b155b610c095760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161050b565b600054600160a81b900460ff16158015610c33576000805461ffff60a01b191661010160a01b1790555b8351610c46906002906020870190610e45565b506003805464ffffffffff191661010063ffffffff86160260ff19161790558151610c78906004906020850190610ec9565b5060045467ffffffffffffffff811115610c9457610c9461118d565b604051908082528060200260200182016040528015610cbd578160200160208202803683370190505b508051610cd291600591602090910190610f22565b508015610ce7576000805460ff60a81b191690555b50505050565b6000546001600160a01b03163314610d175760405162461bcd60e51b815260040161050b906113e0565b6001600160a01b038116610d7c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050b565b610b7b81610db0565b60048181548110610d9557600080fd5b90600052602060002001600091509050805461029490611364565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051806040016040528060006001600160a01b03168152602001610e406040518060400160405280600063ffffffff1681526020016000151581525090565b905290565b828054610e5190611364565b90600052602060002090601f016020900481019282610e735760008555610eb9565b82601f10610e8c57805160ff1916838001178555610eb9565b82800160010185558215610eb9579182015b82811115610eb9578251825591602001919060010190610e9e565b50610ec5929150610f5c565b5090565b828054828255906000526020600020908101928215610f16579160200282015b82811115610f165782518051610f06918491602090910190610e45565b5091602001919060010190610ee9565b50610ec5929150610f71565b828054828255906000526020600020908101928215610eb95791602002820182811115610eb9578251825591602001919060010190610e9e565b5b80821115610ec55760008155600101610f5d565b80821115610ec5576000610f858282610f8e565b50600101610f71565b508054610f9a90611364565b6000825580601f10610faa575050565b601f016020900490600052602060002090810190610b7b9190610f5c565b6000815180845260005b81811015610fee57602081850181015186830182015201610fd2565b81811115611000576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006110286020830184610fc8565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561108d57815180516001600160a01b03168552860151805163ffffffff16878601528601511515858501526060909301929085019060010161104c565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110d2578351835292840192918401916001016110b6565b50909695505050505050565b6000602082840312156110f057600080fd5b5035919050565b803563ffffffff8116811461110b57600080fd5b919050565b60006020828403121561112257600080fd5b611028826110f7565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561118057603f1988860301845261116e858351610fc8565b94509285019290850190600101611152565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156111cc576111cc61118d565b604052919050565b600082601f8301126111e557600080fd5b813567ffffffffffffffff8111156111ff576111ff61118d565b611212601f8201601f19166020016111a3565b81815284602083860101111561122757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561125957600080fd5b833567ffffffffffffffff8082111561127157600080fd5b61127d878388016111d4565b94506020915061128e8287016110f7565b93506040860135818111156112a257600080fd5b8601601f810188136112b357600080fd5b8035828111156112c5576112c561118d565b8060051b6112d48582016111a3565b918252828101850191858101908b8411156112ee57600080fd5b86850192505b8383101561132a5782358681111561130c5760008081fd5b61131a8d89838901016111d4565b83525091860191908601906112f4565b809750505050505050509250925092565b60006020828403121561134d57600080fd5b81356001600160a01b038116811461102857600080fd5b600181811c9082168061137857607f821691505b6020821081141561046257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156113d9576113d96113af565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561142757600080fd5b8151801515811461102857600080fd5b60006020828403121561144957600080fd5b5051919050565b60008219821115611463576114636113af565b50019056fea2646970667358221220cc29abb2a74888c66c6f25ea2bdef32d7942e5fcc14e009d78bc6ab9d550a35b64736f6c63430008090033";

type ExposedBallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExposedBallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExposedBallot__factory extends ContractFactory {
  constructor(...args: ExposedBallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExposedBallot> {
    return super.deploy(
      _DPS,
      _proxy,
      overrides || {}
    ) as Promise<ExposedBallot>;
  }
  override getDeployTransaction(
    _DPS: string,
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _proxy, overrides || {});
  }
  override attach(address: string): ExposedBallot {
    return super.attach(address) as ExposedBallot;
  }
  override connect(signer: Signer): ExposedBallot__factory {
    return super.connect(signer) as ExposedBallot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExposedBallotInterface {
    return new utils.Interface(_abi) as ExposedBallotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExposedBallot {
    return new Contract(address, _abi, signerOrProvider) as ExposedBallot;
  }
}
