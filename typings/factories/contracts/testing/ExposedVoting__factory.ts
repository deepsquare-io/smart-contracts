/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExposedVoting,
  ExposedVotingInterface,
} from "../../../contracts/testing/ExposedVoting";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "_delegates",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "_proxyVoters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "_results",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "voter",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "choiceIndex",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "hasVoted",
                type: "bool",
              },
            ],
            internalType: "struct Voting.Vote",
            name: "vote",
            type: "tuple",
          },
        ],
        internalType: "struct ExposedVoting.ResultSample[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addTag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ballots",
    outputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "choices",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "ballotIndex",
        type: "uint32",
      },
    ],
    name: "closeBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllResults",
    outputs: [
      {
        internalType: "uint256[][]",
        name: "",
        type: "uint256[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ballotIndex",
        type: "uint256",
      },
    ],
    name: "getBallotResult",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallots",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "subject",
            type: "string",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "tagIndex",
            type: "uint32",
          },
        ],
        internalType: "struct Voting.Ballot[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChoices",
    outputs: [
      {
        internalType: "string[][]",
        name: "",
        type: "string[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTags",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "grantProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resultStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tags",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
    ],
    name: "totalProxyAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "ballotIndex",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "choiceIndex",
        type: "uint32",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002779380380620027798339810160408190526200003491620000fe565b806200004033620000ae565b6001600160a01b0381166200009b5760405162461bcd60e51b815260206004820152601a60248201527f566f74653a204450532061646472657373206973207a65726f2e000000000000604482015260640160405180910390fd5b6001600160a01b03166080525062000130565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200011157600080fd5b81516001600160a01b03811681146200012957600080fd5b9392505050565b608051612611620001686000396000818161034b015281816108250152818161093101528181610b5001526115ce01526126116000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063995d9ab7116100b8578063cff9293a1161007c578063cff9293a1461030b578063de0cc45b1461031e578063eb87c6dc14610331578063ef4e06ec14610346578063f2fde38b1461036d578063f50ea7ff1461038057600080fd5b8063995d9ab714610265578063c43e163d1461027a578063cb8f3448146102b8578063cc71df1a146102cb578063ce65c4e3146102eb57600080fd5b80635c632b381161010a5780635c632b38146101d9578063715018a6146101fb57806374773a451461020357806376d9be08146102165780638da5cb5b1461022b57806398c81bbf1461025057600080fd5b80631d700c531461014757806320822abc1461017057806324db32ac1461019057806337dc3dfa146101a5578063471a9801146101b8575b600080fd5b61015a610155366004611e3f565b610393565b6040516101679190611e72565b60405180910390f35b61018361017e366004611ebf565b6104cb565b6040516101679190611f25565b6101a361019e366004611ff6565b610577565b005b6101836101b33660046120ed565b610765565b6101cb6101c6366004611e3f565b6107a9565b604051908152602001610167565b6101ec6101e7366004611ebf565b6109cb565b6040516101679392919061210f565b6101a3610a98565b6101a3610211366004611e3f565b610ace565b61021e610e94565b604051610167919061217a565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610167565b610258610f2d565b6040516101679190612234565b61026d611044565b6040516101679190612289565b610238610288366004611e3f565b6001600160a01b03918216600090815260076020908152604080832063ffffffff94909416835292905220541690565b6101cb6102c63660046120ed565b611114565b6102de6102d9366004611ebf565b611151565b604051610167919061229c565b6102fe6102f9366004611ebf565b61133d565b6040516101679190612307565b6101a361031936600461231a565b6113d4565b6101a361032c366004612336565b6117dc565b610339611848565b6040516101679190612373565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b6101a361037b3660046123fc565b611958565b6101a361038e366004612417565b6119f3565b6001600160a01b038216600090815260066020908152604080832063ffffffff80861685529252822060020154606092911667ffffffffffffffff8111156103dd576103dd611f3f565b604051908082528060200260200182016040528015610406578160200160208202803683370190505b50905060005b6001600160a01b038516600090815260066020908152604080832063ffffffff8089168552925290912060020154811690821610156104c3576001600160a01b03808616600090815260066020908152604080832063ffffffff808a1685529083528184209086168085526001909101909252909120548451921691849190811061049957610499612432565b6001600160a01b0390921660209283029190910190910152806104bb8161245e565b91505061040c565b509392505050565b600181815481106104db57600080fd5b9060005260206000200160009150905080546104f690612482565b80601f016020809104026020016040519081016040528092919081815260200182805461052290612482565b801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b505050505081565b6000546001600160a01b031633146105aa5760405162461bcd60e51b81526004016105a1906124bd565b60405180910390fd5b60015463ffffffff8316106106015760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2054616720696e64657820697320746f6f20686967682e000060448201526064016105a1565b604080516060810182528481526000602080830182905263ffffffff8616938301939093526002805460018101825591819052825180519394929091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019261066e9284920190611c81565b506020828101516001928301805460409095015163ffffffff166101000264ffffffff00199215159290921664ffffffffff19909516949094171790925560038054918201815560005282516106eb927fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920191840190611d05565b5060048054600190810190915560058054909101815560009081525b815181101561075f5760058054610720906001906124f2565b8154811061073057610730612432565b60009182526020808320909101805460018101825590835290822001558061075781612509565b915050610707565b50505050565b6003828154811061077557600080fd5b90600052602060002001818154811061078d57600080fd5b906000526020600020016000915091505080546104f690612482565b60015460009063ffffffff8316106108035760405162461bcd60e51b815260206004820152601d60248201527f566f74696e673a2054616720696e64657820697320746f6f206869676800000060448201526064016105a1565b6040516370a0823160e01b81526001600160a01b0384811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561086957600080fd5b505afa15801561087d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a19190612524565b905060005b6001600160a01b038516600090815260066020908152604080832063ffffffff8089168552925290912060020154811690821610156104c3576001600160a01b03858116600090815260066020908152604080832063ffffffff89811685529083528184209086168452600101909152908190205490516370a0823160e01b815290821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561097557600080fd5b505afa158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad9190612524565b6109b7908361253d565b9150806109c38161245e565b9150506108a6565b600281815481106109db57600080fd5b90600052602060002090600202016000915090508060000180546109fe90612482565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2a90612482565b8015610a775780601f10610a4c57610100808354040283529160200191610a77565b820191906000526020600020905b815481529060010190602001808311610a5a57829003601f168201915b5050506001909301549192505060ff81169063ffffffff6101009091041683565b6000546001600160a01b03163314610ac25760405162461bcd60e51b81526004016105a1906124bd565b610acc6000611c31565b565b60015463ffffffff821610610b255760405162461bcd60e51b815260206004820152601d60248201527f566f74696e673a2054616720696e64657820697320746f6f206869676800000060448201526064016105a1565b6040516370a0823160e01b81526001600160a01b03838116600483015269054b40b1f852bda00000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b158015610b9457600080fd5b505afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190612524565b101580610be057506001600160a01b038216155b610c365760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2050726f787920686173206e6f7420656e6f756768204450536044820152601760f91b60648201526084016105a1565b33600090815260076020908152604080832063ffffffff851684529091529020546001600160a01b031615610dae5733600081815260076020908152604080832063ffffffff808716808652918452828520546001600160a01b0316855260068452828520918552908352818420948452918490528220546002840154908216926001858101939192610cc99216612555565b63ffffffff90811682526020808301939093526040918201600090812054858316825260018781019586905293822080546001600160a01b0319166001600160a01b0390921691909117905560028601549093928492610d299216612555565b63ffffffff90811682526020808301939093526040918201600090812080546001600160a01b0319166001600160a01b039690961695909517909455338452918590528220805463ffffffff1916905560028401805490911691610d8c8361257a565b91906101000a81548163ffffffff021916908363ffffffff1602179055505050505b33600090815260076020908152604080832063ffffffff85168452909152902080546001600160a01b0319166001600160a01b03841690811790915515610e90576001600160a01b038216600090815260066020908152604080832063ffffffff808616855290835281842060028101805433808852838752858820805463ffffffff1916928616929092179091558154841687526001830190955292852080546001600160a01b03191690941790935581549293921691610e6f8361245e565b91906101000a81548163ffffffff021916908363ffffffff16021790555050505b5050565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610f2457600084815260209081902083018054604080518285028101850190915281815292830182828015610f1057602002820191906000526020600020905b815481526020019060010190808311610efc575b505050505081526020019060010190610eb8565b50505050905090565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610f2457838290600052602060002001805480602002602001604051908101604052809291908181526020016000905b82821015611031578382906000526020600020018054610fa490612482565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd090612482565b801561101d5780601f10610ff25761010080835404028352916020019161101d565b820191906000526020600020905b81548152906001019060200180831161100057829003601f168201915b505050505081526020019060010190610f85565b5050505081526020019060010190610f51565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610f2457838290600052602060002001805461108790612482565b80601f01602080910402602001604051908101604052809291908181526020018280546110b390612482565b80156111005780601f106110d557610100808354040283529160200191611100565b820191906000526020600020905b8154815290600101906020018083116110e357829003601f168201915b505050505081526020019060010190611068565b6005828154811061112457600080fd5b90600052602060002001818154811061113c57600080fd5b90600052602060002001600091509150505481565b606060006004838154811061116857611168612432565b600091825260209091206002909102015467ffffffffffffffff81111561119157611191611f3f565b6040519080825280602002602001820160405280156111ca57816020015b6111b7611d5e565b8152602001906001900390816111af5790505b50905060005b600484815481106111e3576111e3612432565b60009182526020909120600290910201548110156113365760405180604001604052806004868154811061121957611219612432565b9060005260206000209060020201600001838154811061123b5761123b612432565b600091825260209182902001546001600160a01b031682526004805492909101918790811061126c5761126c612432565b906000526020600020906002020160010160006004888154811061129257611292612432565b906000526020600020906002020160000185815481106112b4576112b4612432565b60009182526020808320909101546001600160a01b03168352828101939093526040918201902081518083019092525463ffffffff8116825260ff640100000000909104161515918101919091529052825183908390811061131857611318612432565b6020026020010181905250808061132e90612509565b9150506111d0565b5092915050565b60025460609082106113615760405162461bcd60e51b81526004016105a19061259a565b6005828154811061137457611374612432565b906000526020600020018054806020026020016040519081016040528092919081815260200182805480156113c857602002820191906000526020600020905b8154815260200190600101908083116113b4575b50505050509050919050565b60025463ffffffff8316106113fb5760405162461bcd60e51b81526004016105a19061259a565b60028263ffffffff168154811061141457611414612432565b600091825260209091206001600290920201015460ff16156114785760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2042616c6c6f7420697320636c6f7365642e0000000000000060448201526064016105a1565b8063ffffffff1660038363ffffffff168154811061149857611498612432565b600091825260209091200154116114fb5760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2043686f69636520696e64657820697320746f6f20686967686044820152601760f91b60648201526084016105a1565b3360009081526007602052604081206002805483919063ffffffff871690811061152757611527612432565b6000918252602080832060029290920290910160010154610100900463ffffffff1683528201929092526040019020546001600160a01b0316146115ad5760405162461bcd60e51b815260206004820152601a60248201527f566f74696e673a20566f74652069732064656c6567617465642e00000000000060448201526064016105a1565b6040516370a0823160e01b815233600482015269054b40b1f852bda00000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561161857600080fd5b505afa15801561162c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116509190612524565b101561169e5760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a204e6f7420656e6f7567682044505320746f20766f74652e0060448201526064016105a1565b60048263ffffffff16815481106116b7576116b7612432565b6000918252602080832033845260029290920290910160010190526040902054640100000000900460ff1661178757600160048363ffffffff168154811061170157611701612432565b6000918252602080832033845260016002909302019190910190526040902080549115156401000000000264ff00000000199092169190911790556004805463ffffffff841690811061175657611756612432565b600091825260208083206002909202909101805460018101825590835291200180546001600160a01b031916331790555b8060048363ffffffff16815481106117a1576117a1612432565b60009182526020808320338452600292909202909101600101905260409020805463ffffffff191663ffffffff929092169190911790555050565b6000546001600160a01b031633146118065760405162461bcd60e51b81526004016105a1906124bd565b6001805480820182556000919091528151610e90917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601906020840190611c81565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610f24578382906000526020600020906002020160405180606001604052908160008201805461189f90612482565b80601f01602080910402602001604051908101604052809291908181526020018280546118cb90612482565b80156119185780601f106118ed57610100808354040283529160200191611918565b820191906000526020600020905b8154815290600101906020018083116118fb57829003601f168201915b505050918352505060019182015460ff8116151560208084019190915261010090910463ffffffff1660409092019190915291835292909201910161186c565b6000546001600160a01b031633146119825760405162461bcd60e51b81526004016105a1906124bd565b6001600160a01b0381166119e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a1565b6119f081611c31565b50565b6000546001600160a01b03163314611a1d5760405162461bcd60e51b81526004016105a1906124bd565b60025463ffffffff821610611a445760405162461bcd60e51b81526004016105a19061259a565b60028163ffffffff1681548110611a5d57611a5d612432565b600091825260209091206001600290920201015460ff1615611ac15760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2042616c6c6f7420616c726561647920636c6f7365642e000060448201526064016105a1565b600160028263ffffffff1681548110611adc57611adc612432565b60009182526020822060029190910201600101805460ff1916921515929092179091556004805463ffffffff8416908110611b1957611b19612432565b90600052602060002090600202019050600060028363ffffffff1681548110611b4457611b44612432565b6000918252602082206001600290920201015463ffffffff6101009091041691505b825481101561075f576000836000018281548110611b8657611b86612432565b6000918252602090912001546001600160a01b03169050611ba781846107a9565b60058663ffffffff1681548110611bc057611bc0612432565b600091825260208083206001600160a01b03861684526001890190915260409092205491018054909163ffffffff16908110611bfe57611bfe612432565b906000526020600020016000828254611c17919061253d565b90915550829150611c29905081612509565b915050611b66565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054611c8d90612482565b90600052602060002090601f016020900481019282611caf5760008555611cf5565b82601f10611cc857805160ff1916838001178555611cf5565b82800160010185558215611cf5579182015b82811115611cf5578251825591602001919060010190611cda565b50611d01929150611da3565b5090565b828054828255906000526020600020908101928215611d52579160200282015b82811115611d525782518051611d42918491602090910190611c81565b5091602001919060010190611d25565b50611d01929150611db8565b604051806040016040528060006001600160a01b03168152602001611d9e6040518060400160405280600063ffffffff1681526020016000151581525090565b905290565b5b80821115611d015760008155600101611da4565b80821115611d01576000611dcc8282611dd5565b50600101611db8565b508054611de190612482565b6000825580601f10611df1575050565b601f0160209004906000526020600020908101906119f09190611da3565b80356001600160a01b0381168114611e2657600080fd5b919050565b803563ffffffff81168114611e2657600080fd5b60008060408385031215611e5257600080fd5b611e5b83611e0f565b9150611e6960208401611e2b565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611eb35783516001600160a01b031683529284019291840191600101611e8e565b50909695505050505050565b600060208284031215611ed157600080fd5b5035919050565b6000815180845260005b81811015611efe57602081850181015186830182015201611ee2565b81811115611f10576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611f386020830184611ed8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f7e57611f7e611f3f565b604052919050565b600082601f830112611f9757600080fd5b813567ffffffffffffffff811115611fb157611fb1611f3f565b611fc4601f8201601f1916602001611f55565b818152846020838601011115611fd957600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561200b57600080fd5b833567ffffffffffffffff8082111561202357600080fd5b61202f87838801611f86565b945060209150612040828701611e2b565b935060408601358181111561205457600080fd5b8601601f8101881361206557600080fd5b80358281111561207757612077611f3f565b8060051b612086858201611f55565b918252828101850191858101908b8411156120a057600080fd5b86850192505b838310156120dc578235868111156120be5760008081fd5b6120cc8d8983890101611f86565b83525091860191908601906120a6565b809750505050505050509250925092565b6000806040838503121561210057600080fd5b50508035926020909101359150565b6060815260006121226060830186611ed8565b93151560208301525063ffffffff91909116604090910152919050565b600081518084526020808501945080840160005b8381101561216f57815187529582019590820190600101612153565b509495945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156121cf57603f198886030184526121bd85835161213f565b945092850192908501906001016121a1565b5092979650505050505050565b600082825180855260208086019550808260051b84010181860160005b8481101561222757601f19868403018952612215838351611ed8565b988401989250908301906001016121f9565b5090979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156121cf57603f198886030184526122778583516121dc565b9450928501929085019060010161225b565b602081526000611f3860208301846121dc565b602080825282518282018190526000919060409081850190868401855b828110156122fa57815180516001600160a01b03168552860151805163ffffffff1687860152860151151585850152606090930192908501906001016122b9565b5091979650505050505050565b602081526000611f38602083018461213f565b6000806040838503121561232d57600080fd5b611e5b83611e2b565b60006020828403121561234857600080fd5b813567ffffffffffffffff81111561235f57600080fd5b61236b84828501611f86565b949350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156123ee57603f198984030185528151606081518186526123c082870182611ed8565b838b01511515878c01529289015163ffffffff1695890195909552509487019492509086019060010161239a565b509098975050505050505050565b60006020828403121561240e57600080fd5b611f3882611e0f565b60006020828403121561242957600080fd5b611f3882611e2b565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8083168181141561247857612478612448565b6001019392505050565b600181811c9082168061249657607f821691505b602082108114156124b757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561250457612504612448565b500390565b600060001982141561251d5761251d612448565b5060010190565b60006020828403121561253657600080fd5b5051919050565b6000821982111561255057612550612448565b500190565b600063ffffffff8381169083168181101561257257612572612448565b039392505050565b600063ffffffff82168061259057612590612448565b6000190192915050565b60208082526021908201527f566f74696e673a2042616c6c6f7420696e64657820697320746f6f20686967686040820152601760f91b60608201526080019056fea26469706673582212207d4fe7b5e2748731ea3f0579cbfd3b6f1fda39e14d5439deaed2483d5b41c9fc64736f6c63430008090033";

type ExposedVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExposedVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExposedVoting__factory extends ContractFactory {
  constructor(...args: ExposedVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExposedVoting> {
    return super.deploy(_DPS, overrides || {}) as Promise<ExposedVoting>;
  }
  override getDeployTransaction(
    _DPS: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, overrides || {});
  }
  override attach(address: string): ExposedVoting {
    return super.attach(address) as ExposedVoting;
  }
  override connect(signer: Signer): ExposedVoting__factory {
    return super.connect(signer) as ExposedVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExposedVotingInterface {
    return new utils.Interface(_abi) as ExposedVotingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExposedVoting {
    return new Contract(address, _abi, signerOrProvider) as ExposedVoting;
  }
}
