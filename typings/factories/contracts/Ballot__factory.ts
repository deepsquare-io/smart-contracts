/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Ballot, BallotInterface } from "../../contracts/Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract VotingProxy",
        name: "_proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "choices",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChoices",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResults",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "_tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
      {
        internalType: "contract VotingProxy",
        name: "_proxy",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxy",
    outputs: [
      {
        internalType: "contract VotingProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "resultStorage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tagIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "choiceIndex",
        type: "uint32",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620014573803806200145783398101604081905262000034916200012c565b6200003f33620000c3565b6001600160a01b0382166200009a5760405162461bcd60e51b815260206004820152601a60248201527f566f74653a204450532061646472657373206973207a65726f2e000000000000604482015260640160405180910390fd5b6001600160a01b03918216608052600180546001600160a01b031916919092161790556200016b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200012957600080fd5b50565b600080604083850312156200014057600080fd5b82516200014d8162000113565b6020840151909250620001608162000113565b809150509250929050565b6080516112c2620001956000396000818161021f0152818161055e015261091d01526112c26000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639094c76311610097578063ec55688911610066578063ec55688914610207578063ef4e06ec1461021a578063f2fde38b14610241578063f6fd7fde1461025457600080fd5b80639094c763146101c457806398c81bbf146101d7578063a97b8b4d146101ec578063c340dd33146101f457600080fd5b806359037b89116100d357806359037b8914610157578063597e1fb514610178578063715018a6146101955780638da5cb5b1461019f57600080fd5b80630a59a98c146100fa5780634717f97c1461011857806349499d861461012d575b600080fd5b610102610267565b60405161010f9190610e79565b60405180910390f35b6101206102f5565b60405161010f9190610e93565b60035461014290610100900463ffffffff1681565b60405163ffffffff909116815260200161010f565b61016a610165366004610ed7565b61034d565b60405190815260200161010f565b6003546101859060ff1681565b604051901515815260200161010f565b61019d61036e565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010f565b61019d6101d2366004610f09565b6103ad565b6101df6106d8565b60405161010f9190610f24565b61019d6107b1565b61019d61020236600461105d565b610a0b565b6001546101ac906001600160a01b031681565b6101ac7f000000000000000000000000000000000000000000000000000000000000000081565b61019d61024f366004611165565b610b96565b610102610262366004610ed7565b610c2e565b6002805461027490611182565b80601f01602080910402602001604051908101604052809291908181526020018280546102a090611182565b80156102ed5780601f106102c2576101008083540402835291602001916102ed565b820191906000526020600020905b8154815290600101906020018083116102d057829003601f168201915b505050505081565b6060600580548060200260200160405190810160405280929190818152602001828054801561034357602002820191906000526020600020905b81548152602001906001019080831161032f575b5050505050905090565b6005818154811061035d57600080fd5b600091825260209091200154905081565b6000546001600160a01b031633146103a15760405162461bcd60e51b8152600401610398906111bd565b60405180910390fd5b6103ab6000610c59565b565b60035460ff16156104005760405162461bcd60e51b815260206004820152601960248201527f566f74696e673a2042616c6c6f7420697320636c6f7365642e000000000000006044820152606401610398565b60045463ffffffff8216106104615760405162461bcd60e51b815260206004820152602160248201527f566f74696e673a2043686f69636520696e64657820697320746f6f20686967686044820152601760f91b6064820152608401610398565b600154600354604051632dd7519b60e21b815233600482015261010090910463ffffffff1660248201526001600160a01b039091169063b75d466c9060440160206040518083038186803b1580156104b857600080fd5b505afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f091906111f2565b1561053d5760405162461bcd60e51b815260206004820152601a60248201527f566f74696e673a20566f74652069732064656c6567617465642e0000000000006044820152606401610398565b6040516370a0823160e01b815233600482015269054b40b1f852bda00000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156105a857600080fd5b505afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190611214565b101561062e5760405162461bcd60e51b815260206004820152601f60248201527f566f74696e673a204e6f7420656e6f7567682044505320746f20766f74652e006044820152606401610398565b33600090815260076020526040902054640100000000900460ff166106af57336000818152600760205260408120805464ff0000000019166401000000001790556006805460018101825591527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b03191690911790555b336000908152600760205260409020805463ffffffff191663ffffffff92909216919091179055565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156107a857838290600052602060002001805461071b90611182565b80601f016020809104026020016040519081016040528092919081815260200182805461074790611182565b80156107945780601f1061076957610100808354040283529160200191610794565b820191906000526020600020905b81548152906001019060200180831161077757829003601f168201915b5050505050815260200190600101906106fc565b50505050905090565b6000546001600160a01b031633146107db5760405162461bcd60e51b8152600401610398906111bd565b60035460ff161561082e5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e673a2042616c6c6f7420616c726561647920636c6f7365642e00006044820152606401610398565b6003805460ff1916600117905560005b600654811015610a085760006006828154811061085d5761085d61122d565b60009182526020909120015460015460035460405163c143c6db60e01b81526001600160a01b039384166004820181905261010090920463ffffffff16602482015290935091169063c143c6db9060440160206040518083038186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190611214565b6040516370a0823160e01b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109979190611214565b6109a19190611259565b6001600160a01b03821660009081526007602052604090205460058054909163ffffffff169081106109d5576109d561122d565b9060005260206000200160008282546109ee9190611259565b90915550829150610a00905081611271565b91505061083e565b50565b600054600160a81b900460ff16610a2f57600054600160a01b900460ff1615610a33565b303b155b610a965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610398565b600054600160a81b900460ff16158015610ac0576000805461ffff60a01b191661010160a01b1790555b8451610ad3906002906020880190610ca9565b506003805464ffffffffff191661010063ffffffff87160260ff19161790558251610b05906004906020860190610d2d565b50600180546001600160a01b0319166001600160a01b03841617905560045467ffffffffffffffff811115610b3c57610b3c610f86565b604051908082528060200260200182016040528015610b65578160200160208202803683370190505b508051610b7a91600591602090910190610d86565b508015610b8f576000805460ff60a81b191690555b5050505050565b6000546001600160a01b03163314610bc05760405162461bcd60e51b8152600401610398906111bd565b6001600160a01b038116610c255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610398565b610a0881610c59565b60048181548110610c3e57600080fd5b90600052602060002001600091509050805461027490611182565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610cb590611182565b90600052602060002090601f016020900481019282610cd75760008555610d1d565b82601f10610cf057805160ff1916838001178555610d1d565b82800160010185558215610d1d579182015b82811115610d1d578251825591602001919060010190610d02565b50610d29929150610dc0565b5090565b828054828255906000526020600020908101928215610d7a579160200282015b82811115610d7a5782518051610d6a918491602090910190610ca9565b5091602001919060010190610d4d565b50610d29929150610dd5565b828054828255906000526020600020908101928215610d1d5791602002820182811115610d1d578251825591602001919060010190610d02565b5b80821115610d295760008155600101610dc1565b80821115610d29576000610de98282610df2565b50600101610dd5565b508054610dfe90611182565b6000825580601f10610e0e575050565b601f016020900490600052602060002090810190610a089190610dc0565b6000815180845260005b81811015610e5257602081850181015186830182015201610e36565b81811115610e64576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e8c6020830184610e2c565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610ecb57835183529284019291840191600101610eaf565b50909695505050505050565b600060208284031215610ee957600080fd5b5035919050565b803563ffffffff81168114610f0457600080fd5b919050565b600060208284031215610f1b57600080fd5b610e8c82610ef0565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f7957603f19888603018452610f67858351610e2c565b94509285019290850190600101610f4b565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610fc557610fc5610f86565b604052919050565b600082601f830112610fde57600080fd5b813567ffffffffffffffff811115610ff857610ff8610f86565b61100b601f8201601f1916602001610f9c565b81815284602083860101111561102057600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b0381168114610a0857600080fd5b8035610f048161103d565b6000806000806080858703121561107357600080fd5b843567ffffffffffffffff8082111561108b57600080fd5b61109788838901610fcd565b9550602091506110a8828801610ef0565b94506040870135818111156110bc57600080fd5b8701601f810189136110cd57600080fd5b8035828111156110df576110df610f86565b8060051b6110ee858201610f9c565b918252828101850191858101908c84111561110857600080fd5b86850192505b83831015611144578235868111156111265760008081fd5b6111348e8983890101610fcd565b835250918601919086019061110e565b8098505050505050505061115a60608601611052565b905092959194509250565b60006020828403121561117757600080fd5b8135610e8c8161103d565b600181811c9082168061119657607f821691505b602082108114156111b757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561120457600080fd5b81518015158114610e8c57600080fd5b60006020828403121561122657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561126c5761126c611243565b500190565b600060001982141561128557611285611243565b506001019056fea2646970667358221220ffe7ff8a395493c0cb246b639c4556e89064a79cf2608927283883199e9ec37a64736f6c63430008090033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ballot> {
    return super.deploy(_DPS, _proxy, overrides || {}) as Promise<Ballot>;
  }
  override getDeployTransaction(
    _DPS: string,
    _proxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_DPS, _proxy, overrides || {});
  }
  override attach(address: string): Ballot {
    return super.attach(address) as Ballot;
  }
  override connect(signer: Signer): Ballot__factory {
    return super.connect(signer) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new utils.Interface(_abi) as BallotInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ballot {
    return new Contract(address, _abi, signerOrProvider) as Ballot;
  }
}
