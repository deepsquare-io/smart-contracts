/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BallotFactory,
  BallotFactoryInterface,
} from "../../../contracts/factories/BallotFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementationAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ballotAddress",
        type: "address",
      },
    ],
    name: "BallotCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ballotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "topic",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setImplementationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a84380380610a8483398101604081905261002f9161012f565b610038336100df565b6001600160a01b0381166100ba576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f2061646472657373606482015260840160405180910390fd5b600280546001600160a01b0319166001600160a01b039290921691909117905561015f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561014157600080fd5b81516001600160a01b038116811461015857600080fd5b9392505050565b6109168061016e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d62d80891161005b578063d62d8089146100e7578063eb87c6dc146100fa578063ecade2f01461010f578063f2fde38b1461012257600080fd5b8063715018a61461008d5780638da5cb5b14610097578063a7a98453146100c1578063b97a2319146100d4575b600080fd5b610095610135565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a46100cf366004610580565b610174565b6002546100a4906001600160a01b031681565b6100956100f5366004610650565b61019e565b6101026102cc565b6040516100b8919061075a565b61009561011d3660046107a7565b61032e565b6100956101303660046107a7565b6103f8565b6000546001600160a01b031633146101685760405162461bcd60e51b815260040161015f906107d7565b60405180910390fd5b6101726000610493565b565b6001818154811061018457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146101c85760405162461bcd60e51b815260040161015f906107d7565b6002546000906101e0906001600160a01b03166104e3565b60405163712a5f2b60e11b81529091506001600160a01b0382169063e254be569061021390879087908790600401610859565b600060405180830381600087803b15801561022d57600080fd5b505af1158015610241573d6000803e3d6000fd5b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385169081179091556040519081527f165f4a0bebf649c196135ba0519a9a51da33d33a9e4d096b71050c2c97ec670f9250602001905060405180910390a150505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561032457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610306575b5050505050905090565b6000546001600160a01b031633146103585760405162461bcd60e51b815260040161015f906107d7565b6001600160a01b0381166103d6576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f2061646472657373606482015260840161015f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104225760405162461bcd60e51b815260040161015f906107d7565b6001600160a01b0381166104875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161015f565b61049081610493565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b03811661057b5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161015f565b919050565b60006020828403121561059257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105d8576105d8610599565b604052919050565b600082601f8301126105f157600080fd5b813567ffffffffffffffff81111561060b5761060b610599565b61061e601f8201601f19166020016105af565b81815284602083860101111561063357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561066557600080fd5b833567ffffffffffffffff8082111561067d57600080fd5b610689878388016105e0565b94506020915081860135818111156106a057600080fd5b6106ac888289016105e0565b9450506040860135818111156106c157600080fd5b8601601f810188136106d257600080fd5b8035828111156106e4576106e4610599565b8060051b6106f38582016105af565b918252828101850191858101908b84111561070d57600080fd5b86850192505b838310156107495782358681111561072b5760008081fd5b6107398d89838901016105e0565b8352509186019190860190610713565b809750505050505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101561079b5783516001600160a01b031683529284019291840191600101610776565b50909695505050505050565b6000602082840312156107b957600080fd5b81356001600160a01b03811681146107d057600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000815180845260005b8181101561083257602081850181015186830182015201610816565b81811115610844576000602083870101525b50601f01601f19169290920160200192915050565b60608152600061086c606083018661080c565b60208382038185015261087f828761080c565b915083820360408501528185518084528284019150828160051b85010183880160005b838110156108d057601f198784030185526108be83835161080c565b948601949250908501906001016108a2565b50909a995050505050505050505056fea2646970667358221220c44b42184d0fd271686900d38019c56cb47696b3471cc28260b5b5cf67aac2d064736f6c63430008090033";

type BallotFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BallotFactory__factory extends ContractFactory {
  constructor(...args: BallotFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BallotFactory> {
    return super.deploy(
      _implementationAddress,
      overrides || {}
    ) as Promise<BallotFactory>;
  }
  override getDeployTransaction(
    _implementationAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementationAddress, overrides || {});
  }
  override attach(address: string): BallotFactory {
    return super.attach(address) as BallotFactory;
  }
  override connect(signer: Signer): BallotFactory__factory {
    return super.connect(signer) as BallotFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotFactoryInterface {
    return new utils.Interface(_abi) as BallotFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BallotFactory {
    return new Contract(address, _abi, signerOrProvider) as BallotFactory;
  }
}
