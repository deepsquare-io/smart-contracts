/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BallotFactory,
  BallotFactoryInterface,
} from "../../../contracts/factories/BallotFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementationAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_votingProxyAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addTag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ballotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTags",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setImplementationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tags",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f34380380610f3483398101604081905261002f916101d4565b61003833610168565b6001600160a01b0382166100bb576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f206164647265737360648201526084015b60405180910390fd5b6001600160a01b0381166101375760405162461bcd60e51b815260206004820152603e60248201527f42616c6c6f74466163746f72793a20566f74696e672070726f7879206164647260448201527f6573732073686f756c64206e6f74206265207a65726f2061646472657373000060648201526084016100b2565b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055610207565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146101cf57600080fd5b919050565b600080604083850312156101e757600080fd5b6101f0836101b8565b91506101fe602084016101b8565b90509250929050565b610d1e806102166000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a7a9845311610071578063a7a9845314610150578063b97a231914610163578063de0cc45b14610176578063eb87c6dc14610189578063ecade2f01461019e578063f2fde38b146101b157600080fd5b806320822abc146100b957806324db32ac146100e2578063715018a61461010d5780638da5cb5b14610117578063995d9ab714610128578063a451fae71461013d575b600080fd5b6100cc6100c73660046108d6565b6101c4565b6040516100d9919061093c565b60405180910390f35b6100f56100f0366004610a0d565b610270565b6040516001600160a01b0390911681526020016100d9565b6101156103df565b005b6000546001600160a01b03166100f5565b610130610415565b6040516100d99190610b67565b6003546100f5906001600160a01b031681565b6100f561015e3660046108d6565b6104ee565b6002546100f5906001600160a01b031681565b610115610184366004610b7a565b610518565b610191610589565b6040516100d99190610bb7565b6101156101ac366004610c04565b6105eb565b6101156101bf366004610c04565b6106b5565b600481815481106101d457600080fd5b9060005260206000200160009150905080546101ef90610c2d565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610c2d565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b505050505081565b600080546001600160a01b031633146102a45760405162461bcd60e51b815260040161029b90610c68565b60405180910390fd5b60045463ffffffff8416106103095760405162461bcd60e51b815260206004820152602560248201527f42616c6c6f74466163746f72793a2054616720696e64657820697320746f6f206044820152643434b3b41760d91b606482015260840161029b565b600254600090610321906001600160a01b0316610750565b60035460405163c340dd3360e01b81529192506001600160a01b038084169263c340dd339261035a928a928a928a921690600401610c9d565b600060405180830381600087803b15801561037457600080fd5b505af1158015610388573d6000803e3d6000fd5b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038516179055509095945050505050565b6000546001600160a01b031633146104095760405162461bcd60e51b815260040161029b90610c68565b61041360006107ed565b565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156104e557838290600052602060002001805461045890610c2d565b80601f016020809104026020016040519081016040528092919081815260200182805461048490610c2d565b80156104d15780601f106104a6576101008083540402835291602001916104d1565b820191906000526020600020905b8154815290600101906020018083116104b457829003601f168201915b505050505081526020019060010190610439565b50505050905090565b600181815481106104fe57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146105425760405162461bcd60e51b815260040161029b90610c68565b600480546001810182556000919091528151610585917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190602084019061083d565b5050565b606060018054806020026020016040519081016040528092919081815260200182805480156105e157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c3575b5050505050905090565b6000546001600160a01b031633146106155760405162461bcd60e51b815260040161029b90610c68565b6001600160a01b038116610693576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f2061646472657373606482015260840161029b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106df5760405162461bcd60e51b815260040161029b90610c68565b6001600160a01b0381166107445760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029b565b61074d816107ed565b50565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166107e85760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161029b565b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461084990610c2d565b90600052602060002090601f01602090048101928261086b57600085556108b1565b82601f1061088457805160ff19168380011785556108b1565b828001600101855582156108b1579182015b828111156108b1578251825591602001919060010190610896565b506108bd9291506108c1565b5090565b5b808211156108bd57600081556001016108c2565b6000602082840312156108e857600080fd5b5035919050565b6000815180845260005b81811015610915576020818501810151868301820152016108f9565b81811115610927576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061094f60208301846108ef565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561099557610995610956565b604052919050565b600082601f8301126109ae57600080fd5b813567ffffffffffffffff8111156109c8576109c8610956565b6109db601f8201601f191660200161096c565b8181528460208386010111156109f057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610a2257600080fd5b833567ffffffffffffffff80821115610a3a57600080fd5b610a468783880161099d565b9450602091508186013563ffffffff81168114610a6257600080fd5b9350604086013581811115610a7657600080fd5b8601601f81018813610a8757600080fd5b803582811115610a9957610a99610956565b8060051b610aa885820161096c565b918252828101850191858101908b841115610ac257600080fd5b86850192505b83831015610afe57823586811115610ae05760008081fd5b610aee8d898389010161099d565b8352509186019190860190610ac8565b809750505050505050509250925092565b600082825180855260208086019550808260051b84010181860160005b84811015610b5a57601f19868403018952610b488383516108ef565b98840198925090830190600101610b2c565b5090979650505050505050565b60208152600061094f6020830184610b0f565b600060208284031215610b8c57600080fd5b813567ffffffffffffffff811115610ba357600080fd5b610baf8482850161099d565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610bf85783516001600160a01b031683529284019291840191600101610bd3565b50909695505050505050565b600060208284031215610c1657600080fd5b81356001600160a01b038116811461094f57600080fd5b600181811c90821680610c4157607f821691505b60208210811415610c6257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b608081526000610cb060808301876108ef565b63ffffffff861660208401528281036040840152610cce8186610b0f565b91505060018060a01b03831660608301529594505050505056fea2646970667358221220140883416b6854a96531a730022c7da28d0b70e2eac81813b0e59fb68ea1619464736f6c63430008090033";

type BallotFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BallotFactory__factory extends ContractFactory {
  constructor(...args: BallotFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementationAddress: string,
    _votingProxyAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BallotFactory> {
    return super.deploy(
      _implementationAddress,
      _votingProxyAddress,
      overrides || {}
    ) as Promise<BallotFactory>;
  }
  override getDeployTransaction(
    _implementationAddress: string,
    _votingProxyAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _implementationAddress,
      _votingProxyAddress,
      overrides || {}
    );
  }
  override attach(address: string): BallotFactory {
    return super.attach(address) as BallotFactory;
  }
  override connect(signer: Signer): BallotFactory__factory {
    return super.connect(signer) as BallotFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotFactoryInterface {
    return new utils.Interface(_abi) as BallotFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BallotFactory {
    return new Contract(address, _abi, signerOrProvider) as BallotFactory;
  }
}
