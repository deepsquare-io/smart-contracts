/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BallotFactory,
  BallotFactoryInterface,
} from "../../../contracts/factories/BallotFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_masterAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addTag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ballotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTags",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setMasterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tags",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f3c380380610f3c83398101604081905261002f9161012d565b610038336100dd565b6001600160a01b0381166100b85760405162461bcd60e51b815260206004820152603860248201527f42616c6c6f74466163746f72793a204d6173746572206164647265737320736860448201527f6f756c64206e6f74206265207a65726f20616464726573730000000000000000606482015260840160405180910390fd5b600280546001600160a01b0319166001600160a01b039290921691909117905561015d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013f57600080fd5b81516001600160a01b038116811461015657600080fd5b9392505050565b610dd08061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063995d9ab711610071578063995d9ab714610130578063a7a9845314610145578063d365a08e14610158578063de0cc45b1461016b578063eb87c6dc1461017e578063f2fde38b1461019357600080fd5b806320822abc146100ae57806324db32ac146100d75780635d06a61114610102578063715018a6146101175780638da5cb5b1461011f575b600080fd5b6100c16100bc36600461096d565b6101a6565b6040516100ce91906109e2565b60405180910390f35b6100ea6100e5366004610ab3565b610252565b6040516001600160a01b0390911681526020016100ce565b610115610110366004610bb5565b610513565b005b6101156105dd565b6000546001600160a01b03166100ea565b610138610613565b6040516100ce9190610c36565b6100ea61015336600461096d565b6106ec565b6002546100ea906001600160a01b031681565b610115610179366004610c49565b610716565b610186610787565b6040516100ce9190610c86565b6101156101a1366004610bb5565b6107e9565b600381815481106101b657600080fd5b9060005260206000200160009150905080546101d190610cd3565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd90610cd3565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b505050505081565b600080546001600160a01b031633146102865760405162461bcd60e51b815260040161027d90610d0e565b60405180910390fd5b60035463ffffffff8416106102eb5760405162461bcd60e51b815260206004820152602560248201527f42616c6c6f74466163746f72793a2054616720696e64657820697320746f6f206044820152643434b3b41760d91b606482015260840161027d565b600254604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81526bffffffffffffffffffffffff19606083901b1660148201526e5af43d82803e903d91602b57fd5bf360881b60288201526000916001600160a01b03169060378184f09250506001600160a01b0382166103bb5760405162461bcd60e51b815260206004820152602b60248201527f42616c6c6f74466163746f72793a2042616c6c6f7420636c6f6e65206372656160448201526a1d1a5bdb8819985a5b195960aa1b606482015260840161027d565b6000826001600160a01b03168787876040516024016103dc93929190610d43565b60408051601f198184030181529181526020820180516001600160e01b031663c1d1d5c160e01b179052516104119190610d7e565b6000604051808303816000865af19150503d806000811461044e576040519150601f19603f3d011682016040523d82523d6000602084013e610453565b606091505b50509050806104bf5760405162461bcd60e51b815260206004820152603260248201527f42616c6c6f74466163746f72793a2042616c6c6f7420636c6f6e6520696e697460448201527134b0b634bd30ba34b7b7103330b4b632b21760711b606482015260840161027d565b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b038316179055949350505050565b6000546001600160a01b0316331461053d5760405162461bcd60e51b815260040161027d90610d0e565b6002546001600160a01b03166105bb5760405162461bcd60e51b815260206004820152603860248201527f42616c6c6f74466163746f72793a204d6173746572206164647265737320736860448201527f6f756c64206e6f74206265207a65726f20616464726573730000000000000000606482015260840161027d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106075760405162461bcd60e51b815260040161027d90610d0e565b6106116000610884565b565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156106e357838290600052602060002001805461065690610cd3565b80601f016020809104026020016040519081016040528092919081815260200182805461068290610cd3565b80156106cf5780601f106106a4576101008083540402835291602001916106cf565b820191906000526020600020905b8154815290600101906020018083116106b257829003601f168201915b505050505081526020019060010190610637565b50505050905090565b600181815481106106fc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107405760405162461bcd60e51b815260040161027d90610d0e565b600380546001810182556000919091528151610783917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019060208401906108d4565b5050565b606060018054806020026020016040519081016040528092919081815260200182805480156107df57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107c1575b5050505050905090565b6000546001600160a01b031633146108135760405162461bcd60e51b815260040161027d90610d0e565b6001600160a01b0381166108785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027d565b61088181610884565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546108e090610cd3565b90600052602060002090601f0160209004810192826109025760008555610948565b82601f1061091b57805160ff1916838001178555610948565b82800160010185558215610948579182015b8281111561094857825182559160200191906001019061092d565b50610954929150610958565b5090565b5b808211156109545760008155600101610959565b60006020828403121561097f57600080fd5b5035919050565b60005b838110156109a1578181015183820152602001610989565b838111156109b0576000848401525b50505050565b600081518084526109ce816020860160208601610986565b601f01601f19169290920160200192915050565b6020815260006109f560208301846109b6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a3b57610a3b6109fc565b604052919050565b600082601f830112610a5457600080fd5b813567ffffffffffffffff811115610a6e57610a6e6109fc565b610a81601f8201601f1916602001610a12565b818152846020838601011115610a9657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610ac857600080fd5b833567ffffffffffffffff80821115610ae057600080fd5b610aec87838801610a43565b9450602091508186013563ffffffff81168114610b0857600080fd5b9350604086013581811115610b1c57600080fd5b8601601f81018813610b2d57600080fd5b803582811115610b3f57610b3f6109fc565b8060051b610b4e858201610a12565b918252828101850191858101908b841115610b6857600080fd5b86850192505b83831015610ba457823586811115610b865760008081fd5b610b948d8983890101610a43565b8352509186019190860190610b6e565b809750505050505050509250925092565b600060208284031215610bc757600080fd5b81356001600160a01b03811681146109f557600080fd5b600082825180855260208086019550808260051b84010181860160005b84811015610c2957601f19868403018952610c178383516109b6565b98840198925090830190600101610bfb565b5090979650505050505050565b6020815260006109f56020830184610bde565b600060208284031215610c5b57600080fd5b813567ffffffffffffffff811115610c7257600080fd5b610c7e84828501610a43565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610cc75783516001600160a01b031683529284019291840191600101610ca2565b50909695505050505050565b600181811c90821680610ce757607f821691505b60208210811415610d0857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b606081526000610d5660608301866109b6565b63ffffffff851660208401528281036040840152610d748185610bde565b9695505050505050565b60008251610d90818460208701610986565b919091019291505056fea2646970667358221220a703cb04af933609306a91e4c37c378497742fc05144c888a5b1d1d28098c69e64736f6c63430008090033";

type BallotFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BallotFactory__factory extends ContractFactory {
  constructor(...args: BallotFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _masterAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BallotFactory> {
    return super.deploy(
      _masterAddress,
      overrides || {}
    ) as Promise<BallotFactory>;
  }
  override getDeployTransaction(
    _masterAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_masterAddress, overrides || {});
  }
  override attach(address: string): BallotFactory {
    return super.attach(address) as BallotFactory;
  }
  override connect(signer: Signer): BallotFactory__factory {
    return super.connect(signer) as BallotFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotFactoryInterface {
    return new utils.Interface(_abi) as BallotFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BallotFactory {
    return new Contract(address, _abi, signerOrProvider) as BallotFactory;
  }
}
