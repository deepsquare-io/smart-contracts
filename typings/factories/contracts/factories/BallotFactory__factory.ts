/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BallotFactory,
  BallotFactoryInterface,
} from "../../../contracts/factories/BallotFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementationAddress",
        type: "address",
      },
      {
        internalType: "contract BallotTagManager",
        name: "_ballotTagManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ballotAddress",
        type: "address",
      },
    ],
    name: "BallotCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ballotAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ballotTagManager",
    outputs: [
      {
        internalType: "contract BallotTagManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "tagIndex",
        type: "uint32",
      },
      {
        internalType: "string[]",
        name: "_choices",
        type: "string[]",
      },
    ],
    name: "createBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBallots",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementationAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setImplementationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d4d380380610d4d83398101604081905261002f916101de565b61003833610176565b6001600160a01b0382166100bb576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f206164647265737360648201526084015b60405180910390fd5b6001600160a01b0381166101455760405162461bcd60e51b8152602060048201526044602482018190527f42616c6c6f74466163746f72793a2042616c6c6f7420746167206d616e616765908201527f7220616464726573732073686f756c64206e6f74206265207a65726f206164646064820152637265737360e01b608482015260a4016100b2565b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055610218565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101db57600080fd5b50565b600080604083850312156101f157600080fd5b82516101fc816101c6565b602084015190925061020d816101c6565b809150509250929050565b610b26806102276000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a7a9845311610066578063a7a98453146100f6578063b97a231914610109578063eb87c6dc1461011c578063ecade2f014610131578063f2fde38b1461014457600080fd5b806324db32ac146100985780633e7ee19f146100ad578063715018a6146100dd5780638da5cb5b146100e5575b600080fd5b6100ab6100a636600461076d565b610157565b005b6003546100c0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab610370565b6000546001600160a01b03166100c0565b6100c061010436600461085d565b6103a6565b6002546100c0906001600160a01b031681565b6101246103d0565b6040516100d49190610876565b6100ab61013f3660046108c3565b610432565b6100ab6101523660046108c3565b6104fc565b6000546001600160a01b0316331461018a5760405162461bcd60e51b8152600401610181906108f3565b60405180910390fd5b6003546040805163995d9ab760e01b8152905163ffffffff8516926001600160a01b03169163995d9ab7916004808301926000929190829003018186803b1580156101d457600080fd5b505afa1580156101e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102109190810190610958565b511161026c5760405162461bcd60e51b815260206004820152602560248201527f42616c6c6f74466163746f72793a2054616720696e64657820697320746f6f206044820152643434b3b41760d91b6064820152608401610181565b600254600090610284906001600160a01b0316610597565b60405163c1d1d5c160e01b81529091506001600160a01b0382169063c1d1d5c1906102b790879087908790600401610a71565b600060405180830381600087803b1580156102d157600080fd5b505af11580156102e5573d6000803e3d6000fd5b50506001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385169081179091556040519081527f165f4a0bebf649c196135ba0519a9a51da33d33a9e4d096b71050c2c97ec670f9250602001905060405180910390a150505050565b6000546001600160a01b0316331461039a5760405162461bcd60e51b8152600401610181906108f3565b6103a46000610634565b565b600181815481106103b657600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600180548060200260200160405190810160405280929190818152602001828054801561042857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161040a575b5050505050905090565b6000546001600160a01b0316331461045c5760405162461bcd60e51b8152600401610181906108f3565b6001600160a01b0381166104da576040805162461bcd60e51b81526020600482015260248101919091527f42616c6c6f74466163746f72793a20496d706c656d656e746174696f6e20616460448201527f64726573732073686f756c64206e6f74206265207a65726f20616464726573736064820152608401610181565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105265760405162461bcd60e51b8152600401610181906108f3565b6001600160a01b03811661058b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610181565b61059481610634565b50565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b03811661062f5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610181565b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106c3576106c3610684565b604052919050565b600067ffffffffffffffff8211156106e5576106e5610684565b50601f01601f191660200190565b600082601f83011261070457600080fd5b8135610717610712826106cb565b61069a565b81815284602083860101111561072c57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561076357610763610684565b5060051b60200190565b60008060006060848603121561078257600080fd5b833567ffffffffffffffff8082111561079a57600080fd5b6107a6878388016106f3565b9450602091508186013563ffffffff811681146107c257600080fd5b93506040860135818111156107d657600080fd5b8601601f810188136107e757600080fd5b80356107f561071282610749565b81815260059190911b8201840190848101908a83111561081457600080fd5b8584015b8381101561084c578035868111156108305760008081fd5b61083e8d89838901016106f3565b845250918601918601610818565b508096505050505050509250925092565b60006020828403121561086f57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156108b75783516001600160a01b031683529284019291840191600101610892565b50909695505050505050565b6000602082840312156108d557600080fd5b81356001600160a01b03811681146108ec57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b8381101561094357818101518382015260200161092b565b83811115610952576000848401525b50505050565b6000602080838503121561096b57600080fd5b825167ffffffffffffffff8082111561098357600080fd5b818501915085601f83011261099757600080fd5b81516109a561071282610749565b81815260059190911b830184019084810190888311156109c457600080fd5b8585015b83811015610a38578051858111156109e05760008081fd5b8601603f81018b136109f25760008081fd5b878101516040610a04610712836106cb565b8281528d82848601011115610a195760008081fd5b610a28838c8301848701610928565b86525050509186019186016109c8565b5098975050505050505050565b60008151808452610a5d816020860160208601610928565b601f01601f19169290920160200192915050565b606081526000610a846060830186610a45565b602063ffffffff86168185015283820360408501528185518084528284019150828160051b85010183880160005b83811015610ae057601f19878403018552610ace838351610a45565b94860194925090850190600101610ab2565b50909a995050505050505050505056fea26469706673582212202a23348d5e6fa6e233f30166087a7e20ef01425cbe19718950bc1da2bed511e664736f6c63430008090033";

type BallotFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BallotFactory__factory extends ContractFactory {
  constructor(...args: BallotFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementationAddress: string,
    _ballotTagManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BallotFactory> {
    return super.deploy(
      _implementationAddress,
      _ballotTagManager,
      overrides || {}
    ) as Promise<BallotFactory>;
  }
  override getDeployTransaction(
    _implementationAddress: string,
    _ballotTagManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _implementationAddress,
      _ballotTagManager,
      overrides || {}
    );
  }
  override attach(address: string): BallotFactory {
    return super.attach(address) as BallotFactory;
  }
  override connect(signer: Signer): BallotFactory__factory {
    return super.connect(signer) as BallotFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotFactoryInterface {
    return new utils.Interface(_abi) as BallotFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BallotFactory {
    return new Contract(address, _abi, signerOrProvider) as BallotFactory;
  }
}
