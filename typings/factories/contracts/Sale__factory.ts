/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sale, SaleInterface } from "../../contracts/Sale";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "_DPS",
        type: "address",
      },
      {
        internalType: "contract IERC20Metadata",
        name: "_STC",
        type: "address",
      },
      {
        internalType: "contract Eligibility",
        name: "_eligibility",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "_aggregator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_rate",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_minimumPurchaseSTC",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialSold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountDPS",
        type: "uint256",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    inputs: [],
    name: "DPS",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STC",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountAVAX",
        type: "uint256",
      },
    ],
    name: "convertAVAXtoSTC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountDPS",
        type: "uint256",
      },
    ],
    name: "convertDPStoSTC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountSTC",
        type: "uint256",
      },
    ],
    name: "convertSTCtoDPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountSTC",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "deliverDPS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eligibility",
    outputs: [
      {
        internalType: "contract IEligibility",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumPurchaseSTC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseDPSWithAVAX",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountSTC",
        type: "uint256",
      },
    ],
    name: "purchaseDPSWithSTC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "raised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "newAggregator",
        type: "address",
      },
    ],
    name: "setAggregator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162001d9738038062001d978339810160408190526200003591620002b7565b62000040336200024e565b6001600160a01b0387166200009c5760405162461bcd60e51b815260206004820152601360248201527f53616c653a20746f6b656e206973207a65726f0000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038616620000f45760405162461bcd60e51b815260206004820152601860248201527f53616c653a20737461626c65636f696e206973207a65726f0000000000000000604482015260640162000093565b6001600160a01b0385166200014c5760405162461bcd60e51b815260206004820152601960248201527f53616c653a20656c69676962696c697479206973207a65726f00000000000000604482015260640162000093565b6001600160a01b038416620001a45760405162461bcd60e51b815260206004820152601860248201527f53616c653a2061676772656761746f72206973207a65726f0000000000000000604482015260640162000093565b60008360ff1611620001f95760405162461bcd60e51b815260206004820152601a60248201527f53616c653a2072617465206973206e6f7420706f736974697665000000000000604482015260640162000093565b6001600160a01b0396871660805294861660a05292851660c052600180546001600160a01b031916929095169190911790935560ff90921660e052610100919091526002556003805460ff191690556200034f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620002b457600080fd5b50565b600080600080600080600060e0888a031215620002d357600080fd5b8751620002e0816200029e565b6020890151909750620002f3816200029e565b604089015190965062000306816200029e565b606089015190955062000319816200029e565b608089015190945060ff811681146200033157600080fd5b8093505060a0880151915060c0880151905092959891949750929550565b60805160a05160c05160e0516101005161198562000412600039600081816103a4015281816104ed0152610e6c0152600081816102230152818161090b0152610ace015260008181610175015261111d01526000818161027e0152818161056b0152818161086f01528181610af201528181610d5a01526112a30152600081816103e00152818161066d015281816106c1015281816107e40152818161092f01528181610a3001528181611217015281816113cc01526114dc01526119856000f3fe6080604052600436106101355760003560e01c80638da5cb5b116100ab578063cc2d9e181161006f578063cc2d9e1814610392578063cdc88866146103c6578063ef4e06ec146103ce578063f0ea4bfc14610402578063f2fde38b14610417578063f9120af61461043757600080fd5b80638da5cb5b146102ea57806398a8f50314610308578063b187bd2614610328578063bedb86fb14610352578063c67271491461037257600080fd5b80632c4e722e116100fd5780632c4e722e1461021157806343d726d614610257578063542e898e1461026c57806355234ec0146102a057806355468cc0146102b5578063715018a6146102d557600080fd5b806302c7e7af1461013a5780630dc14000146101635780631dc4b1f3146101af578063245a7bfc146101d157806324e53901146101f1575b600080fd5b34801561014657600080fd5b5061015060025481565b6040519081526020015b60405180910390f35b34801561016f57600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015a565b3480156101bb57600080fd5b506101cf6101ca366004611605565b610457565b005b3480156101dd57600080fd5b50600154610197906001600160a01b031681565b3480156101fd57600080fd5b506101cf61020c366004611635565b6104a7565b34801561021d57600080fd5b506102457f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161015a565b34801561026357600080fd5b506101cf610641565b34801561027857600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ac57600080fd5b506101506107cc565b3480156102c157600080fd5b506101506102d0366004611635565b61086b565b3480156102e157600080fd5b506101cf6109f8565b3480156102f657600080fd5b506000546001600160a01b0316610197565b34801561031457600080fd5b50610150610323366004611635565b610a2c565b34801561033457600080fd5b506003546103429060ff1681565b604051901515815260200161015a565b34801561035e57600080fd5b506101cf61036d36600461165c565b610ba0565b34801561037e57600080fd5b5061015061038d366004611635565b610bdd565b34801561039e57600080fd5b506101507f000000000000000000000000000000000000000000000000000000000000000081565b6101cf610e19565b3480156103da57600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b34801561040e57600080fd5b50610150610fa6565b34801561042357600080fd5b506101cf610432366004611679565b610fb3565b34801561044357600080fd5b506101cf610452366004611679565b61104e565b6000546001600160a01b0316331461048a5760405162461bcd60e51b815260040161048190611696565b60405180910390fd5b6000610496828461109a565b90506104a2828261149f565b505050565b60035460ff16156104eb5760405162461bcd60e51b815260206004820152600e60248201526d14d85b19481a5cc81c185d5cd95960921b6044820152606401610481565b7f000000000000000000000000000000000000000000000000000000000000000081101561055b5760405162461bcd60e51b815260206004820152601f60248201527f53616c653a20616d6f756e74206c6f776572207468616e206d696e696d756d006044820152606401610481565b6000610567338361109a565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166323b872dd336105ab6000546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101859052606401602060405180830381600087803b1580156105fa57600080fd5b505af115801561060e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063291906116cb565b5061063d338261149f565b5050565b6000546001600160a01b0316331461066b5760405162461bcd60e51b815260040161048190611696565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6106ac6000546001600160a01b031690565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561070b57600080fd5b505afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074391906116e8565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561078957600080fd5b505af115801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c191906116cb565b506107ca6109f8565b565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086691906116e8565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190611717565b61090990600a61182c565b7f000000000000000000000000000000000000000000000000000000000000000060ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561098657600080fd5b505afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be9190611717565b6109c990600a61182c565b6109d3908561183b565b6109de90606461183b565b6109e8919061185a565b6109f2919061185a565b92915050565b6000546001600160a01b03163314610a225760405162461bcd60e51b815260040161048190611696565b6107ca60006115a0565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8757600080fd5b505afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190611717565b610aca90600a61182c565b60647f000000000000000000000000000000000000000000000000000000000000000060ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4957600080fd5b505afa158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b819190611717565b610b8c90600a61182c565b610b96908661183b565b6109de919061183b565b6000546001600160a01b03163314610bca5760405162461bcd60e51b815260040161048190611696565b6003805460ff1916911515919091179055565b600080600160009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610c2e57600080fd5b505afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c669190611896565b50505091505060008113610cbc5760405162461bcd60e51b815260206004820152601f60248201527f53616c653a20616e737765722063616e6e6f74206265206e65676174697665006044820152606401610481565b600160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0a57600080fd5b505afa158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d429190611717565b610d4d9060126118e6565b610d5890600a61182c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610db157600080fd5b505afa158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de99190611717565b610df490600a61182c565b610dfe838661183b565b610e08919061183b565b610e12919061185a565b9392505050565b60035460ff1615610e5d5760405162461bcd60e51b815260206004820152600e60248201526d14d85b19481a5cc81c185d5cd95960921b6044820152606401610481565b6000610e6834610bdd565b90507f0000000000000000000000000000000000000000000000000000000000000000811015610eda5760405162461bcd60e51b815260206004820152601f60248201527f53616c653a20616d6f756e74206c6f776572207468616e206d696e696d756d006044820152606401610481565b6000610ee6338361109a565b90506000610efc6000546001600160a01b031690565b6001600160a01b03163460405160006040518083038185875af1925050503d8060008114610f46576040519150601f19603f3d011682016040523d82523d6000602084013e610f4b565b606091505b5050905080610f9c5760405162461bcd60e51b815260206004820152601c60248201527f53616c653a206661696c656420746f20666f72776172642041564158000000006044820152606401610481565b6104a2338361149f565b6000610866600254610a2c565b6000546001600160a01b03163314610fdd5760405162461bcd60e51b815260040161048190611696565b6001600160a01b0381166110425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610481565b61104b816115a0565b50565b6000546001600160a01b031633146110785760405162461bcd60e51b815260040161048190611696565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b03848116911614156110f95760405162461bcd60e51b815260206004820181905260248201527f53616c653a20696e766573746f72206973207468652073616c65206f776e65726044820152606401610481565b604051636a5b5aed60e11b81526001600160a01b03848116600483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063d4b6b5da906024016040805180830381600087803b15801561116057600080fd5b505af1158015611174573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611198919061190b565b9150915060008260ff16116111ef5760405162461bcd60e51b815260206004820152601d60248201527f53616c653a206163636f756e74206973206e6f7420656c696769626c650000006044820152606401610481565b6040516370a0823160e01b81526001600160a01b0386811660048301526000918691611293917f0000000000000000000000000000000000000000000000000000000000000000909116906370a082319060240160206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032391906116e8565b61129d9190611937565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156112fa57600080fd5b505afa15801561130e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113329190611717565b61133d90600a61182c565b611347908461183b565b9050801561139f578082111561139f5760405162461bcd60e51b815260206004820152601860248201527f53616c653a20657863656564732074696572206c696d697400000000000000006044820152606401610481565b60006113aa8761086b565b6040516370a0823160e01b815230600482015290915081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561140e57600080fd5b505afa158015611422573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144691906116e8565b10156114945760405162461bcd60e51b815260206004820181905260248201527f53616c653a206e6f20656e6f75676820746f6b656e732072656d61696e696e676044820152606401610481565b979650505050505050565b80600260008282546114b19190611937565b909155505060405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561152057600080fd5b505af1158015611534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155891906116cb565b50816001600160a01b03167f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f6328260405161159491815260200190565b60405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461104b57600080fd5b6000806040838503121561161857600080fd5b82359150602083013561162a816115f0565b809150509250929050565b60006020828403121561164757600080fd5b5035919050565b801515811461104b57600080fd5b60006020828403121561166e57600080fd5b8135610e128161164e565b60006020828403121561168b57600080fd5b8135610e12816115f0565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156116dd57600080fd5b8151610e128161164e565b6000602082840312156116fa57600080fd5b5051919050565b805160ff8116811461171257600080fd5b919050565b60006020828403121561172957600080fd5b610e1282611701565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561178357816000190482111561176957611769611732565b8085161561177657918102915b93841c939080029061174d565b509250929050565b60008261179a575060016109f2565b816117a7575060006109f2565b81600181146117bd57600281146117c7576117e3565b60019150506109f2565b60ff8411156117d8576117d8611732565b50506001821b6109f2565b5060208310610133831016604e8410600b8410161715611806575081810a6109f2565b6118108383611748565b806000190482111561182457611824611732565b029392505050565b6000610e1260ff84168361178b565b600081600019048311821515161561185557611855611732565b500290565b60008261187757634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461171257600080fd5b600080600080600060a086880312156118ae57600080fd5b6118b78661187c565b94506020860151935060408601519250606086015191506118da6080870161187c565b90509295509295909350565b600060ff821660ff84168060ff0382111561190357611903611732565b019392505050565b6000806040838503121561191e57600080fd5b61192783611701565b9150602083015190509250929050565b6000821982111561194a5761194a611732565b50019056fea26469706673582212206581adb451fb708058147419272b6077d20267c6334370ba56dacbd94493c06c64736f6c63430008090033";

type SaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sale__factory extends ContractFactory {
  constructor(...args: SaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _DPS: string,
    _STC: string,
    _eligibility: string,
    _aggregator: string,
    _rate: BigNumberish,
    _minimumPurchaseSTC: BigNumberish,
    _initialSold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sale> {
    return super.deploy(
      _DPS,
      _STC,
      _eligibility,
      _aggregator,
      _rate,
      _minimumPurchaseSTC,
      _initialSold,
      overrides || {}
    ) as Promise<Sale>;
  }
  override getDeployTransaction(
    _DPS: string,
    _STC: string,
    _eligibility: string,
    _aggregator: string,
    _rate: BigNumberish,
    _minimumPurchaseSTC: BigNumberish,
    _initialSold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _DPS,
      _STC,
      _eligibility,
      _aggregator,
      _rate,
      _minimumPurchaseSTC,
      _initialSold,
      overrides || {}
    );
  }
  override attach(address: string): Sale {
    return super.attach(address) as Sale;
  }
  override connect(signer: Signer): Sale__factory {
    return super.connect(signer) as Sale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaleInterface {
    return new utils.Interface(_abi) as SaleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sale {
    return new Contract(address, _abi, signerOrProvider) as Sale;
  }
}
